This study presents a graph parser that focuses on interpreting the structures found in a semantic and cognitive annotation system, like those seen in the UCCA datasets. The authors start by describing the traits they think a semantic annotation system should have; 1. Use a graph structure (which allows tokens/nodes to have multiple governing elements). 2. Include terminal nodes (to show intricate structures like coordinate phrases or multiword expressions). 3. Support disconnected elements (, for example verbs with particles). Importantly these principles are not exclusively linked to a semantic framework and could be used for syntax or other representation layers. The authors place their research in the framework of semantic parsing and introduce UCCA as their preferred annotation method before detailing three different sets of parsing experiments; (1.) phrase based parsing with the Stanford parser along with UCCA to conversion into constituency format; (2.) dependency parsing with UCCA to dependency conversion;. 3.) Their key innovation – experiments showcasing the effectiveness of their transition based graph parser, for direct UCCA graph parsing. 
Although I was intrigued by this piece of work. Found it fascinating. However I have some empirical concerns that should be dealt with before it can be published.
The authors suggest that they are the pioneers in introducing a parser for a focused system such as UCCA – and technically speaking that is correct; however the specific structural and semantic features of UCCA graphs (such as ambiguous arguments and labels, like "Process" or "State") are not directly tackled in their transition sets alone. It could be argued that even managing edges could potentially be incorporated into current transitions by adjusting the label set – perhaps through the utilization of affixes. When looking at the issue from a graph parsing perspective there have been studies inspired by the SemEval shared tasks from 2014 to 2015 (such as those conducted by Almeida and Martins in 2014 and 2015 as well as Ribeyre et al. in the same years). These studies have introduced enhancements to transition based graph parsers or variations of complex models that might have relevance for UCCA applications. The authors’ focus on feature patterns links their approach to UCCA but these features seem to have less impact compared to simpler ones, like individual words and frequency based characteristics. I am surprised that despite having access to these graph parsers [1 and 2] they were not utilized as reference points or for comparison purposes in the research. The phrase based tests with UParse could have been cross checked with a different parser like the one suggested by Fernandez Gonzalez and Martins (2015) which delivers parsing performance similar, to UParse resembling LCFRS (note; the initial mention of UParse is absent).
UCCA provides a perspective on syntactic and semantic structures compared to many SDP treebanks; it would have been beneficial to assess the parser using similar metrics used in related tasks for a fair evaluation in todays competitive environment, with various systems and datasets available. I do think the paper is intriguing and with the field going through changes now I think it's worth talking about at a conference such, as CoNNL. 
Additional reminders (, in no order); 
Kindly introduce the concept of "grounded semantic'' earlier, in the document before reaching page 2 as it is referenced prematurely without proper elaboration. 
Have you thought about using an approach, with detailed node labels and carried over data in your analysis before training and parsing with the Berkeley parser software tool for a more solid starting point? 
It seems like switching over the surface dependency treess a bit excessive since it causes a noticeable drop in information quality. A detailed conversion method, like the one suggested by Schluter et al (2014) in SemEval SDP would have been a better choice. 
Could you provide details, about the idea that "In UCCA graphs there may be elements that are not explicitly mentioned in the text"? Offering an example or reference would make it easier to understand this concept. 
You talk about approaches such as MRS and DRT and wonder if UCCA can handle quantifier scope information too.That limitation puts UCCA on par with syntax focused frameworks.While UCCA is more conceptual than DM and perhaps less detailed, than the layer of PCEDTHow practical and easy to understand is it really based on the performance results shared An examination of errors could shed light on these queries
Your suggested principles seem versatile and ad hoc; however adding them to a more comprehensive and clearer introduction would enhance their effectiveness overall in the context of this papers argumentative focus on parser capabilities for UCCA processing and model suitability for semantic analysis, with a hint of a semantic oriented scheme that is parsable. 
Check out this link to the DAGParser project, on Corentin Ribeyres website; http;//www.corentinribeyre.fr/projects/view/DAGParser   
Visit the TurboParser GitHub repository at the link [https;//github.com/beautifulmind/TurboParser](https;//github.com/beautifulmind/TurboParser) for information, including the Semeval 2014 dataset available, at [https;//github.com/beautifulmind/TurboParser/semeval2014_data](https;//github.com/beautifulmind/TurboParser/semeval2014_data).