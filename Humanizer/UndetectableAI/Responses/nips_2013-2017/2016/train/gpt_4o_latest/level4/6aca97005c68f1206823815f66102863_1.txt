The research paper presents a way to replace traditional Monte Carlo methods for Approximate Bayesian Computation with an approach based on Bayesian density estimation techniques instead. While density estimation has been used before in the context of ABC applications in the past this approach allows for substituting sample based approximations of posterior distributions with analytical ones. This innovative method is comparable in significance to using inference with ABC although the methodology employed here differs distinctly from that approach. Reference; Tran et al., 2015. "Variational Bayes, with Likelihood." 
The article is nicely. Easy for anyone to understand without being too technical or overwhelming with extra information that isn't needed for experts in the field of study. Even though the research heavily relies on studies and findings the core concept of Proposition 1 is effectively utilized throughout the paper both in choosing the initial proposal and, in estimating the outcome accurately. Moreover the paper introduces some useful ideas like expanding MDN with SVI techniques. The authors should also consider discussing research on employing SVI in ABC;, for instance [reference Ì€].
The paper doesn't have a theoretical basis beyond the asymptotic justification in Proposition 1 for the suggested algorithm. However I find this to be reasonable for a paper, like this one especially considering the limitations of the NIPS format [where its unlikely that detailed theoretical explanations, experiments and model descriptions could all fit within an eight page limit].
The results of the experiment nicely balance examples with challenging datasets and are explained clearly in the presentation. I like how the authors separate out the influence of selecting the proposal distribution from approximating the posterior. Although the graphs try to consider the sample size I'm not sure this is the best measure to use. Given that samples here're created purely for computational purposes it might be more relevant to assess real CPU time. 