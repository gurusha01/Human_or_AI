This paper discusses using bidirectional Monte Carlo (BDMC) to estimate the J S divergence between an MCMC sampler and its target distribution in the context of debugging and evaluating MCMC implementations in programming languages (PPLs). I am intrigued by the idea of utilizing BDMC to detect convergence issues in samplers. This approach seems promising given the limitations of MCMC diagnostics systems are apparent [3][4]. Previous studies [5][6] that assess MCMC samplers by testing them against data generated from the distribution are also relevant, in this discussion.   
I found it challenging to understand the explanation, in this section 3 part 3 part one part one point point one. One example is that the function q is mentioned without a definition beforehand. From the context it appears to be describing the distribution of the AIS sampler after taking T steps but this needs to be explained more clearly. Although the additional materials offer some clarification the main text should stand alone without readers needing to refer to supplementary content in order to grasp the main concepts. It would be beneficial to provide an concise guide on how to put the suggested approach into action instead of expecting readers to piece together information, from scattered details.   
Some thoughts, on this; I don't think we really need to treat z and Î˜ as distinct variables here since they're always linked together in this context anyway. Also noticed a missing ')' on line 165. A heads up!  
The paper "Getting it right" by Gewek (2004) discusses joint distribution tests of simulators in the Journal of the American Statistical Association (Vol 99 Issue 467). You can find the article at http;//doi.org/.  
The study by Cook et al. published in the Journal of Computational and Graphical Statistics in 2012 and titled "Validation of software for models using posterior quantiles " explores validating software, for Bayesian models through posterior quantiles analysis (pp 675 692). You can access the article at http;//doi.org / 10.1198 /106186006 X136976. 