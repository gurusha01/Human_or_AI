This paper presents the Retro Learning Environment (RLE) a framework designed for reinforcement learning that specifically targets Super Nintendo and potentially other platforms, like the Arcade Learning Environment (ALE). The authors showcase performance outcomes of known algorithms in five fresh Super Nintendo games and evaluate them using a newly introduced "rivalry metric."
The advancement of settings and assessment approaches through initiatives like public datasets and competitions has long been vital in pushing forward AI and machine learning research quality levels significantly higher. One prominent instance is the Atari Learning Environment (ALE) which now serves as a standard for evaluating algorithms and outcomes. Within this framework the RLE could offer an addition, to the discipline by introducing fresh complex research domains. 
The main focus of this paper is on introducing the RLE framework and stressing the significance of delving into areas instead of focusing solely on groundbreaking experimental outcomes. The experiments mainly revolve around established algorithms and present interesting discoveries regarding the advantages of reward shaping and policy shaping strategies like favoritism towards moving in Super Mario game settings. Although these results underscore the importance of domain expertise, in decision making processes this observation may seem straightforward. The idea of practicing against a competitor is fascinating because it suggests that focusing solely on one opponent can result in learning too well for that specific match up and forgetting how to adapt to the games built in artificial intelligence, for assessments purposes. 
I was a bit let down by the part of the paper that talks about the findings and rivalry trainingâ€”it seemed a bit unrefined, to me and not as exciting as I had expected it to be considering the introduction of the RLE. It's not certain if publishing this contribution is needed or not; also unsure if ICLR is the place for this work since the main focus is on creating new code which could be better featured on platforms like mloss.org or, through the journal track of JML'R. 