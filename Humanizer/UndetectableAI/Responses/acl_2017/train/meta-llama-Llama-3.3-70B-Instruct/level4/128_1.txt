This study introduces a network design that integrates linguistic structure insights into a memory network used for tagging sequences in conversation systems. Specifically for slot filling tasks. The method entails representing substructures like nodes in a parse tree as vectors (memory slots) and incorporating a sum of these substructure embeddings as extra context, in a Recurrent Neural Network (RNN) aiding in labeling at each time step. 

The main focus of this paper is on an approach to converting organized information into a set of vectors (referred to as memory) that are then incorporated into the tagger as additional knowledge base material.This idea shares similarities with syntax oriented attention mechanisms like attention over nodes from treeLSTM and is connected to the research conducted by Zhao and colleagues on textual inference,Liu and colleagues on understanding natural language and Eriguchi and colleagues, on machine translation. The suggested substructure encoder has resemblances with the Deep Convolutional Neural Network (DCNN) as described by Ma et al., in which every node is derived from a series of words, in the sequence of ancestor words used for embedding them. While the design may not be entirely groundbreaking in nature; its straightforwardness and utility stand out when compared to studies. 
"Inadequacies"
The results shown based mainly lack details about the basic data points to be fully persuasive and clear, in their presentation of evidence of concern outlined in order of decreasing significance; 
The model we suggest comprises two elements. Sentence embedding and substructure embedding as outlined in Table 1 of the study report. The Tree Recurrent Neural Network (TreeRNN) and Deep Convolutional Neural Network (DCNN) models are initially crafted for sentence embedding purposes; however they can also be repurposed to generate node/substructure embeddings as needed. Nevertheless​ detailing the methodologies involved in leveraging these models to calculate the two distinct components remains ambiguous. 
The setup utilizes two neural networks (RNN); one based on chains and another guided by knowledge inputting a "knowledge" vector from memory, to the RNN input (as shown in Equations 5 and 8). It seems redundant to assign weights to these two RNN types since the main benefit of employing both is to boost model capacity by having more parameters. It's important to share the hyperparameters and dimensions of the neural networks to ensure they have similar numbers of parameters. 
It might make sense to incorporate a starting point that adds information as attributes to the RNN model like the beginning of every word or findings, from Named Entity Recognition (NER).
Talking about how the model handles parser errors and any findings related to its sensitivity would be helpful, for our discussion. 
Thoughts, on the model; 
Once the substructure embeddings are calculated and ready to go it makes sense to pay attention to them for each word. Using a fixed attention mechanism, for all words needs clarification as the "knowledge base" seems to act as a filter highlighting words thus justifying the inclusion of the baseline mentioned earlier. 
When a words importance is calculated through the combination of the sentence and substructure embeddings using the RNN/CNN model it suggests that nodes and phrases resembling the entire sentence are given more significance.This could have an impact, across all elements of the text structure. 
The paper suggests that the model can be applied to types of information; however mapping subcomponents as a series of words might not be simple for certain kinds of information, like constituent parsing. 
Finally,"knowledge" can be confusing as it usually means worldly knowledge, like a database of entities; however in this situation it relates to syntax or perhaps even semantics if Abstract Meaning Representation (AMRs ) parsing is applied. 
Lets delve into a chat. 
This study introduces a model that seems to show good performance in one dataset; however the main concepts are not especially innovative (as outlined in the strengths section). Given this is an ACL paper readers anticipate profound insights to be shared. Above all else the experiments, as lack persuasiveness and need further elucidation for a more comprehensive evaluation of the findings. 
Following the rebuttal the conversation continued.
The writers did not tackle the issue of how the baselines (like TreeRNN) are employed to calculate substructure embeddings separately from the sentence embedding and the joint taggers usage in their studys context is also a major concern as it involves using two distinct RNN models that increases the number of parameters in their proposed model, beyond that of the baselines. Consequently​lly​scores stay consistent without any improvements being observed. 