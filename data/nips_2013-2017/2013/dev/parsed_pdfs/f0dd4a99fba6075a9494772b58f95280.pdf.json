{
  "name" : "f0dd4a99fba6075a9494772b58f95280.pdf",
  "metadata" : {
    "source" : "META",
    "title" : "Optimization, Learning, and Games with Predictable Sequences",
    "authors" : [ "Alexander Rakhlin", "Karthik Sridharan" ],
    "emails" : [ ],
    "sections" : [ {
      "heading" : "1 Introduction",
      "text" : "Recently, no-regret algorithms have received increasing attention in a variety of communities, including theoretical computer science, optimization, and game theory [3, 1]. The wide applicability of these algorithms is arguably due to the black-box regret guarantees that hold for arbitrary sequences. However, such regret guarantees can be loose if the sequence being encountered is not “worst-case”. The reduction in “arbitrariness” of the sequence can arise from the particular structure of the problem at hand, and should be exploited. For instance, in some applications of online methods, the sequence comes from an additional computation done by the learner, thus being far from arbitrary.\nOne way to formally capture the partially benign nature of data is through a notion of predictable sequences [11]. We exhibit applications of this idea in several domains. First, we show that the Mirror Prox method [9], designed for optimizing non-smooth structured saddle-point problems, can be viewed as an instance of the predictable sequence approach. Predictability in this case is due precisely to smoothness of the inner optimization part and the saddle-point structure of the problem. We extend the results to Hölder-smooth functions, interpolating between the case of well-predictable gradients and “unpredictable” gradients.\nSecond, we address the question raised in [6] about existence of “simple” algorithms that converge at the rate of ˜O(T −1) when employed in an uncoupled manner by players in a zero-sum finite matrix game, yet maintain the usual O(T −12) rate against arbitrary sequences. We give a positive answer and exhibit a fully adaptive algorithm that does not require the prior knowledge of whether the other player is collaborating. Here, the additional predictability comes from the fact that both players attempt to converge to the minimax value. We also tackle a partial information version of the problem where the player has only access to the real-valued payoff of the mixed actions played by the two players on each round rather than the entire vector.\nOur third application is to convex programming: optimization of a linear function subject to convex constraints. This problem often arises in theoretical computer science, and we show that the idea of\npredictable sequences can be used here too. We provide a simple algorithm for ✏-approximate Max Flow for a graph with d edges with time complexity ˜O(d32✏), a performance previously obtained through a relatively involved procedure [8]."
    }, {
      "heading" : "2 Online Learning with Predictable Gradient Sequences",
      "text" : "Let us describe the online convex optimization (OCO) problem and the basic algorithm studied in [4, 11]. Let F be a convex set of moves of the learner. On round t = 1, . . . , T , the learner makes a prediction ft ∈ F and observes a convex function Gt on F . The objective is to keep regret 1\nT ∑Tt=1Gt(ft) −Gt(f∗) small for any f∗ ∈ F . Let R be a 1-strongly convex function w.r.t. some norm  ⋅  on F , and let g\n0 = argming∈F R(g). Suppose that at the beginning of every round t, the learner has access to Mt, a vector computable based on the past observations or side information. In this paper we study the Optimistic Mirror Descent algorithm, defined by the interleaved sequence\nft = argmin f∈F ⌘t f,Mt +DR(f, gt−1) , gt = argming∈F ⌘t g,∇Gt(ft) +DR(g, gt−1) (1)\nwhere DR is the Bregman Divergence with respect to R and {⌘t} is a sequence of step sizes that can be chosen adaptively based on the sequence observed so far. The method adheres to the OCO protocol since Mt is available at the beginning of round t, and ∇Gt(ft) becomes available after the prediction ft is made. The sequence {ft} will be called primary, while {gt} – secondary. This method was proposed in [4] for Mt = ∇Gt−1(ft−1), and the following lemma is a straightforward extension of the result in [11] for general Mt: Lemma 1. Let F be a convex set in a Banach space B. Let R ∶ B → R be a 1-strongly convex function on F with respect to some norm  ⋅ , and let  ⋅ ∗ denote the dual norm. For any fixed step-size ⌘, the Optimistic Mirror Descent Algorithm yields, for any f∗ ∈ F ,\nT t=1Gt(ft) −Gt(f∗) ≤ Tt=1 ft − f∗,∇t\n≤ ⌘−1R2 + T t=1 ∇t −Mt∗ gt − ft − 12⌘ Tt=1 gt − ft2 + gt−1 − ft2 (2)\nwhere R ≥ 0 is such that DR(f∗, g0) ≤ R2 and ∇t = ∇Gt(ft). When applying the lemma, we will often use the simple fact that\n∇t −Mt∗ gt − ft = inf ⇢>0⇢2 ∇t −Mt2∗ + 12⇢ gt − ft2 . (3)\nIn particular, by setting ⇢ = ⌘, we obtain the (unnormalized) regret bound of ⌘−1R2 +(⌘2)∑Tt=1 ∇t −Mt2∗, which is R2∑Tt=1 ∇t −Mt2∗ by choosing ⌘ optimally. Since this choice is not known ahead of time, one may either employ the doubling trick, or choose the step size adaptively:\nCorollary 2. Consider step size ⌘t = Rmaxmin∑t−1i=1 ∇i −Mi2∗ +∑t−2i=1 ∇i −Mi2∗−1 ,1 with R2\nmax = supf,g∈F DR(f, g). Then regret of the Optimistic Mirror Descent algorithm is upper bounded by 3.5R\nmax ∑Tt=1 ∇t −Mt2∗ + 1 T . These results indicate that tighter regret bounds are possible if one can guess the next gradient ∇t by computing Mt. One such case arises in offline optimization of a smooth function, whereby the previous gradient turns out to be a good proxy for the next one. More precisely, suppose we aim to optimize a function G(f)whose gradients are Lipschitz continuous: ∇G(f)−∇G(g)∗ ≤Hf−g for some H > 0. In this optimization setting, no guessing of Mt is needed: we may simply query the oracle for the gradient and set Mt = ∇G(gt−1). The Optimistic Mirror Descent then becomes\nft = argmin f∈F ⌘t f,∇G(gt−1) +DR(f, gt−1) , gt = argming∈F ⌘t g,∇G(ft) +DR(g, gt−1)\nwhich can be recognized as the Mirror Prox method, due to Nemirovski [9]. By smoothness,∇G(ft)−Mt∗ = ∇G(ft)−∇G(gt−1)∗ ≤Hft−gt−1. Lemma 1 with Eq. (3) and ⇢ = ⌘ = 1H immediately yields a bound\nT t=1G(ft) −G(f∗) ≤HR2,\nwhich implies that the average ¯fT = 1T ∑Tt=1 ft satisfies G( ¯fT ) −G(f∗) ≤ HR2T , a known bound for Mirror Prox. We now extend this result to arbitrary ↵-Hölder smooth functions, that is convex functions G such that ∇G(f) −∇G(g)∗ ≤Hf − g↵ for all f, g ∈ F . Lemma 3. Let F be a convex set in a Banach space B and let R ∶ B → R be a 1-strongly convex function on F with respect to some norm  ⋅ . Let G be a convex ↵-Hölder smooth function with constant H > 0 and ↵ ∈ [0,1]. Then the average ¯fT = 1T ∑Tt=1 ft of the trajectory given by Optimistic Mirror Descent Algorithm enjoys\nG( ¯fT ) − inf f∈FG(f) ≤ 8HR1+↵T 1+↵2\nwhere R ≥ 0 is such that supf∈F DR(f, g0) ≤ R. This result provides a smooth interpolation between the T −12 rate at ↵ = 0 (that is, no predictability of the gradient is possible) and the T −1 rate when the smoothness structure allows for a dramatic speed up with a very simple modification of the original Mirror Descent."
    }, {
      "heading" : "3 Structured Optimization",
      "text" : "In this section we consider the structured optimization problem\nargmin f∈F G(f) where G(f) is of the form G(f) = supx∈X (f, x) with (⋅, x) convex for every x ∈ X and (f, ⋅) concave for every f ∈ F . Both F and X are assumed to be convex sets. While G itself need not be smooth, it has been recognized that the structure can be exploited to improve rates of optimization if the function is smooth [10]. From the point of view of online learning, we will see that the optimization problem of the saddle point type can be solved by playing two online convex optimization algorithms against each other (henceforth called Players I and II).\nSpecifically, assume that Player I produces a sequence f 1 , . . . , fT by using a regret-minimization algorithm, such that\n1\nT T t=1 (ft, xt) − inff∈F 1T Tt=1 (f, xt) ≤ Rate1(x1, . . . , xT ) (4)\nand Player II produces x 1 , . . . , xT with\n1\nT T t=1 (− (ft, xt)) − infx∈X 1T Tt=1 (− (ft, x)) ≤ Rate2(f1, . . . , fT ) . (5)\nBy a standard argument (see e.g. [7]),\ninf\nf\n1\nT T t=1 (f, xt) ≤ inff (f, x̄T ) ≤ supx inff (f, x)\n≤ inf f sup x (f, x) ≤ sup x  ¯fT , x ≤ sup x 1 T T t=1 (ft, x)\nwhere ¯fT = 1T ∑Tt=1 ft and x̄T = 1T ∑Tt=1 xt. By adding (4) and (5), we have sup\nx∈X 1 T T t=1 (ft, x) − inff∈F 1T Tt=1 (f, xt) ≤ Rate1(x1, . . . , xT ) +Rate2(f1, . . . , fT ) (6)\nwhich sandwiches the previous sequence of inequalities up to the sum of regret rates and implies near-optimality of ¯fT and x̄T .\nLemma 4. Suppose both players employ the Optimistic Mirror Descent algorithm with, respectively, predictable sequences M1t and M 2 t , 1-strongly convex functions R1 on F (w.r.t.  ⋅ F ) and R2 onX (w.r.t.  ⋅ X ), and fixed learning rates ⌘ and ⌘′. Let {ft} and {xt} denote the primary sequences of the players while let {gt},{yt} denote the secondary. Then for any ↵, > 0, sup\nx∈X  ¯fT , x − inff∈F supx∈X (f, x) (7) ≤ R21\n⌘ + ↵ 2 T t=1 ∇f (ft, xt) −M1t 2F∗ + 12↵ Tt=1 gt − ft2F − 12⌘ Tt=1 gt − ft2F + gt−1 − ft2F\n+ R22 ⌘′ + 2 Tt=1 ∇x (ft, xt) −M2t 2X ∗ + 12 Tt=1 yt − xt2X − 12⌘′ Tt=1 yt − xt2X + yt−1 − xt2X \nwhere R 1 and R 2 are such that DR1(f∗, g0) ≤ R21 and DR2(x∗, y0) ≤ R22, and ¯fT = 1T ∑Tt=1 ft. The proof of Lemma 4 is immediate from Lemma 1. We obtain the following corollary: Corollary 5. Suppose ∶ F ×X  R is Hölder smooth in the following sense:\n∇f (f, x) −∇f (g, x)F∗ ≤H1f − g↵F , ∇f (f, x) −∇f (f, y)F∗ ≤H2x − y↵′X and ∇x (f, x) −∇x (g, x)X ∗ ≤H4f − g F , ∇x (f, x) −∇x (f, y)X ∗ ≤H3x − y ′X .\nLet = min{↵,↵′, , ′}, H = max{H 1 ,H 2 ,H 3 ,H 4 }. Suppose both players employ Optimistic Mirror Descent with M1t = ∇f (gt−1, yt−1) and M2t = ∇x (gt−1, yt−1), where {gt} and {yt} are the secondary sequences updated by the two algorithms, and with step sizes ⌘ = ⌘′ = (R2\n1 + R2\n2 ) 1− 2 (2H)−1 T 2  −12 . Then sup\nx∈X  ¯fT , x − inff∈F supx∈X (f, x) ≤ 4H(R21 +R22) 1+ 2 T 1+ 2\n(8)\nAs revealed in the proof of this corollary, the negative terms in (7), that come from an upper bound on regret of Player I, in fact contribute to cancellations with positive terms in regret of Player II, and vice versa. Such a coupling of the upper bounds on regret of the two players can be seen as leading to faster rates under the appropriate assumptions, and this idea will be exploited to a great extent in the proofs of the next section."
    }, {
      "heading" : "4 Zero-sum Game and Uncoupled Dynamics",
      "text" : "The notions of a zero-sum matrix game and a minimax equilibrium are arguably the most basic and important notions of game theory. The tight connection between linear programming and minimax equilibrium suggests that there might be simple dynamics that can lead the two players of the game to eventually converge to the equilibrium value. Existence of such simple or natural dynamics is of interest in behavioral economics, where one asks whether agents can discover static solution concepts of the game iteratively and without extensive communication. More formally, let A ∈ [−1,1]n×m be a matrix with bounded entries. The two players aim to find a pair of near-optimal mixed strategies ( ¯f, x̄) ∈ n × m such that ¯fTAx̄ is close to the minimax value minf∈ n maxx∈ m fTAx, where n is the probability simplex over n actions. Of course, this is a particular form of the saddle point problem considered in the previous section, with (f, x) = fTAx. It is well-known (and follows immediately from (6)) that the players can compute near-optimal strategies by simply playing no-regret algorithms [7]. More precisely, on round t, the players I and II “predict” the mixed strategies ft and xt and observe Axt and fTt A, respectively. While black-box regret minimization algorithms, such as Exponential Weights, immediately yieldO(T −12) convergence rates, Daskalakis et al [6] asked whether faster methods exist. To make the problem well-posed, it is required that the two players are strongly uncoupled: neither A nor the number of available actions of the opponent is known to either player, no “funny bit arithmetic” is allowed, and memory storage of each player allows only for constant number of payoff vectors. The authors of [6] exhibited a near-optimal algorithm that, if used by both players, yields a pair of\nmixed strategies that constitutes an O  log(m+n)(logT+(log(m+n))32)T -approximate minimax equilibrium. Furthermore, the method has a regret bound of the same order as Exponential Weights when faced with an arbitrary sequence. The algorithm in [6] is an application of the excessive gap technique of Nesterov, and requires careful choreography and interleaving of rounds between the two non-communicating players. The authors, therefore, asked whether a simple algorithm (e.g. a modification of Exponential Weights) can in fact achieve the same result. We answer this in the affirmative. While a direct application of Mirror Prox does not yield the result (and also does not provide strong decoupling), below we show that a modification of Optimistic Mirror Descent achieves the goal. Furthermore, by choosing the step size adaptively, the same method guarantees the typicalO(T −12) regret if not faced with a compliant player, thus ensuring robustness. In Section 4.1, we analyze the “first-order information” version of the problem, as described above: upon playing the respective mixed strategies ft and xt on round t, Player I observes Axt and Player II observes fTt A. Then, in Section 4.2, we consider an interesting extension to partial information, whereby the players submit their moves ft, xt but only observe the real value fTt Axt. Recall that in both cases the matrix A is not known to the players."
    }, {
      "heading" : "4.1 First-Order Information",
      "text" : "Consider the following simple algorithm. Initialize f 0 = g′ 0 ∈ n and x0 = y′ 0 ∈ m to be uniform distributions, set = 1T 2 and proceed as follows: On round t, Player I performs\nPlay ft and observe Axt Update gt(i)∝ g′t−1(i) exp{−⌘t[Axt]i}, g′t = (1 − ) gt + ( n)1n\nft+1(i)∝ g′t(i) exp{−⌘t+1[Axt]i} while simultaneously Player II performs\nPlay xt and observe f  t A\nUpdate yt(i)∝ y′t−1(i) exp{−⌘′t[fTt A]i}, y′t = (1 − )yt + ( m)1m xt+1(i)∝ y′t(i) exp{−⌘′t+1[fTt A]i}\nHere, 1n ∈ Rn is a vector of all ones and both [b]i and b(i) refer to the i-th coordinate of a vector b. Other than the “mixing in” of the uniform distribution, the algorithm for both players is simply the Optimistic Mirror Descent with the (negative) entropy function. In fact, the step of mixing in the uniform distribution is only needed when some coordinate of gt (resp., yt) is smaller than 1(nT 2). Furthermore, this step is also not needed if none of the players deviate from the prescribed method. In such a case, the resulting algorithm is simply the constant step-size Exponential Weights ft(i)∝ exp{−⌘∑t−2s=1[Axs−1]i + 2⌘[Axt−1]i}, but with a factor 2 in front of the latest loss vector! Proposition 6. Let A ∈ [−1,1]n×m, F = n, X = m. If both players use above algorithm with, respectively, M1t = Axt−1 and M2t = fTt−1A, and the adaptive step sizes\n⌘t =minlog(nT )∑t−1i=1 Axi −Axi−12∗ +∑t−2i=1 Axi −Axi−12∗−1 , 1 11\n and\n⌘′t =minlog(mT )∑t−1i=1 fTi A − fTi−1A2∗ +∑t−2i=1 fTi A − fTi−1A2∗−1 , 111 respectively, then the pair ( ¯fT , x̄T ) is an O  logm+logn+logTT -approximate minimax equilibrium. Furthermore, if only one player (say, Player I) follows the above algorithm, her regret against any sequence x\n1 , . . . , xT of plays is O log(nT )T   T t=1 Axt −Axt−12∗ + 1 . (9)\nIn particular, this implies the worst-case regret ofO  log(nT )√ T  in the general setting of online linear optimization.\nWe remark that (9) can give intermediate rates for regret in the case that the second player deviates from the prescribed strategy but produces “stable” moves. For instance, if the second player employs a mirror descent algorithm (or Follow the Regularized Leader / Exponential Weights method) with step size ⌘, one can typically show stability xt − xt−1 = O(⌘). In this case, (9) yields the rateO ⌘ logT√\nT  for the first player. A typical setting of ⌘ ∝ T −12 for the second player still ensures theO(logT T ) regret for the first player.\nLet us finish with a technical remark. The reason for the extra step of “mixing in” the uniform distribution stems from the goal of having an adaptive and robust method that still attainsO(T −12) regret if the other player deviates from using the algorithm. If one is only interested in the dynamics when both players cooperate, this step is not necessary, and in this case the extraneous logT factor disappears from the above bound, leading to the O  logn+logmT  convergence. On the technical side, the need for the extra step is the following. The adaptive step size result of Corollary 2 involves the term R2\nmax ≥ supgDR1(f∗, g) which is potentially infinite for the negative entropy functionR 1\n. It is possible that the doubling trick or the analysis of Auer et al [2] (who encountered the same problem for the Exponential Weights algorithm) can remove the extra logT factor while still preserving the regret minimization property. We also remark that R\nmax is small whenR 1\nis instead the p-norm; hence, the use of this regularizer avoids the extraneous logarithmic in T factor while still preserving the logarithmic dependence on n and m. However, projection onto the simplex under the p-norm is not as elegant as the Exponential Weights update."
    }, {
      "heading" : "4.2 Partial Information",
      "text" : "We now turn to the partial (or, zero-th order) information model. Recall that the matrix A is not known to the players, yet we are interested in finding ✏-optimal minimax strategies. On each round, the two players choose mixed strategies ft ∈ n and xt ∈ m, respectively, and observe fTt Axt. Now the question is, how many such observations do we need to get to an ✏-optimal minimax strategy? Can this be done while still ensuring the usual no-regret rate?\nThe specific setting we consider below requires that on each round t, the two players play four times, and that these four plays are -close to each other (that is, f it −f jt 1 ≤ for i, j ∈ {1, . . . ,4}). Interestingly, up to logarithmic factors, the fast rate of the previous section is possible even in this scenario, but we do require the knowledge of the number of actions of the opposing player (or, an upper bound on this number). We leave it as an open problem the question of whether one can attain the 1T -type rate with only one play per round.\nPlayer I u1, . . . , un−1 : orthonormal basis of n Initialize g1, f1 = 1n1n; Draw i0 ∼ Unif([n − 1]) At time t = 1 to T\nPlay ft Draw it ∼ Unif([n − 1]) Observe :\nr + t = (ft + uit−1)Axt r\n− t = (ft − uit−1)Axt r̄\n+ t = (ft + uit)Axt r̄ − t = (ft − uit)Axt\nBuild estimates : ât = n2 (r+t − r−t )uit−1 āt = n2 (r̄+t − r̄−t )uit Update : gt(i)∝ g′t−1(i) exp{−⌘tât(i)} g\n′ t = (1 − ) gt + ( n)1 ft+1(i)∝ g′t(i) exp{−⌘t+1āt(i)}\nEnd\nPlayer II v1, . . . , vm−1 : orthonormal basis of m Initialize y1, x1 = 1m1m; Draw j0 ∼ Unif([m−1]) At time t = 1 to T\nPlay xt Draw jt ∼ Unif([m − 1]) Observe :\ns + t = −ft A(xt + vjt−1) s\n− t = −ft A(xt − vjt−1) s̄\n+ t = −ft A(xt + vjt) s̄ − t = −ft A(xt − vjt)\nBuild estimates : ˆ\nbt = m2 (s+t − s−t ) vjt−1 ¯\nbt = m2 (s̄+t − s̄−t ) vjt Update :\nyt(i)∝ y′t−1(i) exp{−⌘′tˆbt(i)} y ′ t = (1 − )yt + ( m)1\nxt+1(i)∝ y′t(i) exp{−⌘′t+1¯bt(i)} End\nLemma 7. Let A ∈ [−1,1]n×m, F = n, X = m, let be small enough (e.g. exponentially small in m,n,T ), and let = 1T 2. If both players use above algorithms with the adaptive step sizes\n⌘t =minlog(nT )∑t−1i=1âi−āi−12∗−∑t−2i=1âi−āi−12∗ât−1−āt−22∗ , 128m log(mT ) and\n⌘′t =min  log(mT )∑t−1i=1ˆbi−¯bi−12∗−∑t−2i=1ˆbi−¯bi−12∗ˆbt−1−¯bt−22∗ , 128n log(nT )  respectively, then the pair ( ¯fT , x̄T ) is an\nOm log(nT )  log(mT ) + n log(mT )log(nT ) T  -approximate minimax equilibrium. Furthermore, if only one player (say, Player I) follows the above algorithm, her regret against any sequence x\n1 , . . . , xT of plays is bounded by Om  log(mT ) log(nT ) + nlog(nT )∑Tt=1 xt − xt−12 T  We leave it as an open problem to find an algorithm that attains the 1T -type rate when both players only observe the value eTiAej = Ai,j upon drawing pure actions i, j from their respective mixed strategies ft, xt. We hypothesize a rate better than T −12 is not possible in this scenario."
    }, {
      "heading" : "5 Approximate Smooth Convex Programming",
      "text" : "In this section we show how one can use the structured optimization results from Section 3 for approximately solving convex programming problems. Specifically consider the optimization problem\nargmax f∈G c f (10)\ns.t. ∀i ∈ [d], Gi(f) ≤ 1 where G is a convex set and each Gi is an H-smooth convex function. Let the optimal value of the above optimization problem be given by F ∗ > 0, and without loss of generality assume F ∗ is known (one typically performs binary search if it is not known). Define the sets F = {f ∶ f ∈ G, cf = F ∗} and X = d. The convex programming problem in (10) can now be reformulated as\nargmin f∈F maxi∈[d] Gi(f) = argminf∈F supx∈X di=1x(i)Gi(f) . (11) This problem is in the saddle-point form, as studied earlier in the paper. We may think of the first player as aiming to minimize the above expression over F , while the second player maximizes over a mixture of constraints with the aim of violating at least one of them. Lemma 8. Fix , ✏ > 0. Assume there exists f\n0 ∈ G such that cf 0 ≥ 0 and for every i ∈ [d], Gi(f0) ≤ 1 − . Suppose each Gi is 1-Lipschitz over F . Consider the solution ˆfT = (1 − ↵) ¯fT + ↵f0 where ↵ = ✏✏+ and ¯fT = 1T ∑Tt=1 ft ∈ F is the average of the trajectory of the procedure in Lemma 4 for the optimization problem (11). Let R\n1 (⋅) = 1 2 ⋅2 2 and R 2\nbe the entropy function. Further let B be a known constant such that B ≥ f∗ − g\n0  2 where g 0 ∈ F is some initialization and f∗ ∈ F is the (unknown) solution to the optimization problem. Set ⌘ = argmin\n⌘≤H−1 B2⌘ + ⌘ log d1−⌘H , ⌘′ = 1⌘ −H , M1t = ∑di=1 yt−1(i)∇Gi(gt−1) and M2t = (G1(gt−1), . . . ,Gd(gt−1)). Let number of iterations T be such that\nT > 1 ✏ inf ⌘≤H−1 B2⌘ + ⌘ log d1 − ⌘H \nWe then have that ˆfT ∈ G satisfies all d constraints and is ✏ -approximate, that is c ˆfT ≥ 1 − ✏ F ∗ .\nLemma 8 tells us that using the predictable sequences approach for the two players, one can obtain an ✏ -approximate solution to the smooth convex programming problem in number of iterations at most order 1✏. If T\n1 (reps. T 2 ) is the time complexity for single update of the predictable sequence algorithm of Player I (resp. Player 2), then time complexity of the overall procedure is O T1+T2✏ "
    }, {
      "heading" : "5.1 Application to Max-Flow",
      "text" : "We now apply the above result to the problem of finding Max Flow between a source and a sink in a network, such that the capacity constraint on each edge is satisfied. For simplicity, consider a network where each edge has capacity 1 (the method can be easily extended to the case of varying capacity). Suppose the number of edges d in the network is the same order as number of vertices in the network. The Max Flow problem can be seen as an instance of a convex (linear) programming problem, and we apply the proposed algorithm for structured optimization to obtain an approximate solution. For the Max Flow problem, the sets G and F are given by sets of linear equalities. Further, if we use Euclidean norm squared as regularizer for the flow player, then projection step can be performed inO(d) time using conjugate gradient method. This is because we are simply minimizing Euclidean norm squared subject to equality constraints which is well conditioned. Hence T\n1 = O(d). Similarly, the Exponential Weights update has time complexity O(d) as there are order d constraints, and so overall time complexity to produce ✏ approximate solution is given byO(nd), where n is the number of iterations of the proposed procedure. Once again, we shall assume that we know the value of the maximum flow F ∗ (for, otherwise, we can use binary search to obtain it). Corollary 9. Applying the procedure for smooth convex programming from Lemma 8 to the Max Flow problem with f\n0 = 0 ∈ G the 0 flow, the time complexity to compute an ✏-approximate Max Flow is bounded by O d32√log d\n✏  .\nThis time complexity matches the known result from [8], but with a much simpler procedure (gradient descent for the flow player and Exponential Weights for the constraints). It would be interesting to see whether the techniques presented here can be used to improve the dependence on d to d43 or better while maintaining the 1✏ dependence. While the result of [5] has the improved d43 dependence, the complexity in terms of ✏ is much worse."
    }, {
      "heading" : "6 Discussion",
      "text" : "We close this paper with a discussion. As we showed, the notion of using extra information about the sequence is a powerful tool with applications in optimization, convex programming, game theory, to name a few. All the applications considered in this paper, however, used some notion of smoothness for constructing the predictable process Mt. An interesting direction of further research is to isolate more general conditions under which the next gradient is predictable, perhaps even when the functions are not smooth in any sense. For instance one could use techniques from bundle methods to further restrict the set of possible gradients the function being optimized can have at various points in the feasible set. This could then be used to solve for the right predictable sequence to use so as to optimize the bounds. Using this notion of selecting predictable sequences one can hope to derive adaptive optimization procedures that in practice can provide rapid convergence.\nAcknowledgements: We thank Vianney Perchet for insightful discussions. We gratefully acknowledge the support of NSF under grants CAREER DMS-0954737 and CCF-1116928, as well as Dean’s Research Fund."
    } ],
    "references" : [ {
      "title" : "The multiplicative weights update method: A meta-algorithm and applications",
      "author" : [ "S. Arora", "E. Hazan", "S. Kale" ],
      "venue" : "Theory of Computing,",
      "citeRegEx" : "1",
      "shortCiteRegEx" : "1",
      "year" : 2012
    }, {
      "title" : "Adaptive and self-confident on-line learning algorithms",
      "author" : [ "P. Auer", "N. Cesa-Bianchi", "C. Gentile" ],
      "venue" : "Journal of Computer and System Sciences,",
      "citeRegEx" : "2",
      "shortCiteRegEx" : "2",
      "year" : 2002
    }, {
      "title" : "Prediction, Learning, and Games",
      "author" : [ "N. Cesa-Bianchi", "G. Lugosi" ],
      "venue" : null,
      "citeRegEx" : "3",
      "shortCiteRegEx" : "3",
      "year" : 2006
    }, {
      "title" : "Online optimization with gradual variations",
      "author" : [ "C.-K. Chiang", "T. Yang", "C.-J. Lee", "M. Mahdavi", "C.-J. Lu", "R. Jin", "S. Zhu" ],
      "venue" : "In COLT,",
      "citeRegEx" : "4",
      "shortCiteRegEx" : "4",
      "year" : 2012
    }, {
      "title" : "Electrical flows, laplacian systems, and faster approximation of maximum flow in undirected graphs",
      "author" : [ "P. Christiano", "J. A Kelner", "A. Madry", "D.A. Spielman", "S.-H. Teng" ],
      "venue" : "In Proceedings of the 43rd annual ACM symposium on Theory of computing,",
      "citeRegEx" : "5",
      "shortCiteRegEx" : "5",
      "year" : 2011
    }, {
      "title" : "Near-optimal no-regret algorithms for zerosum games",
      "author" : [ "C. Daskalakis", "A. Deckelbaum", "A. Kim" ],
      "venue" : "In Proceedings of the Twenty-Second Annual ACM-SIAM Symposium on Discrete Algorithms,",
      "citeRegEx" : "6",
      "shortCiteRegEx" : "6",
      "year" : 2011
    }, {
      "title" : "Adaptive game playing using multiplicative weights",
      "author" : [ "Y. Freund", "R. Schapire" ],
      "venue" : "Games and Economic Behavior,",
      "citeRegEx" : "7",
      "shortCiteRegEx" : "7",
      "year" : 1999
    }, {
      "title" : "Beyond the flow decomposition barrier",
      "author" : [ "A. Goldberg", "S. Rao" ],
      "venue" : "Journal of the ACM (JACM),",
      "citeRegEx" : "8",
      "shortCiteRegEx" : "8",
      "year" : 1998
    }, {
      "title" : "Prox-method with rate of convergence O(1/t) for variational inequalities with lipschitz continuous monotone operators and smooth convex-concave saddle point problems",
      "author" : [ "A. Nemirovski" ],
      "venue" : "SIAM Journal on Optimization,",
      "citeRegEx" : "9",
      "shortCiteRegEx" : "9",
      "year" : 2004
    }, {
      "title" : "Smooth minimization of non-smooth functions",
      "author" : [ "Y. Nesterov" ],
      "venue" : "Mathematical Programming,",
      "citeRegEx" : "10",
      "shortCiteRegEx" : "10",
      "year" : 2005
    }, {
      "title" : "Online learning with predictable sequences",
      "author" : [ "A. Rakhlin", "K. Sridharan" ],
      "venue" : "In Proceedings of the 26th Annual Conference on Learning Theory (COLT),",
      "citeRegEx" : "11",
      "shortCiteRegEx" : "11",
      "year" : 2013
    } ],
    "referenceMentions" : [ {
      "referenceID" : 5,
      "context" : "This addresses a question of Daskalakis et al [6].",
      "startOffset" : 46,
      "endOffset" : 49
    }, {
      "referenceID" : 2,
      "context" : "1 Introduction Recently, no-regret algorithms have received increasing attention in a variety of communities, including theoretical computer science, optimization, and game theory [3, 1].",
      "startOffset" : 180,
      "endOffset" : 186
    }, {
      "referenceID" : 0,
      "context" : "1 Introduction Recently, no-regret algorithms have received increasing attention in a variety of communities, including theoretical computer science, optimization, and game theory [3, 1].",
      "startOffset" : 180,
      "endOffset" : 186
    }, {
      "referenceID" : 10,
      "context" : "One way to formally capture the partially benign nature of data is through a notion of predictable sequences [11].",
      "startOffset" : 109,
      "endOffset" : 113
    }, {
      "referenceID" : 8,
      "context" : "First, we show that the Mirror Prox method [9], designed for optimizing non-smooth structured saddle-point problems, can be viewed as an instance of the predictable sequence approach.",
      "startOffset" : 43,
      "endOffset" : 46
    }, {
      "referenceID" : 5,
      "context" : "Second, we address the question raised in [6] about existence of “simple” algorithms that converge at the rate of  ̃ O(T −1) when employed in an uncoupled manner by players in a zero-sum finite matrix game, yet maintain the usual O(T −1￿2) rate against arbitrary sequences.",
      "startOffset" : 42,
      "endOffset" : 45
    }, {
      "referenceID" : 7,
      "context" : "We provide a simple algorithm for ✏-approximate Max Flow for a graph with d edges with time complexity  ̃ O(d3￿2￿✏), a performance previously obtained through a relatively involved procedure [8].",
      "startOffset" : 191,
      "endOffset" : 194
    }, {
      "referenceID" : 3,
      "context" : "2 Online Learning with Predictable Gradient Sequences Let us describe the online convex optimization (OCO) problem and the basic algorithm studied in [4, 11].",
      "startOffset" : 150,
      "endOffset" : 157
    }, {
      "referenceID" : 10,
      "context" : "2 Online Learning with Predictable Gradient Sequences Let us describe the online convex optimization (OCO) problem and the basic algorithm studied in [4, 11].",
      "startOffset" : 150,
      "endOffset" : 157
    }, {
      "referenceID" : 3,
      "context" : "This method was proposed in [4] for Mt = ∇Gt−1(ft−1), and the following lemma is a straightforward extension of the result in [11] for general Mt: Lemma 1.",
      "startOffset" : 28,
      "endOffset" : 31
    }, {
      "referenceID" : 10,
      "context" : "This method was proposed in [4] for Mt = ∇Gt−1(ft−1), and the following lemma is a straightforward extension of the result in [11] for general Mt: Lemma 1.",
      "startOffset" : 126,
      "endOffset" : 130
    }, {
      "referenceID" : 8,
      "context" : "which can be recognized as the Mirror Prox method, due to Nemirovski [9].",
      "startOffset" : 69,
      "endOffset" : 72
    }, {
      "referenceID" : 9,
      "context" : "While G itself need not be smooth, it has been recognized that the structure can be exploited to improve rates of optimization if the function is smooth [10].",
      "startOffset" : 153,
      "endOffset" : 157
    }, {
      "referenceID" : 6,
      "context" : "It is well-known (and follows immediately from (6)) that the players can compute near-optimal strategies by simply playing no-regret algorithms [7].",
      "startOffset" : 144,
      "endOffset" : 147
    }, {
      "referenceID" : 5,
      "context" : "While black-box regret minimization algorithms, such as Exponential Weights, immediately yield O(T −1￿2) convergence rates, Daskalakis et al [6] asked whether faster methods exist.",
      "startOffset" : 141,
      "endOffset" : 144
    }, {
      "referenceID" : 5,
      "context" : "The authors of [6] exhibited a near-optimal algorithm that, if used by both players, yields a pair of 4",
      "startOffset" : 15,
      "endOffset" : 18
    }, {
      "referenceID" : 5,
      "context" : "The algorithm in [6] is an application of the excessive gap technique of Nesterov, and requires careful choreography and interleaving of rounds between the two non-communicating players.",
      "startOffset" : 17,
      "endOffset" : 20
    }, {
      "referenceID" : 1,
      "context" : "It is possible that the doubling trick or the analysis of Auer et al [2] (who encountered the same problem for the Exponential Weights algorithm) can remove the extra logT factor while still preserving the regret minimization property.",
      "startOffset" : 69,
      "endOffset" : 72
    } ],
    "year" : 2013,
    "abstractText" : "We provide several applications of Optimistic Mirror Descent, an online learning algorithm based on the idea of predictable sequences. First, we recover the Mirror Prox algorithm for offline optimization, prove an extension to Hölder-smooth functions, and apply the results to saddle-point type problems. Next, we prove that a version of Optimistic Mirror Descent (which has a close relation to the Exponential Weights algorithm) can be used by two strongly-uncoupled players in a finite zero-sum matrix game to converge to the minimax equilibrium at the rate of O((logT )￿T ). This addresses a question of Daskalakis et al [6]. Further, we consider a partial information version of the problem. We then apply the results to convex programming and exhibit a simple algorithm for the approximate Max Flow problem.",
    "creator" : null
  }
}