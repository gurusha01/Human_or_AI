{
  "name" : "d9d4f495e875a2e075a1a4a6e1b9770f.pdf",
  "metadata" : {
    "source" : "META",
    "title" : "Unsupervised Learning for Physical Interaction through Video Prediction",
    "authors" : [ "Chelsea Finn", "Ian Goodfellow" ],
    "emails" : [ "cbfinn@eecs.berkeley.edu", "ian@openai.com", "slevine@google.com" ],
    "sections" : [ {
      "heading" : "1 Introduction",
      "text" : "Object detection, tracking, and motion prediction are fundamental problems in computer vision, and predicting the effect of physical interactions is a critical challenge for learning agents acting in the world, such as robots, autonomous cars, and drones. Most existing techniques for learning to predict physics rely on large manually labeled datasets (e.g. [18]). However, if interactive agents can use unlabeled raw video data to learn about physical interaction, they can autonomously collect virtually unlimited experience through their own exploration. Learning a representation which can predict future video without labels has applications in action recognition and prediction and, when conditioned on the action of the agent, amounts to learning a predictive model that can then be used for planning and decision making.\nHowever, learning to predict physical phenomena poses many challenges, since real-world physical interactions tend to be complex and stochastic, and learning from raw video requires handling the high dimensionality of image pixels and the partial observability of object motion from videos. Prior video prediction methods have typically considered short-range prediction [17], small image patches [22], or synthetic images [20]. Such models follow a paradigm of reconstructing future frames from the internal state of the model. In our approach, we propose a method which does not require the model to store the object and background appearance. Such appearance information is directly available in the previous frame. We develop a predictive model which merges appearance information\n∗Work was done while the author was at Google Brain.\n30th Conference on Neural Information Processing Systems (NIPS 2016), Barcelona, Spain.\nfrom previous frames with motion predicted by the model. As a result, the model is better able to predict future video sequences for multiple steps, even involving objects not seen at training time.\nTo merge appearance and predicted motion, we output the motion of pixels relative to the previous image. Applying this motion to the previous image forms the next frame. We present and evaluate three motion prediction modules. The first, which we refer to as dynamic neural advection (DNA), outputs a distribution over locations in the previous frame for each pixel in the new frame. The predicted pixel value is then computed as an expectation under this distribution. A variant on this approach, which we call convolutional dynamic neural advection (CDNA), outputs the parameters of multiple normalized convolution kernels to apply to the previous image to compute new pixel values. The last approach, which we call spatial transformer predictors (STP), outputs the parameters of multiple affine transformations to apply to the previous image, akin to the spatial transformer network previously proposed for supervised learning [11]. In the case of the latter two methods, each predicted transformation is meant to handle separate objects. To combine the predictions into a single image, the model also predicts a compositing mask over each of the transformations. DNA and CDNA are simpler and easier to implement than STP, and while all models achieve comparable performance, the object-centric CDNA and STP models also provide interpretable internal representations.\nOur main contribution is a method for making long-range predictions in real-world videos by predicting pixel motion. When conditioned on the actions taken by an agent, the model can learn to imagine different futures from different actions. To learn about physical interaction from videos, we need a large dataset with complex object interactions. We collected a dataset of 59,000 robot pushing motions, consisting of 1.5 million frames and the corresponding actions at each time step. Our experiments using this new robotic pushing dataset, and using a human motion video dataset [10], show that models that explicitly transform pixels from previous frames better capture object motion and produce more accurate video predictions compared to prior state-of-the-art methods. The dataset, video results, and code are all available online: sites.google.com/site/robotprediction."
    }, {
      "heading" : "2 Related Work",
      "text" : "Video prediction: Prior work on video prediction has tackled synthetic videos and short-term prediction in real videos. Yuan et al. [30] used a nearest neighbor approach to construct predictions from similar videos in a dataset. Ranzato et al. proposed a baseline for video prediction inspired by language models [21]. LSTM models have been adapted for video prediction on patches [22], actionconditioned Atari frame predictions [20], and precipitation nowcasting [28]. Mathieu et al. proposed new loss functions for sharper frame predictions [17]. Prior methods generally reconstruct frames from the internal state of the model, and some predict the internal state directly, without producing images [23]. Our method instead transforms pixels from previous frames, explicitly modeling motion and, in the case of the CDNA and STP models, decomposing it over image segments. We found in our experiments that all three of our models produce substantially better predictions by advecting pixels from the previous frame and compositing them onto the new image, rather than constructing images from scratch. This approach differs from recent work on optic flow prediction [25], which predicts where pixels will move to using direct optical flow supervision. Boots et al. predict future images of a robot arm using nonparametric kernel-based methods [4]. In contrast to this work, our approach uses flexible parametric models, and effectively predicts interactions with objects, including objects not seen during training. To our knowledge, no previous video prediction method has been applied to predict real images with novel object interactions beyond two time steps into the future.\nThere have been a number of promising methods for frame prediction developed concurrently to this work [16]. Vondrick et al. [24] combine an adversarial objective with a multiscale, feedforward architecture, and use a foreground/background mask similar to the masking scheme proposed here. De Brabandere et al. [6] propose a method similar to our DNA model, but use a softmax for sharper flow distributions. The probabilistic model proposed by Xue et al. [29] predicts transformations applied to latent feature maps, rather than the image itself, but only demonstrates single frame prediction.\nLearning physics: Several works have explicitly addressed prediction of physical interactions, including predicting ball motion [5], block falling [2], the effects of forces [19, 18], future human interactions [9], and future car trajectories [26]. These methods require ground truth object pose information, segmentation masks, camera viewpoint, or image patch trackers. In the domain of reinforcement learning, model-based methods have been proposed that learn prediction on images [14, 27], but they have either used synthetic images or instance-level models, and have not demonstrated\ngeneralization to novel objects nor accurate prediction on real-world videos. As shown by our comparison to LSTM-based prediction designed for Atari frames [20], models that work well on synthetic domains do not necessarily succeed on real images.\nVideo datasets: Existing video datasets capture YouTube clips [12], human motion [10], synthetic video game frames [20], and driving [8]. However, to investigate learning visual physics prediction, we need data that exhibits rich object motion, collisions, and interaction information. We propose a large new dataset consisting of real-world videos of robot-object interactions, including complex physical phenomena, realistic occlusions, and a clear use-case for interactive robot learning."
    }, {
      "heading" : "3 Motion-Focused Predictive Models",
      "text" : "In order to learn about object motion while remaining invariant to appearance, we introduce a class of video prediction models that directly use appearance information from previous frames to construct pixel predictions. Our model computes the next frame by first predicting the motions of image segments, then merges these predictions via masking. In this section, we discuss our novel pixel transformation models, and propose how to effectively merge predicted motion of multiple segments into a single next image prediction. The architecture of the CDNA model is shown in Figure 1. Diagrams of the DNA and STP models are in Appendix B."
    }, {
      "heading" : "3.1 Pixel Transformations for Future Video Prediction",
      "text" : "The core of our models is a motion prediction module that predicts objects’ motion without attempting to reconstruct their appearance. This module is therefore partially invariant to appearance and can generalize effectively to previously unseen objects. We propose three motion prediction modules:\nDynamic Neural Advection (DNA): In this approach, we predict a distribution over locations in the previous frame for each pixel in the new frame. The predicted pixel value is computed as an expectation under this distribution. We constrain the pixel movement to a local region, under the regularizing assumption that pixels will not move large distances. This keeps the dimensionality of the prediction low. This approach is the most flexible of the proposed approaches.\nFormally, we apply the predicted motion transformation m̂ to the previous image prediction Ît−1 for every pixel (x, y) to form the next image prediction Ît as follows:\nÎt(x, y) = ∑\nk∈(−κ,κ)\n∑\nl∈(−κ,κ)\nm̂xy(k, l)Ît−1(x− k, y − l)\nwhere κ is the spatial extent of the predicted distribution. This can be implemented as a convolution with untied weights. The architecture of this model matches the CDNA model in Figure 1, except that\nthe higher-dimensional transformation parameters m̂ are outputted by the last (conv 2) layer instead of the LSTM 5 layer used for the CDNA model.\nConvolutional Dynamic Neural Advection (CDNA): Under the assumption that the same mechanisms can be used to predict the motions of different objects in different regions of the image, we consider a more object-centric approach to predicting motion. Instead of predicting a different distribution for each pixel, this model predicts multiple discrete distributions that are each applied to the entire image via a convolution (with tied weights), which computes the expected value of the motion distribution for every pixel. The idea is that pixels on the same rigid object will move together, and therefore can share the same transformation. More formally, one predicted object transformation\nm̂ applied to the previous image It−1 produces image Ĵt for each pixel (x, y) as follows:\nĴt(x, y) = ∑\nk∈(−κ,κ)\n∑\nl∈(−κ,κ)\nm̂(k, l)Ît−1(x− k, y − l)\nwhere κ is the spatial size of the normalized predicted convolution kernel m̂. Multiple transformations {m̂(i)} are applied to the previous image Ît−1 to form multiple images {Ĵ (i) t }. These output images are combined into a single prediction Ît as described in the next section and show in Figure 1.\nSpatial Transformer Predictors (STP): In this approach, the model produces multiple sets of parameters for 2D affine image transformations, and applies the transformations using a bilinear\nsampling kernel [11]. More formally, a set of affine parameters M̂ produces a warping grid between previous image pixels (xt−1, yt−1) and generated image pixels (xt, yt).\n(\nxt−1 yt−1\n)\n= M̂\n(\nxt yt 1\n)\nThis grid can be applied with a bilinear kernel to form an image Ĵt:\nĴt(xt, yt) =\nW ∑\nk\nH ∑\nl\nÎt−1(k, l)max(0, 1− |xt−1 − k|)max(0, 1− |yt−1 − l|)\nwhere W and H are the image width and height. While this type of operator has been applied previously only to supervised learning tasks, it is well-suited for video prediction. Multiple transformations {M̂ (i)} are applied to the previous image Ît−1 to form multiple images {Ĵ (i) t }, which are then composited based on the masks. The architecture matches the diagram in Figure 1, but instead of outputting CDNA kernels at the LSTM 5 layer, the model outputs the STP parameters {M̂ (i)}.\nAll of these models can focus on learning physics rather than object appearance. Our experiments show that these models are better able to generalize to unseen objects compared to models that reconstruct the pixels directly or predict the difference from the previous frame."
    }, {
      "heading" : "3.2 Composing Object Motion Predictions",
      "text" : "CDNA and STP produce multiple object motion predictions, which need to be combined into a single image. The composition of the predicted images Ĵ (i) t is modulated by a mask Ξ, which defines a weight on each prediction, for each pixel. Thus, Ît = ∑ c Ĵ (c) t ◦ Ξc , where c denotes the channel of the mask and the element-wise multiplication is over pixels. To obtain the mask, we apply a channel-wise softmax to the final convolutional layer in the model (conv 2 in Figure 1), which ensures that the channels of the mask sum to 1 for each pixel position.\nIn practice, our experiments show that the CDNA and STP models learn to mask out objects that are moving in consistent directions. The benefit of this approach is two-fold: first, predicted motion transformations are reused for multiple pixels in the image, and second, the model naturally extracts a more object centric representation in an unsupervised fashion, a desirable property for an agent learning to interact with objects. The DNA model lacks these two benefits, but instead is more flexible as it can produce independent motions for every pixel in the image.\nFor each model, including DNA, we also include a “background mask” where we allow the models to copy pixels directly from the previous frame. Besides improving performance, this also produces interpretable background masks that we visualize in Section 5. Additionally, to fill in previously occluded regions, which may not be well represented by nearby pixels, we allowed the models to generate pixels from an image, and included it in the final masking step."
    }, {
      "heading" : "3.3 Action-conditioned Convolutional LSTMs",
      "text" : "Most existing physics and video prediction models use feedforward architectures [17, 15] or feedforward encodings of the image [20]. To generate the motion predictions discussed above, we employ stacked convolutional LSTMs [28]. Recurrence through convolutions is a natural fit for multi-step video prediction because it takes advantage of the spatial invariance of image representations, as the laws of physics are mostly consistent across space. As a result, models with convolutional recurrence require significantly fewer parameters and use those parameters more efficiently.\nThe model architecture is displayed in Figure 1 and detailed in Appendix B. In an interactive setting, the agent’s actions and internal state (such as the pose of the robot gripper) influence the next image. We integrate both into our model by spatially tiling the concatenated state and action vector across a feature map, and concatenating the result to the channels of the lowest-dimensional activation map. Note, though, that the agent’s internal state (i.e. the robot gripper pose) is only input into the network at the beginning, and must be predicted from the actions in future timesteps. We trained the networks using an l2 reconstruction loss. Alternative losses, such as those presented in [17] could complement this method.\n4 Robotic Pushing Dataset\nOne key application of action-conditioned video prediction is to use the learned model for decision making in visionbased robotic control tasks. Unsupervised learning from video can enable agents to learn about the world on their own, without human involvement, a critical requirement for scaling up interactive learning. In order to investigate action-conditioned video prediction for robotic tasks, we need a dataset with real-world physical object interactions. We collected a new dataset using 10 robotic arms, shown in Figure 2, pushing hundreds of objects in bins, amounting to 57,000 interaction sequences with 1.5 million video frames. Two test sets, each with 1,250 recorded motions, were also collected. The first test set used two different subsets of the objects pushed during training. The second test set involved two subsets of objects, none of which\nwere used during training. In addition to RGB images, we also record the corresponding gripper poses, which we refer to as the internal state, and actions, which corresponded to the commanded gripper pose. The dataset is publically available2. Further details on the data collection procedure are provided in Appendix A."
    }, {
      "heading" : "5 Experiments",
      "text" : "We evaluate our method using the dataset in Section 4, as well as on videos of human motion in the Human3.6M dataset [10]. In both settings, we evaluate our three models described in Section 3, as well as prior models [17, 20]. For CDNA and STP, we used 10 transformers. While we show stills from the predicted videos in the figures, the qualitative results are easiest to compare when the predicted videos can be viewed side-by-side. For this reason, we encourage the reader to examine the video results on the supplemental website2. Code for training the model is also available on the website.\nTraining details: We trained all models using the TensorFlow library [1], optimizing to convergence using ADAM [13] with the suggested hyperparameters. We trained all recurrent models with and without scheduled sampling [3] and report the performance of the model with the best validation error. We found that scheduled sampling improved performance of our models, but did not substantially affect the performance of ablation and baseline models that did not model pixel motion.\n2See http://sites.google.com/site/robotprediction"
    }, {
      "heading" : "5.1 Action-conditioned prediction for robotic pushing",
      "text" : "Our primary evaluation is on video prediction using our robotic interaction dataset, conditioned on the future actions taken by the robot. In this setting, we pass in two initial images, as well as the initial robot arm state and actions, and then sequentially roll out the model, passing in the future actions and the model’s image and state prediction from the previous time step. We trained for 8 future time steps for all recurrent models, and test for up to 18 time steps. We held out 5% of the training set for validation. To quantitatively evaluate the predictions, we measure average PSNR and SSIM, as proposed in [17]. Unlike [17], we measure these metrics on the entire image. We evaluate on two test sets described in Section 4, one with objects seen at training time, and one with previously unseen objects.\nFigure 3 illustrates the performance of our models compared to prior methods. We report the performance of the feedforward multiscale model of [17] using an l1+GDL loss, which was the best performing model in our experiments – full results of the multi-scale models are in Appendix C. Our methods significantly outperform prior video prediction methods on all metrics. The FC LSTM model [20] reconstructs the background and lacks the representational power to reconstruct the objects in the bin. The feedforward multiscale model performs well on 1-step prediction, but performance quickly drops over time, as it is only trained for 1-step prediction. It is worth noting that our models are significantly more parameter efficient: despite being recurrent, they contain 12.5 million parameters, which is slightly less than the feedforward model with 12.6 million parameters and significantly less than the FC LSTM model which has 78 million parameters. We found that none of the models suffered from significant overfitting on this dataset. We also report the baseline performance of simply copying the last observed ground truth frame.\nIn Figure 4, we compare to models with the same stacked convolutional LSTM architecture, but that predict raw pixel values or the difference between previous and current frames. By explicitly modeling pixel motion, our method outperforms these ablations. Note that the model without skip connections is most representative of the model by Xingjian et al. [28]. We show a second ablation in Figure 5, illustrating the benefit of training for longer horizons and from conditioning on the action of the robot. Lastly, we show qualitative results in Figure 6 of changing the action of the arm to examine the model’s predictions about possible futures.\nFor all of the models, the prediction quality degrades over time, as uncertainty increases further into the future. We use a mean-squared error objective, which optimizes for the mean pixel values. The\nmodel thus encodes uncertainty as blur. Modeling this uncertainty directly through, for example, stochastic neural networks is an interesting direction for future work. Note that prior video prediction methods have largely focused on single-frame prediction, and most have not demonstrated prediction of multiple real-world RGB video frames in sequence. Action-conditioned multi-frame prediction is a crucial ingredient in model-based planning, where the robot could mentally test the outcomes of various actions before picking the best one for a given task."
    }, {
      "heading" : "5.2 Human motion prediction",
      "text" : "In addition to the action-conditioned prediction, we also evaluate our model on predicting future video without actions. We chose the Human3.6M dataset, which consists of human actors performing various actions in a room. We trained all models on 5 of the human subjects, held out one subject for validation, and held out a different subject for the evaluations presented here. Thus, the models have never seen this particular human subject or any subject wearing the same clothes. We subsampled the video down to 10 fps such that there was noticeable motion in the videos within reasonable time frames. Since the model is no longer conditioned on actions, we fed in 10 video frames and trained the network to produce the next 10 frames, corresponding to 1 second each. Our evaluation measures performance up to 20 timesteps into the future.\nThe results in Figure 7 show that our motion-predictive models quantitatively outperform prior methods, and qualitatively produce plausible motions for at least 10 timesteps, and start to degrade thereafter. We also show the masks predicted internally by the model for masking out the previous\nframe, which we refer to as the background mask. These masks illustrate that the model learns to segment the human subject in the image without any explicit supervision."
    }, {
      "heading" : "6 Conclusion & Future Directions",
      "text" : "In this work, we develop an action-conditioned video prediction model for interaction that incorporates appearance information in previous frames with motion predicted by the model. To study unsupervised learning for interaction, we also present a new video dataset with 59,000 real robot interactions and 1.5 million video frames. Our experiments show that, by learning to transform pixels in the initial frame, our model can produce plausible video sequences more than 10 time steps into the future, which corresponds to about one second. In comparisons to prior methods, our method achieves the best results on a number of previous proposed metrics.\nPredicting future object motion in the context of a physical interaction is a key building block of an intelligent interactive system. The kind of action-conditioned prediction of future video frames that we demonstrate can allow an interactive agent, such as a robot, to imagine different futures based on the available actions. Such a mechanism can be used to plan for actions to accomplish a particular goal, anticipate possible future problems (e.g. in the context of an autonomous vehicle), and recognize interesting new phenomena in the context of exploration. While our model directly predicts the motion of image pixels and naturally groups together pixels that belong to the same object and move together, it does not explicitly extract an internal object-centric representation (e.g. as in [7]). Learning such a representation would be a promising future direction, particularly for applying efficient reinforcement learning algorithms that might benefit from concise state representations."
    }, {
      "heading" : "Acknowledgments",
      "text" : "We would like to thank Vincent Vanhoucke, Mrinal Kalakrishnan, Jon Barron, Deirdre Quillen, and our anonymous reviewers for helpful feedback and discussions. We would also like to thank Peter Pastor for technical support with the robots."
    } ],
    "references" : [ {
      "title" : "Tensorflow: Large-scale machine learning on heterogeneous systems",
      "author" : [ "M. Abadi", "A. Agarwal", "P. Barham", "E. Brevdo", "Z. Chen", "C. Citro", "G.S. Corrado", "A. Davis" ],
      "venue" : "Software from tensorflow.org,",
      "citeRegEx" : "1",
      "shortCiteRegEx" : "1",
      "year" : 2015
    }, {
      "title" : "Simulation as an engine of physical scene understanding",
      "author" : [ "P.W. Battaglia", "J.B. Hamrick", "J.B. Tenenbaum" ],
      "venue" : "Proceedings of the National Academy of Sciences,",
      "citeRegEx" : "2",
      "shortCiteRegEx" : "2",
      "year" : 2013
    }, {
      "title" : "Scheduled sampling for sequence prediction with recurrent neural networks",
      "author" : [ "S. Bengio", "O. Vinyals", "N. Jaitly", "N. Shazeer" ],
      "venue" : "In Advances in Neural Information Processing Systems,",
      "citeRegEx" : "3",
      "shortCiteRegEx" : "3",
      "year" : 2015
    }, {
      "title" : "Learning predictive models of a depth camera & manipulator from raw execution traces",
      "author" : [ "B. Boots", "A. Byravan", "D. Fox" ],
      "venue" : "In International Conference on Robotics and Automation (ICRA),",
      "citeRegEx" : "4",
      "shortCiteRegEx" : "4",
      "year" : 2014
    }, {
      "title" : "Estimating contact dynamics",
      "author" : [ "M.A. Brubaker", "L. Sigal", "D.J. Fleet" ],
      "venue" : "In International Conference on Computer Vision (ICCV),",
      "citeRegEx" : "5",
      "shortCiteRegEx" : "5",
      "year" : 2009
    }, {
      "title" : "Dynamic filter networks",
      "author" : [ "B. De Brabandere", "X. Jia", "T. Tuytelaars", "L. Van Gool" ],
      "venue" : "In Neural Information Processing Systems (NIPS)",
      "citeRegEx" : "6",
      "shortCiteRegEx" : "6",
      "year" : 2016
    }, {
      "title" : "Attend, infer, repeat: Fast scene understanding with generative models",
      "author" : [ "S. Eslami", "N. Heess", "T. Weber", "Y. Tassa", "K. Kavukcuoglu", "G.E. Hinton" ],
      "venue" : "Neural Information Processing Systems (NIPS),",
      "citeRegEx" : "7",
      "shortCiteRegEx" : "7",
      "year" : 2016
    }, {
      "title" : "Vision meets robotics: The KITTI dataset",
      "author" : [ "A. Geiger", "P. Lenz", "C. Stiller", "R. Urtasun" ],
      "venue" : "International Journal of Robotics Research (IJRR),",
      "citeRegEx" : "8",
      "shortCiteRegEx" : "8",
      "year" : 2013
    }, {
      "title" : "Action-reaction: Forecasting the dynamics of human interaction",
      "author" : [ "D.-A. Huang", "K.M. Kitani" ],
      "venue" : "In European Conference on Computer Vision (ECCV). Springer,",
      "citeRegEx" : "9",
      "shortCiteRegEx" : "9",
      "year" : 2014
    }, {
      "title" : "Human3.6m: Large scale datasets and predictive methods for 3d human sensing in natural environments",
      "author" : [ "C. Ionescu", "D. Papava", "V. Olaru", "C. Sminchisescu" ],
      "venue" : null,
      "citeRegEx" : "10",
      "shortCiteRegEx" : "10",
      "year" : 2014
    }, {
      "title" : "Spatial transformer networks",
      "author" : [ "M. Jaderberg", "K. Simonyan", "A. Zisserman" ],
      "venue" : "In Neural Information Processing Systems (NIPS),",
      "citeRegEx" : "11",
      "shortCiteRegEx" : "11",
      "year" : 2015
    }, {
      "title" : "Large-scale video classification with convolutional neural networks",
      "author" : [ "A. Karpathy", "G. Toderici", "S. Shetty", "T. Leung", "R. Sukthankar", "L. Fei-Fei" ],
      "venue" : "In Compuer Vision and Pattern Recognition (CVPR),",
      "citeRegEx" : "12",
      "shortCiteRegEx" : "12",
      "year" : 2014
    }, {
      "title" : "Adam: A method for stochastic optimization",
      "author" : [ "D. Kinga", "J. Ba" ],
      "venue" : "International Conference on Learning Representations (ICLR),",
      "citeRegEx" : "13",
      "shortCiteRegEx" : "13",
      "year" : 2015
    }, {
      "title" : "Autonomous reinforcement learning on raw visual input data in a real world application",
      "author" : [ "S. Lange", "M. Riedmiller", "A. Voigtlander" ],
      "venue" : "In International Joint Conference on Neural Networks (IJCNN),",
      "citeRegEx" : "14",
      "shortCiteRegEx" : "14",
      "year" : 2012
    }, {
      "title" : "Learning physical intuition of block towers by example",
      "author" : [ "A. Lerer", "S. Gross", "R. Fergus" ],
      "venue" : "International Conference on Machine Learning (ICML),",
      "citeRegEx" : "15",
      "shortCiteRegEx" : "15",
      "year" : 2016
    }, {
      "title" : "Deep predictive coding networks for video prediction and unsupervised learning",
      "author" : [ "W. Lotter", "G. Kreiman", "D. Cox" ],
      "venue" : "arXiv preprint arXiv:1605.08104,",
      "citeRegEx" : "16",
      "shortCiteRegEx" : "16",
      "year" : 2016
    }, {
      "title" : "Deep multi-scale video prediction beyond mean square error",
      "author" : [ "M. Mathieu", "C. Couprie", "Y. LeCun" ],
      "venue" : "International Conference on Learning Representations (ICLR),",
      "citeRegEx" : "17",
      "shortCiteRegEx" : "17",
      "year" : 2016
    }, {
      "title" : "Newtonian image understanding: Unfolding the dynamics of objects in static images",
      "author" : [ "R. Mottaghi", "H. Bagherinezhad", "M. Rastegari", "A. Farhadi" ],
      "venue" : "Computer Vision and Pattern Recognition (CVPR),",
      "citeRegEx" : "18",
      "shortCiteRegEx" : "18",
      "year" : 2015
    }, {
      "title" : "What happens if...\" learning to predict the effect of forces in images",
      "author" : [ "R. Mottaghi", "M. Rastegari", "A. Gupta", "A. Farhadi" ],
      "venue" : "European Conference on Computer Vision (ECCV),",
      "citeRegEx" : "19",
      "shortCiteRegEx" : "19",
      "year" : 2016
    }, {
      "title" : "Action-conditional video prediction using deep networks in atari games",
      "author" : [ "J. Oh", "X. Guo", "H. Lee", "R.L. Lewis", "S. Singh" ],
      "venue" : "In Neural Information Processing Systems (NIPS),",
      "citeRegEx" : "20",
      "shortCiteRegEx" : "20",
      "year" : 2015
    }, {
      "title" : "Video (language) modeling: a baseline for generative models of natural videos",
      "author" : [ "M. Ranzato", "A. Szlam", "J. Bruna", "M. Mathieu", "R. Collobert", "S. Chopra" ],
      "venue" : "arXiv preprint arXiv:1412.6604,",
      "citeRegEx" : "21",
      "shortCiteRegEx" : "21",
      "year" : 2014
    }, {
      "title" : "Unsupervised learning of video representations using lstms",
      "author" : [ "N. Srivastava", "E. Mansimov", "R. Salakhutdinov" ],
      "venue" : "International Conference on Machine Learning (ICML),",
      "citeRegEx" : "22",
      "shortCiteRegEx" : "22",
      "year" : 2015
    }, {
      "title" : "Anticipating the future by watching unlabeled video",
      "author" : [ "C. Vondrick", "H. Pirsiavash", "A. Torralba" ],
      "venue" : "CoRR, abs/1504.08023,",
      "citeRegEx" : "23",
      "shortCiteRegEx" : "23",
      "year" : 2015
    }, {
      "title" : "Generating videos with scene dynamics",
      "author" : [ "C. Vondrick", "H. Pirsiavash", "A. Torralba" ],
      "venue" : "In Neural Information Processing Systems (NIPS)",
      "citeRegEx" : "24",
      "shortCiteRegEx" : "24",
      "year" : 2016
    }, {
      "title" : "An uncertain future: Forecasting from static images using variational autoencoders",
      "author" : [ "J. Walker", "C. Doersch", "A. Gupta", "M. Hebert" ],
      "venue" : "In European Conference on Computer Vision (ECCV),",
      "citeRegEx" : "25",
      "shortCiteRegEx" : "25",
      "year" : 2016
    }, {
      "title" : "Patch to the future: Unsupervised visual prediction",
      "author" : [ "J. Walker", "A. Gupta", "M. Hebert" ],
      "venue" : "In Computer Vision and Pattern Recognition (CVPR),",
      "citeRegEx" : "26",
      "shortCiteRegEx" : "26",
      "year" : 2014
    }, {
      "title" : "Embed to control: A locally linear latent dynamics model for control from raw images",
      "author" : [ "M. Watter", "J. Springenberg", "J. Boedecker", "M. Riedmiller" ],
      "venue" : "In Neural Information Processing Systems (NIPS),",
      "citeRegEx" : "27",
      "shortCiteRegEx" : "27",
      "year" : 2015
    }, {
      "title" : "Convolutional LSTM network: A machine learning approach for precipitation nowcasting",
      "author" : [ "S. Xingjian", "Z. Chen", "H. Wang", "D. Yeung", "W. Wong", "W. Woo" ],
      "venue" : "In Neural Information Processing Systems,",
      "citeRegEx" : "28",
      "shortCiteRegEx" : "28",
      "year" : 2015
    }, {
      "title" : "Visual dynamics: Probabilistic future frame synthesis via cross convolutional networks",
      "author" : [ "T. Xue", "J. Wu", "K.L. Bouman", "W.T. Freeman" ],
      "venue" : "In Neural Information Processing Systems (NIPS)",
      "citeRegEx" : "29",
      "shortCiteRegEx" : "29",
      "year" : 2016
    }, {
      "title" : "A data-driven approach for event prediction",
      "author" : [ "J. Yuen", "A. Torralba" ],
      "venue" : "In European Conference on Computer Vision (ECCV),",
      "citeRegEx" : "30",
      "shortCiteRegEx" : "30",
      "year" : 2010
    } ],
    "referenceMentions" : [ {
      "referenceID" : 16,
      "context" : "Prior video prediction methods have typically considered short-range prediction [17], small image patches [22], or synthetic images [20].",
      "startOffset" : 80,
      "endOffset" : 84
    }, {
      "referenceID" : 21,
      "context" : "Prior video prediction methods have typically considered short-range prediction [17], small image patches [22], or synthetic images [20].",
      "startOffset" : 106,
      "endOffset" : 110
    }, {
      "referenceID" : 19,
      "context" : "Prior video prediction methods have typically considered short-range prediction [17], small image patches [22], or synthetic images [20].",
      "startOffset" : 132,
      "endOffset" : 136
    }, {
      "referenceID" : 10,
      "context" : "The last approach, which we call spatial transformer predictors (STP), outputs the parameters of multiple affine transformations to apply to the previous image, akin to the spatial transformer network previously proposed for supervised learning [11].",
      "startOffset" : 245,
      "endOffset" : 249
    }, {
      "referenceID" : 9,
      "context" : "Our experiments using this new robotic pushing dataset, and using a human motion video dataset [10], show that models that explicitly transform pixels from previous frames better capture object motion and produce more accurate video predictions compared to prior state-of-the-art methods.",
      "startOffset" : 95,
      "endOffset" : 99
    }, {
      "referenceID" : 29,
      "context" : "[30] used a nearest neighbor approach to construct predictions from similar videos in a dataset.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 20,
      "context" : "proposed a baseline for video prediction inspired by language models [21].",
      "startOffset" : 69,
      "endOffset" : 73
    }, {
      "referenceID" : 21,
      "context" : "LSTM models have been adapted for video prediction on patches [22], actionconditioned Atari frame predictions [20], and precipitation nowcasting [28].",
      "startOffset" : 62,
      "endOffset" : 66
    }, {
      "referenceID" : 19,
      "context" : "LSTM models have been adapted for video prediction on patches [22], actionconditioned Atari frame predictions [20], and precipitation nowcasting [28].",
      "startOffset" : 110,
      "endOffset" : 114
    }, {
      "referenceID" : 27,
      "context" : "LSTM models have been adapted for video prediction on patches [22], actionconditioned Atari frame predictions [20], and precipitation nowcasting [28].",
      "startOffset" : 145,
      "endOffset" : 149
    }, {
      "referenceID" : 16,
      "context" : "proposed new loss functions for sharper frame predictions [17].",
      "startOffset" : 58,
      "endOffset" : 62
    }, {
      "referenceID" : 22,
      "context" : "Prior methods generally reconstruct frames from the internal state of the model, and some predict the internal state directly, without producing images [23].",
      "startOffset" : 152,
      "endOffset" : 156
    }, {
      "referenceID" : 24,
      "context" : "This approach differs from recent work on optic flow prediction [25], which predicts where pixels will move to using direct optical flow supervision.",
      "startOffset" : 64,
      "endOffset" : 68
    }, {
      "referenceID" : 3,
      "context" : "predict future images of a robot arm using nonparametric kernel-based methods [4].",
      "startOffset" : 78,
      "endOffset" : 81
    }, {
      "referenceID" : 15,
      "context" : "There have been a number of promising methods for frame prediction developed concurrently to this work [16].",
      "startOffset" : 103,
      "endOffset" : 107
    }, {
      "referenceID" : 23,
      "context" : "[24] combine an adversarial objective with a multiscale, feedforward architecture, and use a foreground/background mask similar to the masking scheme proposed here.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 5,
      "context" : "[6] propose a method similar to our DNA model, but use a softmax for sharper flow distributions.",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 28,
      "context" : "[29] predicts transformations applied to latent feature maps, rather than the image itself, but only demonstrates single frame prediction.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 4,
      "context" : "Learning physics: Several works have explicitly addressed prediction of physical interactions, including predicting ball motion [5], block falling [2], the effects of forces [19, 18], future human interactions [9], and future car trajectories [26].",
      "startOffset" : 128,
      "endOffset" : 131
    }, {
      "referenceID" : 1,
      "context" : "Learning physics: Several works have explicitly addressed prediction of physical interactions, including predicting ball motion [5], block falling [2], the effects of forces [19, 18], future human interactions [9], and future car trajectories [26].",
      "startOffset" : 147,
      "endOffset" : 150
    }, {
      "referenceID" : 18,
      "context" : "Learning physics: Several works have explicitly addressed prediction of physical interactions, including predicting ball motion [5], block falling [2], the effects of forces [19, 18], future human interactions [9], and future car trajectories [26].",
      "startOffset" : 174,
      "endOffset" : 182
    }, {
      "referenceID" : 17,
      "context" : "Learning physics: Several works have explicitly addressed prediction of physical interactions, including predicting ball motion [5], block falling [2], the effects of forces [19, 18], future human interactions [9], and future car trajectories [26].",
      "startOffset" : 174,
      "endOffset" : 182
    }, {
      "referenceID" : 8,
      "context" : "Learning physics: Several works have explicitly addressed prediction of physical interactions, including predicting ball motion [5], block falling [2], the effects of forces [19, 18], future human interactions [9], and future car trajectories [26].",
      "startOffset" : 210,
      "endOffset" : 213
    }, {
      "referenceID" : 25,
      "context" : "Learning physics: Several works have explicitly addressed prediction of physical interactions, including predicting ball motion [5], block falling [2], the effects of forces [19, 18], future human interactions [9], and future car trajectories [26].",
      "startOffset" : 243,
      "endOffset" : 247
    }, {
      "referenceID" : 13,
      "context" : "In the domain of reinforcement learning, model-based methods have been proposed that learn prediction on images [14, 27], but they have either used synthetic images or instance-level models, and have not demonstrated",
      "startOffset" : 112,
      "endOffset" : 120
    }, {
      "referenceID" : 26,
      "context" : "In the domain of reinforcement learning, model-based methods have been proposed that learn prediction on images [14, 27], but they have either used synthetic images or instance-level models, and have not demonstrated",
      "startOffset" : 112,
      "endOffset" : 120
    }, {
      "referenceID" : 19,
      "context" : "As shown by our comparison to LSTM-based prediction designed for Atari frames [20], models that work well on synthetic domains do not necessarily succeed on real images.",
      "startOffset" : 78,
      "endOffset" : 82
    }, {
      "referenceID" : 11,
      "context" : "Video datasets: Existing video datasets capture YouTube clips [12], human motion [10], synthetic video game frames [20], and driving [8].",
      "startOffset" : 62,
      "endOffset" : 66
    }, {
      "referenceID" : 9,
      "context" : "Video datasets: Existing video datasets capture YouTube clips [12], human motion [10], synthetic video game frames [20], and driving [8].",
      "startOffset" : 81,
      "endOffset" : 85
    }, {
      "referenceID" : 19,
      "context" : "Video datasets: Existing video datasets capture YouTube clips [12], human motion [10], synthetic video game frames [20], and driving [8].",
      "startOffset" : 115,
      "endOffset" : 119
    }, {
      "referenceID" : 7,
      "context" : "Video datasets: Existing video datasets capture YouTube clips [12], human motion [10], synthetic video game frames [20], and driving [8].",
      "startOffset" : 133,
      "endOffset" : 136
    }, {
      "referenceID" : 10,
      "context" : "Spatial Transformer Predictors (STP): In this approach, the model produces multiple sets of parameters for 2D affine image transformations, and applies the transformations using a bilinear sampling kernel [11].",
      "startOffset" : 205,
      "endOffset" : 209
    }, {
      "referenceID" : 16,
      "context" : "Most existing physics and video prediction models use feedforward architectures [17, 15] or feedforward encodings of the image [20].",
      "startOffset" : 80,
      "endOffset" : 88
    }, {
      "referenceID" : 14,
      "context" : "Most existing physics and video prediction models use feedforward architectures [17, 15] or feedforward encodings of the image [20].",
      "startOffset" : 80,
      "endOffset" : 88
    }, {
      "referenceID" : 19,
      "context" : "Most existing physics and video prediction models use feedforward architectures [17, 15] or feedforward encodings of the image [20].",
      "startOffset" : 127,
      "endOffset" : 131
    }, {
      "referenceID" : 27,
      "context" : "To generate the motion predictions discussed above, we employ stacked convolutional LSTMs [28].",
      "startOffset" : 90,
      "endOffset" : 94
    }, {
      "referenceID" : 16,
      "context" : "Alternative losses, such as those presented in [17] could complement this method.",
      "startOffset" : 47,
      "endOffset" : 51
    }, {
      "referenceID" : 16,
      "context" : "In both settings, we evaluate our three models described in Section 3, as well as prior models [17, 20].",
      "startOffset" : 95,
      "endOffset" : 103
    }, {
      "referenceID" : 19,
      "context" : "In both settings, we evaluate our three models described in Section 3, as well as prior models [17, 20].",
      "startOffset" : 95,
      "endOffset" : 103
    }, {
      "referenceID" : 0,
      "context" : "Training details: We trained all models using the TensorFlow library [1], optimizing to convergence using ADAM [13] with the suggested hyperparameters.",
      "startOffset" : 69,
      "endOffset" : 72
    }, {
      "referenceID" : 12,
      "context" : "Training details: We trained all models using the TensorFlow library [1], optimizing to convergence using ADAM [13] with the suggested hyperparameters.",
      "startOffset" : 111,
      "endOffset" : 115
    }, {
      "referenceID" : 2,
      "context" : "We trained all recurrent models with and without scheduled sampling [3] and report the performance of the model with the best validation error.",
      "startOffset" : 68,
      "endOffset" : 71
    }, {
      "referenceID" : 19,
      "context" : "Figure 3: Qualitative and quantitative reconstruction performance of our models, compared with [20, 17].",
      "startOffset" : 95,
      "endOffset" : 103
    }, {
      "referenceID" : 16,
      "context" : "Figure 3: Qualitative and quantitative reconstruction performance of our models, compared with [20, 17].",
      "startOffset" : 95,
      "endOffset" : 103
    }, {
      "referenceID" : 16,
      "context" : "All models were trained for 8-step prediction, except [17], trained for 1-step prediction.",
      "startOffset" : 54,
      "endOffset" : 58
    }, {
      "referenceID" : 16,
      "context" : "To quantitatively evaluate the predictions, we measure average PSNR and SSIM, as proposed in [17].",
      "startOffset" : 93,
      "endOffset" : 97
    }, {
      "referenceID" : 16,
      "context" : "Unlike [17], we measure these metrics on the entire image.",
      "startOffset" : 7,
      "endOffset" : 11
    }, {
      "referenceID" : 16,
      "context" : "We report the performance of the feedforward multiscale model of [17] using an l1+GDL loss, which was the best performing model in our experiments – full results of the multi-scale models are in Appendix C.",
      "startOffset" : 65,
      "endOffset" : 69
    }, {
      "referenceID" : 19,
      "context" : "The FC LSTM model [20] reconstructs the background and lacks the representational power to reconstruct the objects in the bin.",
      "startOffset" : 18,
      "endOffset" : 22
    } ],
    "year" : 2016,
    "abstractText" : "A core challenge for an agent learning to interact with the world is to predict how its actions affect objects in its environment. Many existing methods for learning the dynamics of physical interactions require labeled object information. However, to scale real-world interaction learning to a variety of scenes and objects, acquiring labeled data becomes increasingly impractical. To learn about physical object motion without labels, we develop an action-conditioned video prediction model that explicitly models pixel motion, by predicting a distribution over pixel motion from previous frames. Because our model explicitly predicts motion, it is partially invariant to object appearance, enabling it to generalize to previously unseen objects. To explore video prediction for real-world interactive agents, we also introduce a dataset of 59,000 robot interactions involving pushing motions, including a test set with novel objects. In this dataset, accurate prediction of videos conditioned on the robot’s future actions amounts to learning a “visual imagination” of different futures based on different courses of action. Our experiments show that our proposed method produces more accurate video predictions both quantitatively and qualitatively, when compared to prior methods.",
    "creator" : null
  }
}