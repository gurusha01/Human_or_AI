{
  "name" : "1714726c817af50457d810aae9d27a2e.pdf",
  "metadata" : {
    "source" : "META",
    "title" : "Adaptive Averaging in Accelerated Descent Dynamics",
    "authors" : [ "Walid Krichene", "Alexandre M. Bayen", "Peter L. Bartlett" ],
    "emails" : [ "walid@eecs.berkeley.edu", "bayen@berkeley.edu", "bartlett@cs.berkeley.edu" ],
    "sections" : [ {
      "heading" : "1 Introduction",
      "text" : "We study the problem of minimizing a convex function f over a feasible set X , a closed convex subset of E = Rn. We will assume that f is differentiable, that its gradient ∇f is a Lipschitz function with Lipschitz constant L, and that the set of minimizers S = arg minx∈X f(x) is non-empty. We will focus on the study of continuous-time, first-order dynamics for optimization. First-order methods have seen a resurgence of interest due to the significant increase in both size and dimensionality of the data sets typically encountered in machine learning and other applications, which makes higher-order methods computationally intractable in most cases. Continuous-time dynamics for optimization have been studied for a long time, e.g. [6, 9, 5], and more recently [20, 2, 1, 3, 11, 23], in which a connection is made between Nesterov’s accelerated methods [14, 15] and a family of continuous-time ODEs. Many optimization algorithms can be interpreted as a discretization of a continuous-time process, and studying the continuous-time dynamics is useful for many reasons: The analysis is often simpler in continuous-time, it can help guide the design and analysis of new algorithms, and it provides intuition and insight into the discrete process. For example, Su et al. show in [20] that Nesterov’s original method [14] is a discretization of a second-order ODE, and use this interpretation to propose a restarting heuristic which empirically speeds up the convergence. In [11], we generalize this approach to the proximal version of Nesterov’s method [15] which applies to constrained convex problems, and show that the continuous-time ODE can be interpreted as coupled dynamics of a dual variable Z(t) which evolves in the dual space E∗, and a primal variable X(t) which is obtained as the weighted average of a non-linear transformation of the dual trajectory. More precisely, Ż(t) = − t r ∇f(X(t)) X(t) = ∫ t 0 τ r−1∇ψ∗(Z(τ))dτ∫ t 0 τ r−1dτ\nX(0) = ∇ψ∗(Z(0)) = x0,\n∗Walid Krichene is currently affiliated with Google. walidk@google.com\n30th Conference on Neural Information Processing Systems (NIPS 2016), Barcelona, Spain.\nwhere r ≥ 2 is a fixed parameter, the initial condition x0 is a point in the feasible set X , and ∇ψ∗ is a Lipschitz function that maps from the dual space E∗ to the feasible set X , which we refer to as the mirror map (such a function can be constructed using standard results from convex analysis, by taking the convex conjugate of a strongly convex function ψ with domain X ; see the supplementary material for a brief review of the definition and basic properties of mirror maps). Using a Lyapunov argument, we show that the solution trajectories of this ODE exhibit a quadratic convergence rate, i.e. if f? is the minimum of f over the feasible set, then f(X(t))− f? ≤ C/t2 for a constant C which depends on the initial conditions. This formalized an interesting connection between acceleration and averaging, which had been observed in [8] in the special case of unconstrained quadratic minimization.\nA natural question that arises is whether different averaging schemes can be used to achieve the same rate, or perhaps faster rates. In this article, we provide a positive answer. We study a broad family of Accelerated Mirror Descent (AMD) dynamics, given by\nAMDw,η  Ż(t) = −η(t)∇f(X(t)) X(t) = X(t0)W (t0)+ ∫ t t0 w(τ)∇ψ∗(Z(τ))dτ W (t) , with W (t) = ∫ t 0 w(τ)dτ\nX(t0) = ∇ψ∗(Z(t0)) = x0,\n(1)\nparameterized by two positive, continuous weight functions w and η, where w is used in the averaging and η determines the rate at which Z accumulates gradients. This is illustrated in Figure 1. In our formulation we choose to initialize the ODE at t0 > 0 instead of 0 (to guarantee existence and uniqueness of a solution, as discussed in Section 2). We give a unified study of this ODE using an appropriate Lyapunov function, given by\nLr(X,Z, t) = r(t)(f(X)− f?) +Dψ∗(Z, z?), (2) where Dψ∗ is the Bregman divergence associated with ψ∗ (a non-negative function defined on E∗ × E∗), and r(t) is a desired convergence rate (a non-negative function defined on R+). By construction, Lr is a non-negative function on X × E∗ × R+. If t 7→ Lr(X(t), Z(t), t) is a non-increasing function for all solution trajectories (X(t), Z(t)), then Lr is said to be a Lyapunov function for the ODE, in reference to Aleksandr Mikhailovich Lyapunov [12]. We give in Theorem 2 a sufficient condition on η, w and r for Lr to be a Lyapunov function for AMDw,η, and show that under these conditions, f(X(t)) converges to f? at the rate 1/r(t).\nIn Section 3, we give an equivalent formulation of AMDw,η written purely in the primal space. We give several examples of these dynamics for simple constraint sets. In particular, when the feasible set is the probability simplex, we derive an accelerated version of the replicator dynamics, an ODE that plays an important role in evolutionary game theory [22] and viability theory [4].\nMany heuristics have been developed to empirically speed up the convergence of accelerated methods. Most of these heuristics consist in restarting the ODE (or the algorithm in discrete time) whenever a simple condition is met. For example, a gradient restart heuristic is proposed in [17], in which the algorithm is restarted whenever the trajectory forms an acute angle with the gradient (which intuitively indicates that the trajectory is not making progress), and a speed restarting heuristic is proposed in [20], in which the ODE is restarted whenever the speed ‖Ẋ(t)‖ decreases (which intuitively indicates that progress is slowing). These heuristics are known to empirically improve\nthe speed of convergence, but provide few guarantees. For example, the gradient restart in [17] is only studied for unconstrained quadratic problems, and the speed restart in [20] is only studied for unconstrained strongly convex problems. In particular, it is not guaranteed (to our knowledge) that these heuristics preserve the original convergence rate of the non-restarted method, when the objective function is not strongly convex. In Section 4, we propose a new heuristic that provides such guarantees, and that is based on a simple idea for adaptively computing the weights w(t) along the solution trajectories. The heuristic simply decreases the time derivative of the Lyapunov function Lr(X(t), Z(t), t) whenever possible. Thus it preserves the 1/r(t) convergence rate. Other adaptive methods have been applied to convex optimization, such as Adagrad [7] and Adam [10], which adapt the learning rate in first-order methods, by maintaining moment estimates of the observed gradients. They are particularly well suited to problems with sparse gradients. While these methods are similar in spirit to adaptive averaging, they are not designed for accelerated methods. In Section 5, we give numerical experiments in which we compare the performance of adaptive averaging and restarting. The experiments indicate that adaptive averaging compares favorably in all of the examples, and gives a significant improvement in some cases. We conclude with a brief discussion in Section 6."
    }, {
      "heading" : "2 Accelerated mirror descent with generalized averaging",
      "text" : "We start by giving an equivalent form of AMDw,η, which we use to briefly discuss existence and uniqueness of a solution. Writing the second equation as X(t)W (t) − X(t0)W (t0) =∫ t t0 w(τ)∇ψ∗(Z(τ))dτ , then taking the time-derivative, we have\nẊ(t)W (t) +X(t)w(t) = w(t)∇ψ∗(Z(t)). Thus the ODE is equivalent to\nAMD′w,η  Ż(t) = −η(t)∇f(X(t)) Ẋ(t) = w(t) W (t) (∇ψ∗(Z(t))−X(t))\nX(t0) = ∇ψ∗(Z(t0)) = x0.\nThe following theorem guarantees existence and uniqueness of the solution. Theorem 1. Suppose that W (t0) > 0. Then AMDw,η has a unique maximal (i.e. defined on a maximal interval) solution (X(t), Z(t)) that is C1([t0,+∞)). Furthermore, for all t ≥ t0, X(t) belongs to the feasible set X .\nProof. Recall that, by assumption, ∇f and ∇ψ∗ are both Lipschitz, and w, η are continuous. Furthermore, W (t) is non-decreasing and continuous, as the integral of a non-negative function, thus w(t)/W (t) ≤ w(t)/W (t0). This guarantees that on any finite interval [t0, T ), the functions η(t) and w(t)/W (t) are bounded. Therefore, −η(t)∇f(X) and w(t)W (t) (∇ψ∗(Z)−X) are Lipschitz functions of (X,Z), uniformly in t ∈ [t0, T ). By the Cauchy-Lipschitz theorem (e.g. Theorem 2.5 in [21]), there exists a unique C1 solution defined on [t0, T ). Since T is arbitrary, this defines a unique solution on all of [t0,+∞). Indeed, any two solutions defined on [t0, T1) and [t0, T2) with T2 > T1 coincide on [t0, T1). Finally, feasibility of the solution follows from the fact that X is convex and X(t) is the weighted average of points in X , specifically, x0 and the set {∇ψ∗(Z(τ)), τ ∈ [t0, t]}.\nNote that in general, it is important to initialize the ODE at t0 and not 0, since W (0) = 0 and w(t)/W (t) can diverge at 0, in which case one cannot apply the Cauchy-Lipschitz theorem. It is possible however to prove existence and uniqueness with t0 = 0 for some choices of w, by taking a sequence of Lipschitz ODEs that approximate the original one, as is done in [20], but this is a technicality and does not matter for practical purposes.\nWe now move to our main result for this section. Suppose that r is an increasing, positive differentiable function on [t0,+∞), and consider the candidate Lyapunov function Lr defined in (2), where the Bregman divergence term is given by\nDψ∗(z, y) := ψ ∗(z)− ψ∗(y)− 〈∇ψ∗(y), z − y〉 ,\nand z? is a point in the dual space such that∇ψ∗(z?) = x? belongs to the set of minimizers S. Let (X(t), Z(t)) be the unique maximal solution trajectory of AMDw,η .\nTaking the derivative of t 7→ Lr(X(t), Z(t), t) = r(t)(f(X(t))− f?) +Dψ∗(Z(t), z?), we have d dt Lr(X(t), Z(t), t) = r ′(t)(f(X(t))− f?) + r(t) 〈 ∇f(X(t)), Ẋ(t) 〉 + 〈 Ż(t),∇ψ∗(Z(t))−∇ψ∗(z?) 〉 = r′(t)(f(X(t))− f?) + r(t) 〈 ∇f(X(t)), Ẋ(t) 〉 + 〈 −η(t)∇f(X(t)), X(t) + W (t)\nw(t) Ẋ(t)− x? 〉 ≤ (f(X(t))− f?)(r′(t)− η(t)) + 〈 ∇f(X(t)), Ẋ(t) 〉( r(t)− η(t)W (t)\nw(t)\n) , (3)\nwhere we used the expressions for Ż and ∇ψ∗(Z) from AMD′w,η in the second equality, and convexity of f in the last inequality. Equipped with this bound, it becomes straightforward to give sufficient conditions for Lr to be a Lyapunov function. Theorem 2. Suppose that for all t ∈ [t0,+∞),\n1. η(t) ≥ r′(t) and 2. 〈 ∇f(X(t)), Ẋ(t) 〉( r(t)− η(t)W (t)w(t) ) ≤ 0.\nThen Lr is a Lyapunov function for AMDw,η , and for all t ≥ t0, f(X(t))− f? ≤ Lr(X(t0),Z(t0),t0)r(t) .\nProof. The two conditions, combined with inequality (3), imply that ddtLr(X(t), Z(t), t) ≤ 0, thus Lr is a Lyapunov function. Finally, since Dψ∗ is non-negative, and Lr is decreasing, we have\nf(X(t))− f? ≤ Lr(X(t), Z(t), t) r(t) ≤ Lr(X(t0), Z(t0), t0) r(t) .\nwhich proves the claim.\nNote that the second condition depends on the solution trajectory X(t), and may be hard to check a priori. However, we give one special case in which the condition trivially holds.\nCorollary 1. Suppose that for all t ∈ [t0,+∞), η(t) = w(t)r(t)W (t) , and w(t) W (t) ≥ r′(t) r(t) . Then Lr is a Lyapunov function for AMDw,η , and for all t ≥ t0, f(X(t))− f? ≤ Lr(X(t0),Z(t0),t0)r(t) .\nNext, we describe a method to construct weight functions w, η that satisfy the conditions of Corollary 1, given a desired rate r. Of course, it suffices to construct w that satisfies w(t)W (t) ≥ r′(t) r(t) , then to set η(t) = w(t)r(t)W (t) . We can reparameterize the weight function by writing w(t) W (t) = a(t). Then\nintegrating from t0 to t, we have W (t) W (t0)\n= e ∫ t t0 a(τ)dτ , and\nw(t) = w(t0) a(t) a(t0) e ∫ t t0 a(τ)dτ . (4)\nTherefore the conditions of the corollary are satisfied whenever w(t) is of the form (4) and a : R+ → R+ is a continuous, positive function with a(t) ≥ r ′(t) r(t) . Note that the expression of w is defined up to the constant w(t0), which reflects the fact that the condition of the corollary is scale-invariant (if the condition holds for a function w, then it holds for αw for all α > 0). Example 1. Let r(t) = t2. Then r′(t)/r(t) = 2/t, and we can take a(t) = βt with β ≥ 2. Then w(t) = a(t)a(t0)e ∫ t t0 a(τ)dτ = β/tβ/t0 e β ln(t/t0) = (t/t0)\nβ−1 and η(t) = w(t)r(t)W (t) = βt, and we recover the weighting scheme used in [11].\nExample 2. More generally, if r(t) = tp, p ≥ 1, then r′(t)/r(t) = p/t, and we can take a(t) = βt with β ≥ p. Then w(t) = (t/t0)β−1, and η(t) = w(t)r(t)W (t) = βtp−1.\nWe also exhibit in the following a second energy function that is guaranteed to decrease under the same conditions. This energy function, unlike the Lyapunov function Lr, does not guarantee a specific convergence rate. However, it captures a natural measure of energy in the system. To define this energy function, we will use the following characterization of the inverse mirror map: By duality of the subdifferentials (e.g. Theorem 23.5 in [18]), we have for a pair of convex conjugate functions ψ and ψ∗ that x ∈ ∂ψ∗(x∗) if and only if x∗ ∈ ∂ψ(x). To simplify the discussion, we will assume that ψ is also differentiable, so that (∇ψ∗)−1 = ∇ψ (this assumption can be relaxed). In what follows, we will denote by X̌ = ∇ψ(X) and Ž = ∇ψ∗(Z).\nTheorem 3. Let (X(t), Z(t)) be the unique maximal solution of AMDw,η, and let X̌ = ∇ψ(X). Consider the energy function\nEr(t) = f(X(t)) + 1\nr(t) Dψ∗(Z(t), X̌(t)). (5)\nThen if w, η satisfy condition (2) of Theorem 2, Er is a decreasing function of time.\nProof. To make the notation more concise, we omit the explicit dependence on time in this proof. We have Dψ∗(Z, X̌) = ψ∗(Z)− ψ∗(X̌)− 〈 X,Z − X̌ 〉 . Taking the time-derivative , we have\nd dt Dψ∗(Z, X̌) =\n〈 ∇ψ∗(Z), Ż 〉 − 〈 ∇ψ∗(X̌), ˙̌X 〉 − 〈 Ẋ, Z − X̌ 〉 − 〈 X, Ż − ˙̌X 〉 = 〈 ∇ψ∗(Z)−X, Ż 〉 − 〈 Ẋ, Z − X̌ 〉 .\nUsing the second equation in AMD′w,η, we have ∇ψ∗(Z) − X = 1aẊ , and 〈 Ẋ, Z − X̌ 〉 =\na 〈 ∇ψ∗(Z)−∇ψ∗(X̌), Z − X̌ 〉 ≥ 0 by monotonicity of ∇ψ∗. Combining, we have\nd dtDψ∗(Z, X̌) ≤ − η a\n〈 Ẋ,∇f(X) 〉 , and we can finally bound the derivative of Er:\nd dt Er(t) =\n〈 ∇f(X), Ẋ 〉 + 1\nr\nd dt Dψ∗(Z, X̌)−\nr′ r2 Dψ∗(Z, X̌)\n≤ 〈 ∇f(X), Ẋ 〉( 1− η\nar\n) .\nTherefore condition (2) of Theorem 2 implies that ddtEr(t) ≤ 0.\nThis energy function can be interpreted, loosely speaking, as the sum of a potential energy given by f(X), and a kinetic energy given by 1r(t)Dψ∗(Z, X̌): Indeed, when the problem is unconstrained, then one can take ψ∗(z) = 12‖z‖2, in which case ∇ψ∗ = ∇ψ = I , the identity, and Dψ∗(Z, X̌) = 1 2‖Ž −X‖2 = 12‖ Ẋa ‖2, a quantity proportional to the kinetic energy."
    }, {
      "heading" : "3 Primal Representation and Example Dynamics",
      "text" : "An equivalent primal representation can be obtained by rewriting the equations in terms of Ž = ∇ψ∗(Z) and its derivatives (Ž is a primal variable that remains in X , since ∇ψ∗ maps into X ). In this section, we assume that ψ∗ is twice differentiable on E∗. Taking the time derivative of Ž(t) = ∇ψ∗(Z(t)), we have\n˙̌Z(t) = ∇2ψ∗(Z(t))Ż(t) = −η(t)∇2ψ∗ ◦ ∇ψ(Ž(t))∇f(X(t)),\nwhere∇2ψ∗(z) is the Hessian of ψ∗ at z, defined as∇2ψ∗(z)ij = ∂ 2ψ∗(z) ∂zj∂zi\n. Then using the averaging expression for X , we can write AMDw,η in the following primal form\nAMDpw,η  ˙̌Z(t) = −η(t)∇2ψ∗ ◦ ∇ψ(Ž(t))∇f ( x0W (t0)+ ∫ t t0 w(τ)Ž(τ)dτ W (t) ) Ž(t0) = x0.\n(6)\nA similar derivation can be made for the mirror descent ODE without acceleration, which can be written as follows [11] (see also the original derivation of Nemirovski and Yudin in Chapter 3 in [13])\nMD  Ż(t) = −∇f(X(t)) X(t) = ∇ψ∗(Z(t)) X(t0) = x0.\nNote that this can be interpreted as a limit case of AMDη,w with η(t) ≡ 1 and w(t) a Dirac function at t. Taking the time derivative of X(t) = ∇ψ∗(Z(t)), we have Ẋ(t) = ∇2ψ∗(Z(t))Ż(t), which leads to the primal form of the mirror descent ODE\nMDp {\nẊ(t) = −∇2ψ∗ ◦ ∇ψ(X(t))∇f(X(t)) X(t0) = x0.\n(7)\nThe operator ∇2ψ∗ ◦ ∇ψ appears in both primal representations (6) and (7), and multiplies the gradient of f . It can be thought of as a transformation of the gradient which ensures that the primal trajectory remains in the feasible set, this is illustrated in the supplementary material. For some choices of ψ,∇2ψ∗ ◦ ∇ψ has a simple expression. We give two examples below. We also observe that in its primal form, AMDpw,η is a generalization of the ODE family studied in [23], which can be written as ddt∇ψ(X(t) + e−α(t)Ẋ(t)) = −eα(t)+β(t)∇f(X(t)), for which they prove the convergence rate O(e−β(t)). This corresponds to setting, in our notation, a(t) = eα(t), r(t) = eβ(t) and taking η(t) = a(t)r(t) (which corresponds to the condition of Corollary 1).\nPositive-orthant-constrained dynamics Suppose that X is the positive orthant Rn+, and consider the negative entropy function ψ(x) = ∑ i xi lnxi. Then its dual is ψ ∗(z) = ∑ i e zi−1, and we have ∇ψ(x)i = 1 + lnxi and∇2ψ∗(z)i,j = δji ezi−1, where δji is 1 if i = j and 0 otherwise. Thus for all x ∈ Rn+,∇2ψ∗ ◦ ∇ψ(x) = diag(x). Therefore, the primal forms (7) and (6), reduce to, respectively,{∀i, Ẋi = −Xi∇f(X)i\nX(0) = x0\n{ ∀i, ˙̌Zi = −η(t)Ži∇f(X)i Ž(t0) = x0\nwhere for the second ODE we write X compactly to denote the weighted average given by the second equation of AMDw,η. When f is affine, the mirror descent ODE lead to Lotka-Volterra equation which has applications in economics and ecology. For the mirror descent ODE, one can verify that the solution remains in the positive orthant since Ẋ tends to 0 as Xi approaches the boundary of the feasible set. Similarly for the accelerated version, ˙̌Z tends to 0 as Ž approaches the boundary, thus Ž remains feasible, and so does X by convexity.\nSimplex-constrained dynamics: the replicator equation. Now suppose that X is the n-simplex, X = ∆ = {x ∈ Rn+ : ∑n i=1 xi = 1}. Consider the distance-generating function ψ(x) =∑n\ni=1 xi lnxi + δX (x), where δX (·) is the convex indicator function of the feasible set. Then its conjugate is ψ∗(z) = ln ( ∑n i=1 e\nzi), defined on E∗, and we have ∇ψ(x)i = 1 + lnxi, ∇ψ∗(z)i = ezi∑ k e zk , and ∇2ψ∗(z)ij = δ j i e zi∑ k e zk − eziezj ( ∑\nk e zk) 2 . Then it is simple to calculate ∇2ψ∗ ◦ ∇ψ(x)ij = δjixi∑ k xk − xixj ( ∑ k xk) 2 = δ\nj i xi − xixj . Therefore, the primal forms (7) and (6) reduce to, respectively,{\n∀i, Ẋi +Xi (∇f(X)i − 〈X,∇f(X)〉) = 0 X(0) = x0\n{ ∀i, ˙̌Zi + η(t)Ži ( ∇f(X)i − 〈 Ž,∇f(X) 〉) = 0\nŽ(0) = x0.\nThe first ODE is known as the replicator dynamics [19], and has many applications in evolutionary game theory [22] and viability theory [4], among others. See the supplementary material for additional discussion on the interpretation and applications of the replicator dynamics. This example shows that the replicator dynamics can be accelerated simply by performing the original replicator update on the variable Ž, in which (i) the gradient of the objective function is scaled by η(t) at time t, and (ii) the gradient is evaluated at X(t), the weighted average of the Ž trajectory."
    }, {
      "heading" : "4 Adaptive Averaging Heuristic",
      "text" : "In this section, we propose an adaptive averaging heuristic for adaptively computing the weights w. Note that in Corollary 1, we simply set a(t) = η(t)r(t) so that 〈 ∇f(X(t)), Ẋ(t) 〉( r(t)− η(t)a(t) ) is identically zero (thus trivially satisfying condition (2) of Theorem 2). However, from the bound (3), if this term is negative, then this helps further decrease the Lyapunov function Lr (as well as the energy function Er). A simple strategy is then to adaptively choose a(t) as follows{\na(t) = η(t)r(t) if 〈 ∇f(X(t)), Ẋ(t) 〉 > 0, a(t) ≥ η(t)r(t) otherwise. (8)\nIf we further have η(t) ≥ r′(t), then the conditions of Theorem 2 and Theorem 3 are satisfied, which guarantee that Lr is a Lyapunov function and that the energy Er decreases. In particular, such a heuristic would preserve the convergence rate r(t) by Theorem 2.\nWe now propose a discrete version of the heuristic when r(t) = t2. We consider the quadratic rate in particular since in this case the discretization proposed by [11] preserves the quadratic rate, and corresponds to a first-order accelerated method2 for which many heuristics have been developed, such as the restarting heuristics [17, 20] discussed in the introduction. To satisfy condition (1) of Theorem 2, we choose η(t) = βt with β ≥ 2. Note that in this case, η(t)r(t) = β t . In the supplementary\nmaterial, we propose a discretization of the heuristic (8), using the correspondance t = k √ s, for a step size s. The resulting algorithm is summarized in Algorithm 1, where ψ∗ is a smooth distance generating function, and R is a regularizer assumed to be strongly convex and smooth. We give a bound on the convergence rate of Algorithm 1 in the supplementary material. The proof relies on a discrete counterpart of the Lyapunov function Lr.\nThe algorithm keeps ak = ak−1 whenever f(x̃(k+1)) ≤ f(x̃(k)), and sets ak to βk√s otherwise. This results in a non-increasing sequence ak. It is worth observing that in continuous time, from the expression (4), a constant a(t) over an interval [t1, t2] corresponds to an exponential increase in the weight w(t) over that interval, while a(t) = βt corresponds to a polynomial increase w(t) = (t/t0)\nβ−1. Intuitively, adaptive averaging increases the weights w(t) on portions of the trajectory which make progress.\nAlgorithm 1 Accelerated mirror descent with adaptive averaging 1: Initialize x̃(0) = x0, ž(0) = x0, a1 = β√s 2: for k ∈ N do 3: ž(k+1) = arg minž∈X βks 〈 ∇f(x(k)), ž 〉 +Dψ(ž, ž (k)).\n4: x̃(k+1) = arg minx̃∈X γs 〈 ∇f(x(k)), x̃ 〉 +R(x̃, x(k)) 5: x(k+1) = λk+1ž(k+1) + (1− λk+1)x̃(k+1), with λk = √ sak\n1+ √ sak . 6: ak = min ( ak−1, βmax\nk √ s ) 7: if f(x̃(k+1))− f(x̃(k)) > 0 then 8: ak = βk√s"
    }, {
      "heading" : "5 Numerical Experiments",
      "text" : "In this section, we compare our adaptive averaging heuristic (in its discrete version given in Algorithm 1) to existing restarting heuristics. We consider simplex-constrained problems and take the distance generating function ψ to be the entropy function, so that the resulting algorithm is a discretization of the accelerated replicator ODE studied in Section 3. We perform the experiments in R3 so that we can visualize the solution trajectories (the supplementary material contains additional experiments in higher dimension). We consider different objective functions: A strongly convex quadratic given by f(x) = (x − s)TA(x − s) for a positive definite matrix A, a weakly convex quadratic, a linear function f(x) = cTx, and the Kullback-Leibler divergence, f(x) = DKL(x?, x). We compare the following methods:\n1. The original accelerated mirror descent method (in which the weights follow a predetermined schedule given by ak = βk√s ), 2. Our adaptive averaging, in which ak is computed adaptively following Algorithm 1, 3. The gradient restarting heuristic in [17], in which the algorithm is restarted from the current\npoint whenever 〈 ∇f(x(k)), x(k+1) − x(k) 〉 > 0,\n4. The speed restarting heuristic in [20], in which the algorithm is restarted from the current point whenever ‖x(k+1) − x(k)‖ ≤ ‖x(k) − x(k−1)‖.\nThe results are shown in Figure 2. Each subfigure is divided into four plots: Clockwise from the top left, we show the value of the objective function, the trajectory on the simplex, the value of the energy function Er and the value of the Lyapunov function Lr.\n2For faster rates r(t) = tp, p > 2, it is possible to discretize the ODE and preserve the convergence rate, as proposed by Wibisono et al. [23], however this discretization results in a higher-order method such as Nesterov’s cubic accelerated Newton method [16].\nThe experiments show that adaptive averaging compares favorably to the restarting heuristics on all these examples, with a significant improvement in the strongly convex case. Additionally, the experiments confirm that under the adaptive averaging heuristic, the Lyapunov function is decreasing. This is not the case for the restarting heuristics as can be seen on the weakly convex example. It is interesting to observe, however, that the energy function Er is non-increasing for all the methods in our experiments. If we interpret the energy as the sum of a potential and a kinetic term, then this could be explained intuitively by the fact that restarting keeps the potential energy constant, and decreases the kinetic energy (since the velocity is reset to zero). It is also worth observing that even though the Lyapunov function Lr is non-decreasing, it will not necessarily converge to 0 when there is more than one minimizer (its limit will depend on the choice of z? in the definition of Lr).\nFinally, we observe that the methods have a different qualitative behavior: The original accelerated method typically exhibits oscillations around the set of minimizers. The heuristics alleviate these oscillations in different ways: Intuitively, adaptive averaging acts by increasing the weights on portions of the trajectory which make the most progress, while the restarting heuristics reset the velocity to zero whenever the algorithm detects that the trajectory is moving in a bad direction. The speed restarting heuristic seems to be more conservative in that it restarts more frequently."
    }, {
      "heading" : "6 Conclusion",
      "text" : "Motivated by the averaging formulation of accelerated mirror descent, we studied a family of ODEs with a generalized averaging scheme, and gave simple sufficient conditions on the weight functions to guarantee a given convergence rate in continuous time. We showed as an example how the replicator ODE can be accelerated by averaging. Our adaptive averaging heuristic preserves the convergence rate (since it preserves the Lyapunov function), and it seems to perform at least as well as other heuristics for first-order accelerated methods, and in some cases considerably better. This encourages further investigation into the performance of this adaptive averaging, both theoretically (by attempting to prove faster rates, e.g. for strongly convex functions), and numerically, by testing it on other methods, such as the higher-order accelerated methods proposed in [23]."
    } ],
    "references" : [ {
      "title" : "The rate of convergence of nesterov’s accelerated forwardbackward method is actually faster than 1/k2",
      "author" : [ "H. Attouch", "J. Peypouquet" ],
      "venue" : "SIAM Journal on Optimization,",
      "citeRegEx" : "1",
      "shortCiteRegEx" : "1",
      "year" : 2016
    }, {
      "title" : "Fast convergence of an inertial gradient-like system with vanishing viscosity",
      "author" : [ "H. Attouch", "J. Peypouquet", "P. Redont" ],
      "venue" : "CoRR, abs/1507.04782,",
      "citeRegEx" : "2",
      "shortCiteRegEx" : "2",
      "year" : 2015
    }, {
      "title" : "Fast convex optimization via inertial dynamics with hessian driven damping",
      "author" : [ "H. Attouch", "J. Peypouquet", "P. Redont" ],
      "venue" : null,
      "citeRegEx" : "3",
      "shortCiteRegEx" : "3",
      "year" : 2016
    }, {
      "title" : "Viability Theory",
      "author" : [ "J.-P. Aubin" ],
      "venue" : null,
      "citeRegEx" : "4",
      "shortCiteRegEx" : "4",
      "year" : 1991
    }, {
      "title" : "Hamiltonian and gradient flows, algorithms, and control",
      "author" : [ "A. Bloch", "editor" ],
      "venue" : "American Mathematical Society,",
      "citeRegEx" : "5",
      "shortCiteRegEx" : "5",
      "year" : 1994
    }, {
      "title" : "Some effective methods for unconstrained optimization based on the solution of systems of ordinary differential equations",
      "author" : [ "A.A. Brown", "M.C. Bartholomew-Biggs" ],
      "venue" : "Journal of Optimization Theory and Applications,",
      "citeRegEx" : "6",
      "shortCiteRegEx" : "6",
      "year" : 1989
    }, {
      "title" : "Adaptive subgradient methods for online learning and stochastic optimization",
      "author" : [ "J. Duchi", "E. Hazan", "Y. Singer" ],
      "venue" : "J. Mach. Learn. Res.,",
      "citeRegEx" : "7",
      "shortCiteRegEx" : "7",
      "year" : 2011
    }, {
      "title" : "From averaging to acceleration, there is only a step-size",
      "author" : [ "N. Flammarion", "F.R. Bach" ],
      "venue" : "In 28th Conference on Learning Theory, COLT,",
      "citeRegEx" : "8",
      "shortCiteRegEx" : "8",
      "year" : 2015
    }, {
      "title" : "Optimization and dynamical systems. Communications and control engineering series",
      "author" : [ "U. Helmke", "J. Moore" ],
      "venue" : null,
      "citeRegEx" : "9",
      "shortCiteRegEx" : "9",
      "year" : 1994
    }, {
      "title" : "Adam: A method for stochastic optimization",
      "author" : [ "D.P. Kingma", "J. Ba" ],
      "venue" : "In Proceedings of the 3rd International Conference on Learning Representations (ICLR),",
      "citeRegEx" : "10",
      "shortCiteRegEx" : "10",
      "year" : 2014
    }, {
      "title" : "Accelerated mirror descent in continuous and discrete time",
      "author" : [ "W. Krichene", "A. Bayen", "P. Bartlett" ],
      "venue" : "In NIPS,",
      "citeRegEx" : "11",
      "shortCiteRegEx" : "11",
      "year" : 2015
    }, {
      "title" : "General Problem of the Stability Of Motion",
      "author" : [ "A. Lyapunov" ],
      "venue" : "Control Theory and Applications Series. Taylor & Francis,",
      "citeRegEx" : "12",
      "shortCiteRegEx" : "12",
      "year" : 1992
    }, {
      "title" : "Problem Complexity and Method Efficiency in Optimization. Wiley-Interscience series in discrete mathematics",
      "author" : [ "A.S. Nemirovsky", "D.B. Yudin" ],
      "venue" : null,
      "citeRegEx" : "13",
      "shortCiteRegEx" : "13",
      "year" : 1983
    }, {
      "title" : "A method of solving a convex programming problem with convergence rate o(1/k2)",
      "author" : [ "Y. Nesterov" ],
      "venue" : "Soviet Mathematics Doklady,",
      "citeRegEx" : "14",
      "shortCiteRegEx" : "14",
      "year" : 1983
    }, {
      "title" : "Smooth minimization of non-smooth functions",
      "author" : [ "Y. Nesterov" ],
      "venue" : "Mathematical Programming,",
      "citeRegEx" : "15",
      "shortCiteRegEx" : "15",
      "year" : 2005
    }, {
      "title" : "Accelerating the cubic regularization of newton’s method on convex problems",
      "author" : [ "Y. Nesterov" ],
      "venue" : "Mathematical Programming,",
      "citeRegEx" : "16",
      "shortCiteRegEx" : "16",
      "year" : 2008
    }, {
      "title" : "Adaptive restart for accelerated gradient schemes",
      "author" : [ "B. O’Donoghue", "E. Candès" ],
      "venue" : "Foundations of Computational Mathematics,",
      "citeRegEx" : "17",
      "shortCiteRegEx" : "17",
      "year" : 2015
    }, {
      "title" : "Convex Analysis",
      "author" : [ "R. Rockafellar" ],
      "venue" : null,
      "citeRegEx" : "18",
      "shortCiteRegEx" : "18",
      "year" : 1970
    }, {
      "title" : "Complexity, Language, and Life: Mathematical Approaches, chapter A Survey of Replicator Equations, pages 88–104",
      "author" : [ "K. Sigmund" ],
      "venue" : null,
      "citeRegEx" : "19",
      "shortCiteRegEx" : "19",
      "year" : 1986
    }, {
      "title" : "A differential equation for modeling Nesterov’s accelerated gradient method: Theory and insights",
      "author" : [ "W. Su", "S. Boyd", "E. Candès" ],
      "venue" : "In NIPS,",
      "citeRegEx" : "20",
      "shortCiteRegEx" : "20",
      "year" : 2014
    }, {
      "title" : "Ordinary differential equations and dynamical systems, volume 140",
      "author" : [ "G. Teschl" ],
      "venue" : "American Mathematical Soc.,",
      "citeRegEx" : "21",
      "shortCiteRegEx" : "21",
      "year" : 2012
    }, {
      "title" : "Evolutionary game theory",
      "author" : [ "J.W. Weibull" ],
      "venue" : "MIT press,",
      "citeRegEx" : "22",
      "shortCiteRegEx" : "22",
      "year" : 1997
    }, {
      "title" : "A variational perspective on accelerated methods in optimization",
      "author" : [ "A. Wibisono", "A.C. Wilson", "M.I. Jordan" ],
      "venue" : "CoRR, abs/1603.04245,",
      "citeRegEx" : "23",
      "shortCiteRegEx" : "23",
      "year" : 2016
    } ],
    "referenceMentions" : [ {
      "referenceID" : 5,
      "context" : "[6, 9, 5], and more recently [20, 2, 1, 3, 11, 23], in which a connection is made between Nesterov’s accelerated methods [14, 15] and a family of continuous-time ODEs.",
      "startOffset" : 0,
      "endOffset" : 9
    }, {
      "referenceID" : 8,
      "context" : "[6, 9, 5], and more recently [20, 2, 1, 3, 11, 23], in which a connection is made between Nesterov’s accelerated methods [14, 15] and a family of continuous-time ODEs.",
      "startOffset" : 0,
      "endOffset" : 9
    }, {
      "referenceID" : 4,
      "context" : "[6, 9, 5], and more recently [20, 2, 1, 3, 11, 23], in which a connection is made between Nesterov’s accelerated methods [14, 15] and a family of continuous-time ODEs.",
      "startOffset" : 0,
      "endOffset" : 9
    }, {
      "referenceID" : 19,
      "context" : "[6, 9, 5], and more recently [20, 2, 1, 3, 11, 23], in which a connection is made between Nesterov’s accelerated methods [14, 15] and a family of continuous-time ODEs.",
      "startOffset" : 29,
      "endOffset" : 50
    }, {
      "referenceID" : 1,
      "context" : "[6, 9, 5], and more recently [20, 2, 1, 3, 11, 23], in which a connection is made between Nesterov’s accelerated methods [14, 15] and a family of continuous-time ODEs.",
      "startOffset" : 29,
      "endOffset" : 50
    }, {
      "referenceID" : 0,
      "context" : "[6, 9, 5], and more recently [20, 2, 1, 3, 11, 23], in which a connection is made between Nesterov’s accelerated methods [14, 15] and a family of continuous-time ODEs.",
      "startOffset" : 29,
      "endOffset" : 50
    }, {
      "referenceID" : 2,
      "context" : "[6, 9, 5], and more recently [20, 2, 1, 3, 11, 23], in which a connection is made between Nesterov’s accelerated methods [14, 15] and a family of continuous-time ODEs.",
      "startOffset" : 29,
      "endOffset" : 50
    }, {
      "referenceID" : 10,
      "context" : "[6, 9, 5], and more recently [20, 2, 1, 3, 11, 23], in which a connection is made between Nesterov’s accelerated methods [14, 15] and a family of continuous-time ODEs.",
      "startOffset" : 29,
      "endOffset" : 50
    }, {
      "referenceID" : 22,
      "context" : "[6, 9, 5], and more recently [20, 2, 1, 3, 11, 23], in which a connection is made between Nesterov’s accelerated methods [14, 15] and a family of continuous-time ODEs.",
      "startOffset" : 29,
      "endOffset" : 50
    }, {
      "referenceID" : 13,
      "context" : "[6, 9, 5], and more recently [20, 2, 1, 3, 11, 23], in which a connection is made between Nesterov’s accelerated methods [14, 15] and a family of continuous-time ODEs.",
      "startOffset" : 121,
      "endOffset" : 129
    }, {
      "referenceID" : 14,
      "context" : "[6, 9, 5], and more recently [20, 2, 1, 3, 11, 23], in which a connection is made between Nesterov’s accelerated methods [14, 15] and a family of continuous-time ODEs.",
      "startOffset" : 121,
      "endOffset" : 129
    }, {
      "referenceID" : 19,
      "context" : "show in [20] that Nesterov’s original method [14] is a discretization of a second-order ODE, and use this interpretation to propose a restarting heuristic which empirically speeds up the convergence.",
      "startOffset" : 8,
      "endOffset" : 12
    }, {
      "referenceID" : 13,
      "context" : "show in [20] that Nesterov’s original method [14] is a discretization of a second-order ODE, and use this interpretation to propose a restarting heuristic which empirically speeds up the convergence.",
      "startOffset" : 45,
      "endOffset" : 49
    }, {
      "referenceID" : 10,
      "context" : "In [11], we generalize this approach to the proximal version of Nesterov’s method [15] which applies to constrained convex problems, and show that the continuous-time ODE can be interpreted as coupled dynamics of a dual variable Z(t) which evolves in the dual space E∗, and a primal variable X(t) which is obtained as the weighted average of a non-linear transformation of the dual trajectory.",
      "startOffset" : 3,
      "endOffset" : 7
    }, {
      "referenceID" : 14,
      "context" : "In [11], we generalize this approach to the proximal version of Nesterov’s method [15] which applies to constrained convex problems, and show that the continuous-time ODE can be interpreted as coupled dynamics of a dual variable Z(t) which evolves in the dual space E∗, and a primal variable X(t) which is obtained as the weighted average of a non-linear transformation of the dual trajectory.",
      "startOffset" : 82,
      "endOffset" : 86
    }, {
      "referenceID" : 7,
      "context" : "This formalized an interesting connection between acceleration and averaging, which had been observed in [8] in the special case of unconstrained quadratic minimization.",
      "startOffset" : 105,
      "endOffset" : 108
    }, {
      "referenceID" : 11,
      "context" : "If t 7→ Lr(X(t), Z(t), t) is a non-increasing function for all solution trajectories (X(t), Z(t)), then Lr is said to be a Lyapunov function for the ODE, in reference to Aleksandr Mikhailovich Lyapunov [12].",
      "startOffset" : 202,
      "endOffset" : 206
    }, {
      "referenceID" : 21,
      "context" : "In particular, when the feasible set is the probability simplex, we derive an accelerated version of the replicator dynamics, an ODE that plays an important role in evolutionary game theory [22] and viability theory [4].",
      "startOffset" : 190,
      "endOffset" : 194
    }, {
      "referenceID" : 3,
      "context" : "In particular, when the feasible set is the probability simplex, we derive an accelerated version of the replicator dynamics, an ODE that plays an important role in evolutionary game theory [22] and viability theory [4].",
      "startOffset" : 216,
      "endOffset" : 219
    }, {
      "referenceID" : 16,
      "context" : "For example, a gradient restart heuristic is proposed in [17], in which the algorithm is restarted whenever the trajectory forms an acute angle with the gradient (which intuitively indicates that the trajectory is not making progress), and a speed restarting heuristic is proposed in [20], in which the ODE is restarted whenever the speed ‖Ẋ(t)‖ decreases (which intuitively indicates that progress is slowing).",
      "startOffset" : 57,
      "endOffset" : 61
    }, {
      "referenceID" : 19,
      "context" : "For example, a gradient restart heuristic is proposed in [17], in which the algorithm is restarted whenever the trajectory forms an acute angle with the gradient (which intuitively indicates that the trajectory is not making progress), and a speed restarting heuristic is proposed in [20], in which the ODE is restarted whenever the speed ‖Ẋ(t)‖ decreases (which intuitively indicates that progress is slowing).",
      "startOffset" : 284,
      "endOffset" : 288
    }, {
      "referenceID" : 16,
      "context" : "For example, the gradient restart in [17] is only studied for unconstrained quadratic problems, and the speed restart in [20] is only studied for unconstrained strongly convex problems.",
      "startOffset" : 37,
      "endOffset" : 41
    }, {
      "referenceID" : 19,
      "context" : "For example, the gradient restart in [17] is only studied for unconstrained quadratic problems, and the speed restart in [20] is only studied for unconstrained strongly convex problems.",
      "startOffset" : 121,
      "endOffset" : 125
    }, {
      "referenceID" : 6,
      "context" : "Other adaptive methods have been applied to convex optimization, such as Adagrad [7] and Adam [10], which adapt the learning rate in first-order methods, by maintaining moment estimates of the observed gradients.",
      "startOffset" : 81,
      "endOffset" : 84
    }, {
      "referenceID" : 9,
      "context" : "Other adaptive methods have been applied to convex optimization, such as Adagrad [7] and Adam [10], which adapt the learning rate in first-order methods, by maintaining moment estimates of the observed gradients.",
      "startOffset" : 94,
      "endOffset" : 98
    }, {
      "referenceID" : 20,
      "context" : "5 in [21]), there exists a unique C(1) solution defined on [t0, T ).",
      "startOffset" : 5,
      "endOffset" : 9
    }, {
      "referenceID" : 19,
      "context" : "It is possible however to prove existence and uniqueness with t0 = 0 for some choices of w, by taking a sequence of Lipschitz ODEs that approximate the original one, as is done in [20], but this is a technicality and does not matter for practical purposes.",
      "startOffset" : 180,
      "endOffset" : 184
    }, {
      "referenceID" : 10,
      "context" : "Then w(t) = a(t) a(t0)e ∫ t t0 a(τ)dτ = β/t β/t0 e β ln(t/t0) = (t/t0) β−1 and η(t) = w(t)r(t) W (t) = βt, and we recover the weighting scheme used in [11].",
      "startOffset" : 151,
      "endOffset" : 155
    }, {
      "referenceID" : 17,
      "context" : "5 in [18]), we have for a pair of convex conjugate functions ψ and ψ∗ that x ∈ ∂ψ∗(x∗) if and only if x∗ ∈ ∂ψ(x).",
      "startOffset" : 5,
      "endOffset" : 9
    }, {
      "referenceID" : 10,
      "context" : "A similar derivation can be made for the mirror descent ODE without acceleration, which can be written as follows [11] (see also the original derivation of Nemirovski and Yudin in Chapter 3 in [13])",
      "startOffset" : 114,
      "endOffset" : 118
    }, {
      "referenceID" : 12,
      "context" : "A similar derivation can be made for the mirror descent ODE without acceleration, which can be written as follows [11] (see also the original derivation of Nemirovski and Yudin in Chapter 3 in [13])",
      "startOffset" : 193,
      "endOffset" : 197
    }, {
      "referenceID" : 22,
      "context" : "We also observe that in its primal form, AMDw,η is a generalization of the ODE family studied in [23], which can be written as d dt∇ψ(X(t) + e−α(t)Ẋ(t)) = −eα(t)+β(t)∇f(X(t)), for which they prove the convergence rate O(e−β(t)).",
      "startOffset" : 97,
      "endOffset" : 101
    }, {
      "referenceID" : 18,
      "context" : "The first ODE is known as the replicator dynamics [19], and has many applications in evolutionary game theory [22] and viability theory [4], among others.",
      "startOffset" : 50,
      "endOffset" : 54
    }, {
      "referenceID" : 21,
      "context" : "The first ODE is known as the replicator dynamics [19], and has many applications in evolutionary game theory [22] and viability theory [4], among others.",
      "startOffset" : 110,
      "endOffset" : 114
    }, {
      "referenceID" : 3,
      "context" : "The first ODE is known as the replicator dynamics [19], and has many applications in evolutionary game theory [22] and viability theory [4], among others.",
      "startOffset" : 136,
      "endOffset" : 139
    }, {
      "referenceID" : 10,
      "context" : "We consider the quadratic rate in particular since in this case the discretization proposed by [11] preserves the quadratic rate, and corresponds to a first-order accelerated method2 for which many heuristics have been developed, such as the restarting heuristics [17, 20] discussed in the introduction.",
      "startOffset" : 95,
      "endOffset" : 99
    }, {
      "referenceID" : 16,
      "context" : "We consider the quadratic rate in particular since in this case the discretization proposed by [11] preserves the quadratic rate, and corresponds to a first-order accelerated method2 for which many heuristics have been developed, such as the restarting heuristics [17, 20] discussed in the introduction.",
      "startOffset" : 264,
      "endOffset" : 272
    }, {
      "referenceID" : 19,
      "context" : "We consider the quadratic rate in particular since in this case the discretization proposed by [11] preserves the quadratic rate, and corresponds to a first-order accelerated method2 for which many heuristics have been developed, such as the restarting heuristics [17, 20] discussed in the introduction.",
      "startOffset" : 264,
      "endOffset" : 272
    }, {
      "referenceID" : 16,
      "context" : "The gradient restarting heuristic in [17], in which the algorithm is restarted from the current point whenever 〈 ∇f(x(k)), x − x 〉 > 0, 4.",
      "startOffset" : 37,
      "endOffset" : 41
    }, {
      "referenceID" : 19,
      "context" : "The speed restarting heuristic in [20], in which the algorithm is restarted from the current point whenever ‖x(k+1) − x(k)‖ ≤ ‖x(k) − x(k−1)‖.",
      "startOffset" : 34,
      "endOffset" : 38
    }, {
      "referenceID" : 22,
      "context" : "[23], however this discretization results in a higher-order method such as Nesterov’s cubic accelerated Newton method [16].",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 15,
      "context" : "[23], however this discretization results in a higher-order method such as Nesterov’s cubic accelerated Newton method [16].",
      "startOffset" : 118,
      "endOffset" : 122
    }, {
      "referenceID" : 22,
      "context" : "for strongly convex functions), and numerically, by testing it on other methods, such as the higher-order accelerated methods proposed in [23].",
      "startOffset" : 138,
      "endOffset" : 142
    } ],
    "year" : 2016,
    "abstractText" : "We study accelerated descent dynamics for constrained convex optimization. This dynamics can be described naturally as a coupling of a dual variable accumulating gradients at a given rate η(t), and a primal variable obtained as the weighted average of the mirrored dual trajectory, with weights w(t). Using a Lyapunov argument, we give sufficient conditions on η and w to achieve a desired convergence rate. As an example, we show that the replicator dynamics (an example of mirror descent on the simplex) can be accelerated using a simple averaging scheme. We then propose an adaptive averaging heuristic which adaptively computes the weights to speed up the decrease of the Lyapunov function. We provide guarantees on adaptive averaging in continuous-time, prove that it preserves the quadratic convergence rate of accelerated first-order methods in discrete-time, and give numerical experiments to compare it with existing heuristics, such as adaptive restarting. The experiments indicate that adaptive averaging performs at least as well as adaptive restarting, with significant improvements in some cases.",
    "creator" : null
  }
}