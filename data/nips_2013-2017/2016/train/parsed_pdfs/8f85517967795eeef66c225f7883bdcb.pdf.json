{
  "name" : "8f85517967795eeef66c225f7883bdcb.pdf",
  "metadata" : {
    "source" : "META",
    "title" : "Cooperative Graphical Models",
    "authors" : [ "Josip Djolonga", "Stefanie Jegelka", "Sebastian Tschiatschek" ],
    "emails" : [ "josipd@inf.ethz.ch", "stefje@mit.edu", "stschia@inf.ethz.ch", "krausea@inf.ethz.ch" ],
    "sections" : [ {
      "heading" : null,
      "text" : "1 Introduction\nProbabilistic inference in high-order discrete graphical models has been an ongoing computational challenge, and all existing methods rely on exploiting specific structure: either low-treewidth or pairwise graphical models, or functional properties of the distribution such as log-submodularity. Here, we aim to compute approximate marginal probabilities in complex models with long-range variable interactions that do not possess any of these properties. Instead, we exploit a combination of structural and functional properties in new ways.\nThe classical example of image segmentation may serve to motivate our family of models: we would like to estimate a posterior marginal distribution over k labels for each pixel in an image. A common approach uses Conditional Random Fields on a pixel neighborhood graph with pairwise potentials that encourage neighboring pixels to take on the same label. From the perspective of the graph, this model prefers configurations with few edges cut, where an edge is said to be cut if its endpoints have different labels. Such cut-based models,\nhowever, short-cut elongated structures (e.g. tree branches), a problem known as shrinking bias. Jegelka and Bilmes [1] hence replace the bias towards short cuts (boundaries) by a bias towards configurations with certain higher-order structure: the cut edges occur at similar-looking pixel pairs. They group the graph edges into clusters (based on, say, color gradients across the endpoints), observing that the true object boundary is captured by few of these clusters. To encourage cutting edges from few clusters, the cost of cutting an edge decreases as more edges in its cluster are cut. In short, the edges “cooperate”. In Figure 1, each pixel takes on one of two labels (colors), and cut\n30th Conference on Neural Information Processing Systems (NIPS 2016), Barcelona, Spain.\nedges are indicated by dotted lines. The current configuration cuts three red edges and one blue edge, and has lower probability than the configuration that swaps X3,1 to gray, cutting only red edges. Such a model can be implemented by an energy (cost) h(#red edges cut) + h(#blue edges cut), where e.g. h(u) = √ u. Similar cooperative models can express a preference for shapes [2].\nWhile being expressive, such models are computationally very challenging: the nonlinear function on pairs of variables (edges) is equivalent to a graphical model of extremely high order (up to the number of variables). Previous work hence addressed only MAP inference [3, 4]; the computation of marginals and partition functions was left as an open problem. In this paper, we close this gap, even for a larger family of models.\nWe address models, which we call cooperative graphical models, that are specified by an undirected graph G = (V,E): each node i ∈ V is associated with a random variable Xi that takes values in X = {1, 2, . . . , k}. To each vertex i ∈ V and edge {i, j}, we attach a potential function θi : X → R and θi,j : X 2 → R, respectively. Our distribution is then\nP (x) = 1\nZ exp −(∑ i∈V θi(xi) + ∑ {i,j}∈E θi,j(xi, xj) + f(y(x)) ) ν(x), (1) where we call y : Xn → {0, 1}E the disagreement variable1, defined as yi,j = Jxi 6= xjK. The term ν : Xn → R≥0 is the base-measure and allows to encode constraints, e.g., conditioning on some variables. With f ≡ 0 we obtain a Markov random field. Probabilistic inference in our model class (1) is very challenging, since we make no factorization assumption about f . One solution would be to encode P (x) as a log-linear model via a new variable z ∈ {0, 1}E and constraints ν(x, z) = Jy(x) = zK, but this in general requires computing exponential-sized sufficient statistics from z. In contrast, we make one additional key assumption that will enable the development of efficiently computable variational lower and upper bounds: we henceforth assume that f : {0, 1}E → R is submodular, i.e., it satisfies\nf(min(y,y′)) + f(max(y,y′)) ≤ f(y) + f(y′) for all y,y′ ∈ {0, 1}E ,\nwhere the min and max operations are taken element-wise. For example, the pairwise potentials θi,j are submodular if θi,j(0, 0) + θi,j(1, 1) ≤ θi,j(0, 1) + θi,j(1, 0). In our introductory example, f is submodular if h is concave. As opposed to [3], we do not assume that f is monotone increasing. Importantly, even if f is submodular, P (x) neither has low treewdith, nor is its logarithm sub- or supermodular in x, properties that have commonly been exploited for inference.\nContributions. We make the following contributions: (1) We introduce a new family of probabilistic models that can capture rich non-submodular interactions, while still admitting efficient inference. This family includes pairwise and certain higher-order graphical models, cooperative cuts [1], and other, new models. We develop new inference methods for these models; in particular, (2) upper bounds that are amenable to convex optimization, and (3) lower bounds that we optimize with traditional variational methods. Finally, we demonstrate the efficacy of our methods empirically."
    }, {
      "heading" : "1.1 Related work",
      "text" : "Maximum-a-posteriori (MAP). Computing the mode of (1) for binary models is also known as the cooperative cut problem, and has been analyzed for the case when both the pairwise interactions θi,j are submodular and f is monotone [1]. While the general problem is NP-hard, it can be solved if f is defined by a piecewise linear concave function [4].\nVariational inference. Since computing marginal probabilities for (1) is #P-hard even for pairwise models (when f ≡ 0) [5, 6], we revert to approximate inference. Variational inference methods for discrete pairwise models have been studied extensively; a comprehensive overview may be found in [7]. We will build on a selection of techniques that we discuss in the next section. Most existing methods focus on pairwise models (f ≡ 0), and many scale exponentially with the size of the largest factor, which is infeasible for our cooperative models. Some specialized tractable inference methods exist for higher-order models [8, 9], but they do not apply to our family of models (1).\n1The results presented in this paper can be easily extended to arbitrary binary-valued functions y(x).\nLog-supermodular models. A related class of relatively tractable models are distributions P (x) = 1 Z exp(−g(x)) for some submodular function g; Djolonga and Krause [10] showed variational inference methods for those models. However, our models are not log-supermodular. While [10] also obtain upper and lower bounds, we need different optimization techniques, and also different polytopes. In fact, submodular and multi-class submodular [11] settings are a strict subset of ours: the function g(x) can be expressed via an auxiliary variable z ∈ {0, 1} that is fixed to zero using ν(x, z) = Jz = 0K. We then set f(y(x, z)) = g(x1 6= z, x2 6= z, . . . , xn 6= z)."
    }, {
      "heading" : "2 Notation and Background",
      "text" : "Throughout this paper, we have n variables in a graph of m edges, and the potentials θi and θi,j are stored in a vector θ. The characteristic vector (or indicator vector) 1A of a set A is the binary vector which contains 1 in the positions corresponding to elements in A, and zeros elsewhere. Moreover, the vector of all ones is 1, and the neighbours of i ∈ V are denoted by δ(i) ⊆ V .\nSubmodularity. We assume that f in Eqn. (1) is submodular. Occasionally (in Sec. 4 and 5, where stated), we assume that f is monotone: for any y and y′ in {0, 1}E such that y ≤ y′ coordinate-wise, it holds that f(y) ≤ f(y′). When defining the inference schemes, we make use of two polytopes associated with f . First, the base polytope of a submodular function f is\nB(f) = {g ∈ Rm | ∀y ∈ {0, 1}E : gTy ≤ f(y)} ∩ {g ∈ Rm | gT1 = f(1)}. Although B(f) is defined by exponentially many inequalities, an influential result [12] states that it is tractable: we can optimize linear functions over B(f) in time O(m logm+mF ), where F is the time complexity of evaluating f . This algorithm is part of our scheme in Figure 2. Moreover, as a result of this (linear) tractability, it is possible to compute orthogonal projections onto B(f). Projection is equivalent to the minimum norm point problem [13]. While the general projection problem has a high degree polynomial time complexity, there are many very commonly used models that admit practically fast projections [14, 15, 16].\nThe second polytope is the upper submodular polyhedron of f [17], defined as\nU(f) = {(g, c) ∈ Rm+1 | ∀y ∈ {0, 1}E : gTy + c ≥ f(y)}. Unfortunately, U(f) is not as tractable as B(f): even checking membership in U(f) is hard [17]. However, we can still succinctly describe specific elements of U(f). In §4, we show how to efficiently optimize over those elements.\nVariational inference. We briefly summarize key results for variational inference for pairwise models, following Wainwright and Jordan [7]. We write pairwise models as2\nP (x) = exp −(∑ i∈V θi(xi) + ∑ {i,j}∈E (gi,jJxi 6= xjK + θi,j(xi, xj) ) −A(g)  ν(x), where g ∈ RE is an arbitrary vector and A(g) is the log-partition function. For any choice of parameters (θ,g), there is a resulting vector of marginals µ ∈ [0, 1]k|V |+k2|E|. Specifically, for every i ∈ V , µ has k elements µi,xi = P (Xi = xi), one for each xi ∈ X . Similarly, for each {i, j} ∈ E, there are k2 elements µij,xixj so that µij,xixj = P (Xi = xi, Xj = xj). The marginal polytope M is now the set of all such vectors µ that are realizable under some distribution P (x), and the partition function can equally be expressed in terms of the marginals [7]:\nA(g) = sup µ∈M − ∑ i∈V,xi µi,xiθi(xi)− ∑ {i,j}∈E ∑ xi,xj µij,xixjθi,j(xi, xj)−∆(µ)Tg  ︸ ︷︷ ︸\n〈stack(θ,g),µ〉\n+H(µ), (2)\nwhere H(µ) is the entropy of the distribution, ∆(µ) is the vector of disagreement probabilities with entries ∆(µ)i,j = ∑ xi 6=xj µij,xixj , and stack(θ,g) adds the elements of θ and g into a single\n2This formulation is slightly nonstandard, but will be very useful for the subsequent discussion in §3.\nvector so that the sum can be written as an inner product. Alas, neither M nor H(µ) have succinct descriptions and we will have to approximate them. Because the vectors in the approximation of M are in general not correct marginals, they are called pseudo-marginals and will be denoted by τ instead of µ. Different approximations of M and H yield various methods, e.g. mean-field [7], the semidefinite programming (SDP) relaxation of Wainwright and Jordan [18], tree-reweighted belief propagation (TRWBP) [19], or the family of weighted entropies [20, 21]. Due to the space constraints, we only discuss the latter. They approximate M with the local polytope\nL = {τ ≥ 0 | (∀i ∈ V ) ∑ xi τi,xi = 1 and (∀j ∈ δ(i)) τi,xi = ∑ xj τij,xixj}.\nThe approximations H to the entropy H are parametrized by one weight ρi,j per edge and one ρi per vertex i, all collected in a vector ρ ∈ R|V |+|E|. Then, they take the following form H(τ ,ρ) = ∑ i∈V ρiHi(τ i)+ ∑ {i,j}∈E ρi,jHi,j(τ i,j),where Hi(τ i) = − ∑ xi τi,xi log τi,xi , and Hi,j(τ i,j) = − ∑ xi,xj τij,xijxj log τij,xixj .\nThe most prominent example is traditional belief propagation, i.e., using the Bethe entropy, which sets ρe = 1 for all e ∈ E, and assigns to each vertex i ∈ V a weight of ρi = 1− |δ(i)|."
    }, {
      "heading" : "3 Convex upper bounds",
      "text" : "The above variational methods do not directly generalize to our cooperative models: the vectors of marginals could be exponentially large. Hence, we derive a different approach that relies on the submodularity of f . Our first step is to approximate f(y(x)) by a linear lower bound, f(y(x)) ≈ gTy(x), so that the resulting (pairwise) linearized model will have a partition function upper bounding that of the original model. Ensuring that g indeed remains a lower bound means to satisfy an exponential number of constraints f(y(x)) ≥ gTy(x), one for each x ∈ {0, 1}n. While this is hard in general, the submodularity of f implies that these constraints are easily satisfied if g ∈ B(f), a very tractable constraint. For g ∈ B(f), we have\nlogZ = log ∑\nx∈{0,1}V exp ( − ( ∑ i∈V ∑ xi θi(xi) + ∑ {i,j}∈E θi,j(xi, xj) + f(y(x))) )\n≤ log ∑\nx∈{0,1}V exp ( − ( ∑ i∈V ∑ xi θi(xi) + ∑ {i,j}∈E (θi,j(xi, xj) + gi,jJxi 6= xjK)) ) ≡ A(g).\nUnfortunately, A(g) is still very hard to compute and we need to approximate it. If we use an approximation A(g) that upper bounds A(g), then the above inequality will still hold when we replace A by A. Such approximations can be obtained by relaxing the marginal polytope M to an outer bound M ⊇M, and using a concave entropy surrogate H that upper bounds the true entropy H . TRWBP [19] or the SDP formulation [18] implement this approach. Our central optimization problem is now to find the tightest upper bound, an optimization problem3 in g:\nminimize g∈B(f) sup τ∈M 〈stack(θ,g), τ 〉+H(τ ). (3)\nBecause the inner problem is linear in g, this is a convex optimization problem over the base polytope. To obtain the gradient with respect to g (equal to the negative disagreement probabilities−∆(τ )), we have to solve the inner problem. This subproblem corresponds to performing variational inference in a pairwise model, e.g. via TRWBP or an SDP. The optimization properties of the problem (3) depend on its Lipschitz continuity of the gradients (smoothness). Informally, the inferred pseudomarginals should not drastically change if we perturb the linearization g. The formal condition is that there exists some σ > 0 so that ‖∆(τ ) −∆(τ ′)‖ ≤ σ‖τ − τ ′‖ for all τ , τ ′ ∈ M. We discuss below when this condition holds. Before that, we discuss two different algorithms for solving problem (3), and how their convergence depends on σ.\n3If we compute the Fenchel dual, we obtain a special case of the problem considered in [22] with the Lovász extension acting as a non-smooth non-local energy function (in the terminology introduced therein).\nFrank-Wolfe. Given that we can efficiently solve linear programs over B(f), the Frank-Wolfe [23] algorithm is a natural candidate for solving the problem. We present it in Figure 2. It iteratively moves towards the minimizer of a linearization of the objective around the current iterate. The method has a convergence rate of O(σ/t) [24], where σ is the assumed smoothness parameter. One can either use a fixed step size γ = 2/(t + 2), or determine it using line search. In each iteration, the algorithm calls the procedure LINEAR-ORACLE, which finds the vector s ∈ B(f) that minimizes the linearization of the objective function in (3) over the base polytope B(f). The linearization is given by the (approximate) gradient ∆(τ ), determined by the computed approximate marginals τ .\nWhen taking a step towards s, the weight of edge ei is changed by sei = f({e1, e2, . . . , ei}) − f({e1, e2, . . . , ei−1}). Due to the submodularity4 of f , an edge will obtain a higher weight if it appears earlier in the order determined by the disagreement probabilities ∆(τ ). Hence, in every iteration, the algorithm will re-adjusts the pairwise potentials, by encouraging the variables to agree more as a function of their (approximate) disagreement probability.\nProjected gradient descent (PGD). Since it is possible to compute projections onto B(f), and practically so for many submodular functions f , we can alternatively use projected gradient or subgradient descent (PGD). Without smoothness, PGD converges at a rate of O(1/ √ t). If the objective is smooth, we can use an accelerated methods like FISTA [25], which has both a much better O(σ/t2) rate and seems to converge faster than many Frank-Wolfe variants in our experiments.\nSmoothness and convergence. The final question that remains to be answered is under which conditions problem (3) is smooth (the proof can be found in the appendix).\nTheorem 1 Problem (3) is k2σ-smooth over B(f) if the entropy surrogate −H is 1σ -strongly convex.\nThis result follows from the duality between smoothness and strong convexity for convex conjugates, see e.g. [26]. It implies that the convergence rates of the proposed algorithms depend on the strong convexity of the entropy approximation−H . The benefits of strongly convex entropy approximations are known. For instance, the tree-reweighted entropy approximation is strongly convex with a modulus σ depending on the size of the graph; similarly, the SDP relaxation is strongly convex [27]. London et al. [28] provide an even sharper bound for the tree reweighted entropy, and show how one can strong-convexify any weighted entropy by solving a QP over the weights ρ.\nIn practice, because the inner problem is typically solved using an iterative algorithm and because the problem is smooth, we obtain speedups by warm-starting the solver with the solution at the previous iterate. We can moreover easily obtain duality certificates using the results in [24].\nJoint optimization. When using weighted entropy approximations, it makes sense to optimize over both the linearization g and the weights ρ jointly. Specifically, let T be some set of weights that yield an entropy approximation H that upper bounds H . Then, if we expand H in problem (3), we obtain\nminimize g∈B(f),ρ∈T sup τ∈L 〈stack(θ,g), τ 〉+ ∑ i∈V ρiHi(τ i) + ∑ {i,j}∈E ρi,jHi,j(τ i,j).\nNote that inside the supremum, both g and ρ appear only linearly, and there is no summand that has terms from both of them. Thus, the problem is convex in (g,ρ), and we can optimize jointly over\n4This is also known as the diminishing returns property.\nboth variables. As a final remark, if we already perform inference in a pairwise model and repeatedly tighten the approximation by optimizing over ρ via Frank-Wolfe (as suggested in [19]), then the complexity per iteration remains the same even if we use the higher-order term f ."
    }, {
      "heading" : "4 Submodular lower bounds",
      "text" : "While we just derived variational upper bounds, we next develop lower bounds on the partition function. Specifically, analogously to the linearization for the upper bound, if we pick an element (g, c) of U(f), the partition function of the resulting pairwise approximation always lower bounds the partition function of (1). Formally,\nlogZ ≥ log ∑\nx∈{0,1}V exp\n( − (aTx + ∑ {i,j}∈E θij,xixj + ∑ {i,j}∈E gi,jJxi 6= xjK + c) ) = A(g)− c.\nAs before, after plugging in a lower bound estimate of A, we obtain a variational lower bound over the partition function, which takes the form\nlogZ ≥ sup (g,c)∈U(f),τ∈M −c+ 〈stack(θ,g), τ 〉+H(τ ), (4)\nfor any pair of approximations of M and H that guarantee a lower bound of the pairwise model. We propose to optimize this lower bound in a block-coordinate-wise manner: first with respect to the pseudo-marginals τ (which amounts to approximate inference in the linearized model), and then with respect to the supergradient (g, c) ∈ U(f). As already noted, this step is in general intractable. However, it is well-known [29] that for any Y ⊆ E we can construct a point (so called bar supergradient) in U(f) as follows. First, define the vectors ai,j = f(1{i,j}) and bi,j = f(1)−f(1−1{i,j}). Then, the vector (g, c) with g = b 1Y +(1−1Y ) a and c = f(Y )−bT1Y belongs to U(f), where denotes element-wise multiplication.\nTheorem 2 Optimizing problem (4) for a fixed τ over all bar supergradients is equal to the following submodular minimization problem minY⊆E f(Y ) + ( ∆(τ ) (b− a)− b )T 1Y .\nIn contrast to computing the MAP, the above problem has no constraints and can be easily solved using existing algorithms. As the approximation algorithm for the linearized pairwise model, one can always use mean-field [7]. Moreover, if (i) the problem is binary with submodular pairwise potentials θi,j and (ii) f is monotone, we can also use belief propagation. This is an implication of the result of Ruozzi [30], who shows that traditional belief-propagation yields a lower bound on the partition function for binary pairwise log-supermodular models. It is easy to see that the above conditions are sufficient for the log-supermodularity of the linearized model, as g ≥ 0 when f is monotone (because both a and b have non-negative components). Moreover, in this setting both the mean-field and belief propagation objectives (i.e. computing τ ) can be cast as an instance of continuous submodular minimization (see e.g. [31]), which means that they can be solved to arbitrary precision in polynomial time. Unfortunately, problem (4) will not be jointly submodular, so we still need to use the block-coordinate ascent method we have just outlined."
    }, {
      "heading" : "5 Approximate inference via MAP perturbations",
      "text" : "For binary models with submodular pairwise potentials and monotone f we can (approximately) solve the MAP problem using the techniques in [1, 4]. Hence, this opens as an alternative approach the perturb-and-MAP method of Papandreou and Yuille [32]. This method relies on a set of tractable first order perturbations: For any i ∈ V define θ′i(xi) = θi(xi)− ηi,xi , where η = (ηi,xi)i∈V,xi∈X are a set of independently drawn Gumbel random variables. The optimizer argminxGη(x) of the perturbed model energy Gη(x) = ∑ i∈V θ ′ i(xi) + ∑ {i,j}∈E θi,j(xi, xj) + f(y(x)) is then a sample from (an approximation to) the true distribution. If this MAP problem can be solved exactly (which is not always the case here), then it is possible to obtain an upper bound on the partition function [33]."
    }, {
      "heading" : "6 Experiments",
      "text" : "Synthetic experiments. Our first set of experiments uses a complete graph on n variables. The unary potentials were sampled as θi(xi) ∼ Uniform(−α, α). The edges E were randomly split\ninto five disjoint buckets E1, E2, . . . , E5, and we used f(y) = ∑5 j=1 hj(yEj ), where yEi are the coordinates of y corresponding to that group, and the functions {hj} will be defined below. To perform inference in the linearized pairwise models, we used: trwbp, jtree+ (exact inference, upper bound), jtree- (same, lower bound), sdp (SDP), mf (mean-field), bp (belief propagation), pmap (perturb-and-MAP with approximate MAP) and epmap (perturb-and-MAP with exact MAP). We used libDAI [34] and implemented sdp using cvxpy [35] and SCS [36]. As a maxflow solver we used [37]. Errors bars denote three standard errors.\nFigure 3 shows the results for hi(yEi) = wi √∑ e∈Ei ye/ √ |Ei|, with weights wi ∼ Uniform(0, β). In panel (c) we use mixed (attractive and repulsive) pairwise potentials, chosen as θi,j(xi, xj) = wi,jJxi 6= xjK, where wi,j ∼ Uniform(−β, β). First, the results imply that the methods optimizing the fully convex upper bound yield very good marginal probabilities over a large set of parameter configurations. The estimate of the log-partition function from trwbp is also very good, while sdp is much worse, which we believe can be attributed to the very loose entropy bound used in the relaxation. The lower bounds (bp and mf) work well for settings when the pairwise strength β is small compared to the unary strength α. Otherwise, both the bound and the marginals become worse, while jtreestill performs very well. This could be explained by the hardness of the pairwise models obtained after linearizing f . Finally, pmap (when applicable) seems very promising for small β.\nTo better understand the regimes when one should use trwbp or pmap, we compare their marginal errors in Figure 5. We see that for most parameter configurations, trwbp performs better, and significantly so when the edge interactions are strong.\nFinally, we evaluate the effects of the approximate MAP solver for pmap in Figure 4. To be able to solve the MAP problem exactly (see [4]), we used h(yEj ) = max{ ∑ e∈Ej yeve, ∑ e∈Ej ve/2}, where ve ∼ Uniform(0, β). As evident from the figure, the gains from the exact solver seem minimal, and it seems that solving the MAP problem approximately does not strongly affect the results.\nAn example from computer vision. To demonstrate the scalability of our method and obtain a better qualitative understanding of the resulting marginals, we ran trwbp and pmap on a real world image segmentation task. We use the same setting, data and models as [1], as implemented in the pycoop5 package. Because libDAI was too slow, we wrote our own TRWBP implementation. Figure 6 shows the results for two specific images (size 305 × 398 and 214 × 320). The example in the first row is particularly difficult for pairwise models, but the rich higher-order model has no problem capturing the details even in the challenging shaded regions of the image. The second row shows results for two different model parameters. The second model uses a function f that is closer to being linear, while the first one is more curved (see the appendix for details). We observe that trwbp requires lower temperature parameters (i.e. relatively larger functions θi, θi,j and f ) than pmap, and that the bottleneck of the complete inference procedure is running the trwbp updates. In other words, the added complexity from our method is minimal and the runtime is dominated by the message passing updates of TRWBP. Hence, any algorithms that speed up TRWBP (e.g., by parallelization or better message scheduling) will result in a direct improvement on the proposed inference procedure."
    }, {
      "heading" : "7 Conclusion",
      "text" : "We developed new inference techniques for a new broad family of discrete probabilistic models by exploiting the (indirect) submodularity in the model, and carefully combining it with ideas from classical variational inference in graphical models. The result are inference schemes that optimize rigorous bounds on the partition function. For example, our upper bounds lead to convex variational inference problems. Our experiments indicate the scalability, efficacy and quality of these schemes.\nAcknowledgements. This research was supported in part by SNSF grant CRSII2 147633, ERC StG 307036, a Microsoft Research Faculty Fellowship, a Google European Doctoral Fellowship, and NSF CAREER 1553284."
    } ],
    "references" : [ {
      "title" : "Submodularity beyond submodular energies: coupling edges in graph cuts",
      "author" : [ "S. Jegelka", "J. Bilmes" ],
      "venue" : "CVPR.",
      "citeRegEx" : "1",
      "shortCiteRegEx" : null,
      "year" : 2011
    }, {
      "title" : "A Contour Completion Model for Augmenting Surface Reconstructions",
      "author" : [ "N. Silberman", "L. Shapira", "R. Gal", "P. Kohli" ],
      "venue" : "ECCV.",
      "citeRegEx" : "2",
      "shortCiteRegEx" : null,
      "year" : 2014
    }, {
      "title" : "Approximation Bounds for Inference using Cooperative Cuts",
      "author" : [ "S. Jegelka", "J. Bilmes" ],
      "venue" : "ICML.",
      "citeRegEx" : "3",
      "shortCiteRegEx" : null,
      "year" : 2011
    }, {
      "title" : "A principled deep random field model for image segmentation",
      "author" : [ "P. Kohli", "A. Osokin", "S. Jegelka" ],
      "venue" : "CVPR.",
      "citeRegEx" : "4",
      "shortCiteRegEx" : null,
      "year" : 2013
    }, {
      "title" : "Polynomial-time approximation algorithms for the Ising model",
      "author" : [ "M. Jerrum", "A. Sinclair" ],
      "venue" : "SIAM Journal on computing",
      "citeRegEx" : "5",
      "shortCiteRegEx" : "5",
      "year" : 1993
    }, {
      "title" : "The complexity of ferromagnetic Ising with local fields",
      "author" : [ "L.A. Goldberg", "M. Jerrum" ],
      "venue" : "Combinatorics, Probability and Computing",
      "citeRegEx" : "6",
      "shortCiteRegEx" : "6",
      "year" : 2007
    }, {
      "title" : "Graphical models, exponential families, and variational inference",
      "author" : [ "M.J. Wainwright", "M.I. Jordan" ],
      "venue" : "Foundations and Trends R  © in Machine Learning",
      "citeRegEx" : "7",
      "shortCiteRegEx" : "7",
      "year" : 2008
    }, {
      "title" : "Fast Exact Inference for Recursive Cardinality Models",
      "author" : [ "D. Tarlow", "K. Swersky", "R.S. Zemel", "R.P. Adams", "B.J. Frey" ],
      "venue" : "UAI.",
      "citeRegEx" : "8",
      "shortCiteRegEx" : null,
      "year" : 2012
    }, {
      "title" : "Filter-based mean-field inference for random fields with higher-order terms and product label-spaces",
      "author" : [ "V. Vineet", "J. Warrell", "P.H. Torr" ],
      "venue" : null,
      "citeRegEx" : "9",
      "shortCiteRegEx" : "9",
      "year" : 2014
    }, {
      "title" : "From MAP to Marginals: Variational Inference in Bayesian Submodular Models",
      "author" : [ "J. Djolonga", "A. Krause" ],
      "venue" : "NIPS.",
      "citeRegEx" : "10",
      "shortCiteRegEx" : null,
      "year" : 2014
    }, {
      "title" : "Higher-Order Inference for Multi-class Log-supermodular Models",
      "author" : [ "J. Zhang", "J. Djolonga", "A. Krause" ],
      "venue" : "ICCV.",
      "citeRegEx" : "11",
      "shortCiteRegEx" : null,
      "year" : 2015
    }, {
      "title" : "Submodular functions, matroids, and certain polyhedra",
      "author" : [ "J. Edmonds" ],
      "venue" : "Combinatorial structures and their applications",
      "citeRegEx" : "12",
      "shortCiteRegEx" : "12",
      "year" : 1970
    }, {
      "title" : "A submodular function minimization algorithm based on the minimum-norm base",
      "author" : [ "S. Fujishige", "S. Isotani" ],
      "venue" : "Pacific Journal of Optimization",
      "citeRegEx" : "13",
      "shortCiteRegEx" : "13",
      "year" : 2011
    }, {
      "title" : "Efficient Minimization of Decomposable Submodular Functions",
      "author" : [ "P. Stobbe", "A. Krause" ],
      "venue" : "NIPS.",
      "citeRegEx" : "14",
      "shortCiteRegEx" : null,
      "year" : 2010
    }, {
      "title" : "Reflection methods for user-friendly submodular optimization",
      "author" : [ "S. Jegelka", "F. Bach", "S. Sra" ],
      "venue" : "NIPS.",
      "citeRegEx" : "15",
      "shortCiteRegEx" : null,
      "year" : 2013
    }, {
      "title" : "Learning with submodular functions: a convex optimization perspective",
      "author" : [ "F. Bach" ],
      "venue" : "Foundations and Trends R  © in Machine Learning",
      "citeRegEx" : "16",
      "shortCiteRegEx" : "16",
      "year" : 2013
    }, {
      "title" : "Polyhedral aspects of Submodularity, Convexity and Concavity",
      "author" : [ "R. Iyer", "J. Bilmes" ],
      "venue" : null,
      "citeRegEx" : "17",
      "shortCiteRegEx" : "17",
      "year" : 2015
    }, {
      "title" : "Log-determinant relaxation for approximate inference in discrete Markov random fields",
      "author" : [ "M.J. Wainwright", "M.I. Jordan" ],
      "venue" : "Signal Processing, IEEE Trans. on 54.6",
      "citeRegEx" : "18",
      "shortCiteRegEx" : "18",
      "year" : 2006
    }, {
      "title" : "A new class of upper bounds on the log partition function",
      "author" : [ "M.J. Wainwright", "T.S. Jaakkola", "A.S. Willsky" ],
      "venue" : "UAI.",
      "citeRegEx" : "19",
      "shortCiteRegEx" : null,
      "year" : 2002
    }, {
      "title" : "Convexity Arguments for Efficient Minimization of the Bethe and Kikuchi Free Energies.",
      "author" : [ "T. Heskes" ],
      "venue" : "JAIR",
      "citeRegEx" : "20",
      "shortCiteRegEx" : "20",
      "year" : 2006
    }, {
      "title" : "Convexifying the Bethe free energy",
      "author" : [ "O. Meshi", "A. Jaimovich", "A. Globerson", "N. Friedman" ],
      "venue" : "UAI.",
      "citeRegEx" : "21",
      "shortCiteRegEx" : null,
      "year" : 2009
    }, {
      "title" : "Bethe Projections for Non-Local Inference",
      "author" : [ "L. Vilnis", "D. Belanger", "D. Sheldon", "A. McCallum" ],
      "venue" : "UAI.",
      "citeRegEx" : "22",
      "shortCiteRegEx" : null,
      "year" : 2015
    }, {
      "title" : "An algorithm for quadratic programming",
      "author" : [ "M. Frank", "P. Wolfe" ],
      "venue" : "Naval Res. Logist. Quart",
      "citeRegEx" : "23",
      "shortCiteRegEx" : "23",
      "year" : 1956
    }, {
      "title" : "Revisiting Frank-Wolfe: Projection-free sparse convex optimization",
      "author" : [ "M. Jaggi" ],
      "venue" : "ICML.",
      "citeRegEx" : "24",
      "shortCiteRegEx" : null,
      "year" : 2013
    }, {
      "title" : "A fast iterative shrinkage-thresholding algorithm for linear inverse problems",
      "author" : [ "A. Beck", "M. Teboulle" ],
      "venue" : "SIAM Journal on imaging sciences",
      "citeRegEx" : "25",
      "shortCiteRegEx" : "25",
      "year" : 2009
    }, {
      "title" : "On the duality of strong convexity and strong smoothness: Learning applications and matrix regularization",
      "author" : [ "S. Kakade", "S. Shalev-Shwartz", "A. Tewari" ],
      "venue" : "Technical Report",
      "citeRegEx" : "26",
      "shortCiteRegEx" : "26",
      "year" : 2009
    }, {
      "title" : "Estimating the wrong graphical model: Benefits in the computation-limited setting",
      "author" : [ "M.J. Wainwright" ],
      "venue" : null,
      "citeRegEx" : "27",
      "shortCiteRegEx" : "27",
      "year" : 2006
    }, {
      "title" : "The benefits of learning with strongly convex approximate inference",
      "author" : [ "B. London", "B. Huang", "L. Getoor" ],
      "venue" : "ICML.",
      "citeRegEx" : "28",
      "shortCiteRegEx" : null,
      "year" : 2015
    }, {
      "title" : "Fast Semidifferential-based Submodular Function Optimization",
      "author" : [ "R. Iyer", "S. Jegelka", "J. Bilmes" ],
      "venue" : "ICML.",
      "citeRegEx" : "29",
      "shortCiteRegEx" : null,
      "year" : 2013
    }, {
      "title" : "The Bethe partition function of log-supermodular graphical models",
      "author" : [ "N. Ruozzi" ],
      "venue" : "NIPS.",
      "citeRegEx" : "30",
      "shortCiteRegEx" : null,
      "year" : 2012
    }, {
      "title" : "Approximating the Bethe Partition Function",
      "author" : [ "A. Weller", "T. Jebara" ],
      "venue" : "UAI.",
      "citeRegEx" : "31",
      "shortCiteRegEx" : null,
      "year" : 2014
    }, {
      "title" : "Perturb-and-MAP random fields: Using discrete optimization to learn and sample from energy models",
      "author" : [ "G. Papandreou", "A.L. Yuille" ],
      "venue" : "ICCV.",
      "citeRegEx" : "32",
      "shortCiteRegEx" : null,
      "year" : 2011
    }, {
      "title" : "On the partition function and random maximum a-posteriori perturbations",
      "author" : [ "T. Hazan", "T. Jaakkola" ],
      "venue" : null,
      "citeRegEx" : "33",
      "shortCiteRegEx" : "33",
      "year" : 2012
    }, {
      "title" : "libDAI: A Free and Open Source C++ Library for Discrete Approximate Inference in Graphical Models",
      "author" : [ "J.M. Mooij" ],
      "venue" : "Journal of Machine Learning Research",
      "citeRegEx" : "34",
      "shortCiteRegEx" : "34",
      "year" : 2010
    }, {
      "title" : "CVXPY: A Python-Embedded Modeling Language for Convex Optimization",
      "author" : [ "S. Diamond", "S. Boyd" ],
      "venue" : "JMLR",
      "citeRegEx" : "35",
      "shortCiteRegEx" : "35",
      "year" : 2016
    }, {
      "title" : "Conic Optimization via Operator Splitting and Homogeneous Self-Dual Embedding",
      "author" : [ "B. O’Donoghue", "E. Chu", "N. Parikh", "S. Boyd" ],
      "venue" : "Journal of Optimization Theory and Applications",
      "citeRegEx" : "36",
      "shortCiteRegEx" : "36",
      "year" : 2016
    }, {
      "title" : "An experimental comparison of min-cut/max-flow algorithms for energy minimization in vision",
      "author" : [ "Y. Boykov", "V. Kolmogorov" ],
      "venue" : "Pattern Analysis and Machine Intelligence, IEEE Trans. on",
      "citeRegEx" : "37",
      "shortCiteRegEx" : "37",
      "year" : 2004
    } ],
    "referenceMentions" : [ {
      "referenceID" : 0,
      "context" : "Jegelka and Bilmes [1] hence replace the bias towards short cuts (boundaries) by a bias towards configurations with certain higher-order structure: the cut edges occur at similar-looking pixel pairs.",
      "startOffset" : 19,
      "endOffset" : 22
    }, {
      "referenceID" : 1,
      "context" : "Similar cooperative models can express a preference for shapes [2].",
      "startOffset" : 63,
      "endOffset" : 66
    }, {
      "referenceID" : 2,
      "context" : "Previous work hence addressed only MAP inference [3, 4]; the computation of marginals and partition functions was left as an open problem.",
      "startOffset" : 49,
      "endOffset" : 55
    }, {
      "referenceID" : 3,
      "context" : "Previous work hence addressed only MAP inference [3, 4]; the computation of marginals and partition functions was left as an open problem.",
      "startOffset" : 49,
      "endOffset" : 55
    }, {
      "referenceID" : 2,
      "context" : "As opposed to [3], we do not assume that f is monotone increasing.",
      "startOffset" : 14,
      "endOffset" : 17
    }, {
      "referenceID" : 0,
      "context" : "This family includes pairwise and certain higher-order graphical models, cooperative cuts [1], and other, new models.",
      "startOffset" : 90,
      "endOffset" : 93
    }, {
      "referenceID" : 0,
      "context" : "Computing the mode of (1) for binary models is also known as the cooperative cut problem, and has been analyzed for the case when both the pairwise interactions θi,j are submodular and f is monotone [1].",
      "startOffset" : 199,
      "endOffset" : 202
    }, {
      "referenceID" : 3,
      "context" : "While the general problem is NP-hard, it can be solved if f is defined by a piecewise linear concave function [4].",
      "startOffset" : 110,
      "endOffset" : 113
    }, {
      "referenceID" : 4,
      "context" : "Since computing marginal probabilities for (1) is #P-hard even for pairwise models (when f ≡ 0) [5, 6], we revert to approximate inference.",
      "startOffset" : 96,
      "endOffset" : 102
    }, {
      "referenceID" : 5,
      "context" : "Since computing marginal probabilities for (1) is #P-hard even for pairwise models (when f ≡ 0) [5, 6], we revert to approximate inference.",
      "startOffset" : 96,
      "endOffset" : 102
    }, {
      "referenceID" : 6,
      "context" : "Variational inference methods for discrete pairwise models have been studied extensively; a comprehensive overview may be found in [7].",
      "startOffset" : 131,
      "endOffset" : 134
    }, {
      "referenceID" : 7,
      "context" : "Some specialized tractable inference methods exist for higher-order models [8, 9], but they do not apply to our family of models (1).",
      "startOffset" : 75,
      "endOffset" : 81
    }, {
      "referenceID" : 8,
      "context" : "Some specialized tractable inference methods exist for higher-order models [8, 9], but they do not apply to our family of models (1).",
      "startOffset" : 75,
      "endOffset" : 81
    }, {
      "referenceID" : 9,
      "context" : "A related class of relatively tractable models are distributions P (x) = 1 Z exp(−g(x)) for some submodular function g; Djolonga and Krause [10] showed variational inference methods for those models.",
      "startOffset" : 140,
      "endOffset" : 144
    }, {
      "referenceID" : 9,
      "context" : "While [10] also obtain upper and lower bounds, we need different optimization techniques, and also different polytopes.",
      "startOffset" : 6,
      "endOffset" : 10
    }, {
      "referenceID" : 10,
      "context" : "In fact, submodular and multi-class submodular [11] settings are a strict subset of ours: the function g(x) can be expressed via an auxiliary variable z ∈ {0, 1} that is fixed to zero using ν(x, z) = Jz = 0K.",
      "startOffset" : 47,
      "endOffset" : 51
    }, {
      "referenceID" : 11,
      "context" : "Although B(f) is defined by exponentially many inequalities, an influential result [12] states that it is tractable: we can optimize linear functions over B(f) in time O(m logm+mF ), where F is the time complexity of evaluating f .",
      "startOffset" : 83,
      "endOffset" : 87
    }, {
      "referenceID" : 12,
      "context" : "Projection is equivalent to the minimum norm point problem [13].",
      "startOffset" : 59,
      "endOffset" : 63
    }, {
      "referenceID" : 13,
      "context" : "While the general projection problem has a high degree polynomial time complexity, there are many very commonly used models that admit practically fast projections [14, 15, 16].",
      "startOffset" : 164,
      "endOffset" : 176
    }, {
      "referenceID" : 14,
      "context" : "While the general projection problem has a high degree polynomial time complexity, there are many very commonly used models that admit practically fast projections [14, 15, 16].",
      "startOffset" : 164,
      "endOffset" : 176
    }, {
      "referenceID" : 15,
      "context" : "While the general projection problem has a high degree polynomial time complexity, there are many very commonly used models that admit practically fast projections [14, 15, 16].",
      "startOffset" : 164,
      "endOffset" : 176
    }, {
      "referenceID" : 16,
      "context" : "The second polytope is the upper submodular polyhedron of f [17], defined as U(f) = {(g, c) ∈ R | ∀y ∈ {0, 1} : gy + c ≥ f(y)}.",
      "startOffset" : 60,
      "endOffset" : 64
    }, {
      "referenceID" : 16,
      "context" : "Unfortunately, U(f) is not as tractable as B(f): even checking membership in U(f) is hard [17].",
      "startOffset" : 90,
      "endOffset" : 94
    }, {
      "referenceID" : 6,
      "context" : "We briefly summarize key results for variational inference for pairwise models, following Wainwright and Jordan [7].",
      "startOffset" : 112,
      "endOffset" : 115
    }, {
      "referenceID" : 6,
      "context" : "The marginal polytope M is now the set of all such vectors μ that are realizable under some distribution P (x), and the partition function can equally be expressed in terms of the marginals [7]:",
      "startOffset" : 190,
      "endOffset" : 193
    }, {
      "referenceID" : 6,
      "context" : "mean-field [7], the semidefinite programming (SDP) relaxation of Wainwright and Jordan [18], tree-reweighted belief propagation (TRWBP) [19], or the family of weighted entropies [20, 21].",
      "startOffset" : 11,
      "endOffset" : 14
    }, {
      "referenceID" : 17,
      "context" : "mean-field [7], the semidefinite programming (SDP) relaxation of Wainwright and Jordan [18], tree-reweighted belief propagation (TRWBP) [19], or the family of weighted entropies [20, 21].",
      "startOffset" : 87,
      "endOffset" : 91
    }, {
      "referenceID" : 18,
      "context" : "mean-field [7], the semidefinite programming (SDP) relaxation of Wainwright and Jordan [18], tree-reweighted belief propagation (TRWBP) [19], or the family of weighted entropies [20, 21].",
      "startOffset" : 136,
      "endOffset" : 140
    }, {
      "referenceID" : 19,
      "context" : "mean-field [7], the semidefinite programming (SDP) relaxation of Wainwright and Jordan [18], tree-reweighted belief propagation (TRWBP) [19], or the family of weighted entropies [20, 21].",
      "startOffset" : 178,
      "endOffset" : 186
    }, {
      "referenceID" : 20,
      "context" : "mean-field [7], the semidefinite programming (SDP) relaxation of Wainwright and Jordan [18], tree-reweighted belief propagation (TRWBP) [19], or the family of weighted entropies [20, 21].",
      "startOffset" : 178,
      "endOffset" : 186
    }, {
      "referenceID" : 18,
      "context" : "TRWBP [19] or the SDP formulation [18] implement this approach.",
      "startOffset" : 6,
      "endOffset" : 10
    }, {
      "referenceID" : 17,
      "context" : "TRWBP [19] or the SDP formulation [18] implement this approach.",
      "startOffset" : 34,
      "endOffset" : 38
    }, {
      "referenceID" : 21,
      "context" : "If we compute the Fenchel dual, we obtain a special case of the problem considered in [22] with the Lovász extension acting as a non-smooth non-local energy function (in the terminology introduced therein).",
      "startOffset" : 86,
      "endOffset" : 90
    }, {
      "referenceID" : 22,
      "context" : "Given that we can efficiently solve linear programs over B(f), the Frank-Wolfe [23] algorithm is a natural candidate for solving the problem.",
      "startOffset" : 79,
      "endOffset" : 83
    }, {
      "referenceID" : 23,
      "context" : "The method has a convergence rate of O(σ/t) [24], where σ is the assumed smoothness parameter.",
      "startOffset" : 44,
      "endOffset" : 48
    }, {
      "referenceID" : 24,
      "context" : "If the objective is smooth, we can use an accelerated methods like FISTA [25], which has both a much better O(σ/t(2)) rate and seems to converge faster than many Frank-Wolfe variants in our experiments.",
      "startOffset" : 73,
      "endOffset" : 77
    }, {
      "referenceID" : 26,
      "context" : "For instance, the tree-reweighted entropy approximation is strongly convex with a modulus σ depending on the size of the graph; similarly, the SDP relaxation is strongly convex [27].",
      "startOffset" : 177,
      "endOffset" : 181
    }, {
      "referenceID" : 27,
      "context" : "[28] provide an even sharper bound for the tree reweighted entropy, and show how one can strong-convexify any weighted entropy by solving a QP over the weights ρ.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 23,
      "context" : "We can moreover easily obtain duality certificates using the results in [24].",
      "startOffset" : 72,
      "endOffset" : 76
    }, {
      "referenceID" : 18,
      "context" : "As a final remark, if we already perform inference in a pairwise model and repeatedly tighten the approximation by optimizing over ρ via Frank-Wolfe (as suggested in [19]), then the complexity per iteration remains the same even if we use the higher-order term f .",
      "startOffset" : 166,
      "endOffset" : 170
    }, {
      "referenceID" : 28,
      "context" : "However, it is well-known [29] that for any Y ⊆ E we can construct a point (so called bar supergradient) in U(f) as follows.",
      "startOffset" : 26,
      "endOffset" : 30
    }, {
      "referenceID" : 6,
      "context" : "As the approximation algorithm for the linearized pairwise model, one can always use mean-field [7].",
      "startOffset" : 96,
      "endOffset" : 99
    }, {
      "referenceID" : 29,
      "context" : "This is an implication of the result of Ruozzi [30], who shows that traditional belief-propagation yields a lower bound on the partition function for binary pairwise log-supermodular models.",
      "startOffset" : 47,
      "endOffset" : 51
    }, {
      "referenceID" : 30,
      "context" : "[31]), which means that they can be solved to arbitrary precision in polynomial time.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 0,
      "context" : "For binary models with submodular pairwise potentials and monotone f we can (approximately) solve the MAP problem using the techniques in [1, 4].",
      "startOffset" : 138,
      "endOffset" : 144
    }, {
      "referenceID" : 3,
      "context" : "For binary models with submodular pairwise potentials and monotone f we can (approximately) solve the MAP problem using the techniques in [1, 4].",
      "startOffset" : 138,
      "endOffset" : 144
    }, {
      "referenceID" : 31,
      "context" : "Hence, this opens as an alternative approach the perturb-and-MAP method of Papandreou and Yuille [32].",
      "startOffset" : 97,
      "endOffset" : 101
    }, {
      "referenceID" : 32,
      "context" : "If this MAP problem can be solved exactly (which is not always the case here), then it is possible to obtain an upper bound on the partition function [33].",
      "startOffset" : 150,
      "endOffset" : 154
    }, {
      "referenceID" : 33,
      "context" : "We used libDAI [34] and implemented sdp using cvxpy [35] and SCS [36].",
      "startOffset" : 15,
      "endOffset" : 19
    }, {
      "referenceID" : 34,
      "context" : "We used libDAI [34] and implemented sdp using cvxpy [35] and SCS [36].",
      "startOffset" : 52,
      "endOffset" : 56
    }, {
      "referenceID" : 35,
      "context" : "We used libDAI [34] and implemented sdp using cvxpy [35] and SCS [36].",
      "startOffset" : 65,
      "endOffset" : 69
    }, {
      "referenceID" : 3,
      "context" : "To be able to solve the MAP problem exactly (see [4]), we used h(yEj ) = max{ ∑ e∈Ej yeve, ∑ e∈Ej ve/2}, where ve ∼ Uniform(0, β).",
      "startOffset" : 49,
      "endOffset" : 52
    }, {
      "referenceID" : 0,
      "context" : "We use the same setting, data and models as [1], as implemented in the pycoop5 package.",
      "startOffset" : 44,
      "endOffset" : 47
    } ],
    "year" : 2016,
    "abstractText" : "We study a rich family of distributions that capture variable interactions significantly more expressive than those representable with low-treewidth or pairwise graphical models, or log-supermodular models. We call these cooperative graphical models. Yet, this family retains structure, which we carefully exploit for efficient inference techniques. Our algorithms combine the polyhedral structure of submodular functions in new ways with variational inference methods to obtain both lower and upper bounds on the partition function. While our fully convex upper bound is minimized as an SDP or via tree-reweighted belief propagation, our lower bound is tightened via belief propagation or mean-field algorithms. The resulting algorithms are easy to implement and, as our experiments show, effectively obtain good bounds and marginals for synthetic and real-world examples.",
    "creator" : null
  }
}