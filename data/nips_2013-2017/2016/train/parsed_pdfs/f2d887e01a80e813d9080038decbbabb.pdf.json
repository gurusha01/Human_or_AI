{
  "name" : "f2d887e01a80e813d9080038decbbabb.pdf",
  "metadata" : {
    "source" : "META",
    "title" : "Unsupervised Risk Estimation Using Only Conditional Independence Structure",
    "authors" : [ "Jacob Steinhardt", "Percy Liang" ],
    "emails" : [ "jsteinhardt@cs.stanford.edu", "pliang@cs.stanford.edu" ],
    "sections" : [ {
      "heading" : "1 Introduction",
      "text" : "Can we measure the accuracy of a model at test time without any ground truth labels, and without assuming the test distribution is close to the training distribution? This is the problem of unsupervised risk estimation (Donmez et al., 2010): Given a loss function L(θ;x, y) and a fixed model θ, estimate the risk R(θ) def= Ex,y∼p∗ [L(θ;x, y)] with respect to a test distribution p∗(x, y), given access only to m unlabeled examples x(1:m) ∼ p∗(x). Unsupervised risk estimation lets us estimate model accuracy on a novel distribution, and is thus important for building reliable machine learning systems. Beyond evaluating a single model, it also provides a way of harnessing unlabeled data for learning: by minimizing the estimated risk over θ, we can perform unsupervised learning and domain adaptation.\nUnsupervised risk estimation is impossible without some assumptions on p∗, as otherwise p∗(y | x)— about which we have no observable information—could be arbitrary. How satisfied we should be with an estimator depends on how strong its underlying assumptions are. In this paper, we present an approach which rests on surprisingly weak assumptions—that p∗ satisfies certain conditional independencies, but not that it lies in any parametric family or is close to the training distribution.\nTo give a flavor for our results, suppose that y ∈ {1, . . . , k} and that the loss decomposes as a sum of three parts: L(θ;x, y) = ∑3 v=1 fv(θ;xv, y), where the xv (v = 1, 2, 3) are independent conditioned on y. In this case, we show that we can estimate the risk to error in poly(k)/ 2 samples, independently of the dimension of x or θ, with only very mild additional assumptions on p∗. In Sections 2 and 3 we generalize to a larger family of losses including the log and exponential losses, and extend beyond the multiclass case to conditional random fields.\nSome intuition behind our result is provided in Figure 1. At a fixed value of x, we can think of each fv as “predicting” that y = j if fv(xv, j) is low and fv(xv, j′) is high for j′ 6= j. Since f1, f2, and f3 all provide independent signals about y, their rate of agreement gives information about the model accuracy. If f1, f2, and f3 all predict that y = 1, then it is likely that the true y equals 1 and the loss is small. Conversely, if f1, f2, and f3 all predict different values of y, then the loss is likely\n30th Conference on Neural Information Processing Systems (NIPS 2016), Barcelona, Spain.\nlarge. This intuition is formalized by Dawid and Skene (1979) when the fv measure the 0/1-loss of independent classifiers; in particular, if rv is the prediction of a classifier based on xv, then Dawid and Skene model the rv as independent given y: p(r1, r2, r3) = ∑k j=1 p(y = j) ∏3 v=1 p(rv | y = j). They then use the learned parameters of this model to compute the 0/1-loss.\nPartial specification. Dawid and Skene’s approach relies on the prediction rv only taking on k values. In this case, the full distribution p(r1, r2, r3) can be parametrized by k×k conditional probability matrices p(rv |y) and marginals p(y). However, as shown in Figure 1, we want to estimate continuous losses such as the log loss. We must therefore work with the prediction vector fv∈Rk rather than a single predicted output rv ∈{1, . . . , k}. To fully model p(f1, f2, f3) would require nonparametric estimation, resulting in an undesirable sample complexity exponential in k—in contrast to the discrete case, conditional independence effectively only partially specifies a model for the losses.\nTo sidestep this issue, we make use of the method of moments, which has recently been used to fit non-convex latent variable models (e.g. Anandkumar et al., 2012). In fact, it has a much older history in the econometrics literature, where it is used as a tool for making causal identifications under structural assumptions, even when no explicit form for the likelihood is known (Anderson and Rubin, 1949; 1950; Sargan, 1958; 1959; Hansen, 1982; Powell, 1994; Hansen, 2014). It is this latter perspective that we draw upon. The key insight is that even in the absence of a fully-specified model, certain moment equations–such as E[f1f2 | y] = E[f1 | y]E[f2 | y]–can be derived solely from the assumed conditional independence. Solving these equations yields estimates of E[fv |y], which can in turn be used to estimate the risk. Importantly, our procedure avoids estimation of the full loss distribution p(f1, f2, f3), on which we make no assumptions other than conditional independence.\nOur paper is structured as follows. In Section 2, we present our basic framework, and state and prove our main result on estimating the risk. In Section 3, we extend our framework in several directions, including to conditional random fields. In Section 4, we present a gradient-based learning algorithm and show that the sample complexity needed for learning is d · poly(k)/ 2, where d is the dimension of the parameters θ. In Section 5, we investigate how our method performs empirically.\nRelated Work. While the formal problem of unsupervised risk estimation was only posed recently by Donmez et al. (2010), several older ideas from domain adaptation and semi-supervised learning are also relevant. The covariate shift assumption posits access to labeled samples from a training distribution p0(x, y) for which p∗(y | x) = p0(y | x). If p∗(x) and p0(x) are close, we can approximate p∗ by p0 via importance weighting (Shimodaira, 2000; Quiñonero-Candela et al., 2009). If p∗ and p0 are not close, another approach is to assume a well-specified discriminative model family Θ, such that p0(y |x) = p∗(y |x) = pθ∗(y |x) for some θ∗ ∈ Θ; then the only error when moving from p0 to p∗ is statistical error in the estimation of θ∗ (Blitzer et al., 2011; Li et al., 2011). Such assumptions are restrictive—importance weighting only allows small perturbations from p0 to p∗, and mis-specified models of p(y |x) are common in practice; many authors report that mis-specification can lead to severe issues in semi-supervised settings (Merialdo, 1994; Nigam et al., 1998; Cozman and Cohen, 2006; Liang and Klein, 2008; Li and Zhou, 2015). More sophisticated approaches based on discrepancy minimization (Mansour et al., 2009) or learning invariant representations (Ben-David et al., 2006; Johansson et al., 2016) typically also make some form of the covariate shift assumption.\nOur approach is closest to Dawid and Skene (1979) and some recent extensions (Zhang et al., 2014; Platanios, 2015; Jaffe et al., 2015; Fetaya et al., 2016). Similarly to Zhang et al. (2014) and Jaffe et al. (2015), we use the method of moments for estimating latent-variable models. However, those papers use it for parameter estimation in the face of non-convexity, rather than as a way to avoid full estimation of p(fv |y). The insight that the method of moments works under partial specification lets us extend beyond the simple discrete settings they consider to handle more complex continuous and structured losses. The intriguing work of Balasubramanian et al. (2011) provides an alternate approach\nto continuous losses; they show that the distribution of losses L |y is often approximately Gaussian, and use that to estimate the risk. Among all this work, ours is the first to perform gradient-based learning and the first to handle a structured loss (the log loss for conditional random fields)."
    }, {
      "heading" : "2 Framework and Estimation Algorithm",
      "text" : "We will focus on multiclass classification; we assume an unknown true distribution p∗(x, y) over X × Y , where Y = {1, . . . , k}, and are given unlabeled samples x(1), . . . , x(m) drawn i.i.d. from p∗(x). Given parameters θ ∈ Rd and a loss function L(θ;x, y), our goal is to estimate the risk of θ on p∗: R(θ) def= Ex,y∼p∗ [L(θ;x, y)]. Throughout, we will make the 3-view assumption:\nAssumption 1 (3-view). Under p∗, x can be split into x1, x2, x3, which are conditionally independent given y (see Figure 2). Moreover, the loss decomposes additively across views: L(θ;x, y) = A(θ;x)− ∑3 v=1 fv(θ;xv, y), for some functions A and fv .\nNote that each xv can be large (e.g. they could be vectors in Rd). If we have V > 3 views, we can combine views to obtain V = 3 without loss of generality. It also suffices for just the fv to be independent rather than the xv. Given only 2 views, the risk can be shown to be unidentifiable in general, although obtaining upper bounds may be possible.\nWe give some examples where Assumption 1 holds, then state and prove our main result (see Section 3 for additional examples). We start with logistic regression, which will be our primary focus later on: Example 1 (Logistic Regression). Suppose that we have a log-linear model pθ(y | x) = exp ( θ> (φ1(x1, y) + φ2(x2, y) + φ3(x3, y))−A(θ;x) ) , where x1, x2, and x3 are independent conditioned on y. If our loss function is the log-loss L(θ;x, y) = − log pθ(y | x), then Assumption 1 holds with fv(θ;xv, y) = θ>φv(xv, y) and A(θ;x) equal to the partition function of pθ.\nAssumption 1 does not hold for the hinge loss (see Appendix A for details), but it does hold for a modified hinge loss, where we apply the hinge separately to each view:\nExample 2 (Modified Hinge Loss). Suppose that L(θ;x, y) = ∑3 v=1(1 + maxj 6=y θ\n>φv(xv, j)− θ>φv(xv, y))+. In other words, L is the sum of 3 hinge losses, one for each view. Then Assumption 1 holds with A = 0, and −fv equal to the hinge loss for view v. The model can also be non-linear within each view xv , as long as the views are combined additively: Example 3 (Neural Networks). Suppose that for each view v we have a neural network whose output is a score for each of the k classes, (fv(θ;xv, j))kj=1. Sum the scores f1 + f2 + f3, apply a soft-max, and evaluate using the log loss; then L(θ;x, y) = A(θ;x)− ∑3 v=1 fv(θ;xv, y), where A(θ;x) is the log-normalization constant of the softmax, and hence L satisfies Assumption 1.\nWe are now ready to present our main result on recovering the risk R(θ). The key starting point is the conditional risk matrices Mv ∈ Rk×k, defined as (suppressing the dependence on θ)\n(Mv)ij = E[fv(θ;xv, i) | y = j]. (1) In the case of the 0/1-loss, the Mv are confusion matrices; in general, (Mv)ij measures how strongly we predict class i when the true class is j. If we could recover these matrices along with the marginal class probabilities πj def = p∗(y = j), then estimating the risk would be straightforward; indeed,\nR(θ) = E [ A(θ;x)−\n3∑ v=1 fv(θ;xv, y)\n] = E[A(θ;x)]−\nk∑ j=1 πj 3∑ v=1 (Mv)j,j , (2)\nwhere E[A(θ;x)] can be estimated from unlabeled data alone.\nCaveat: Class permutation. Suppose that at training time, we learn to predict whether an image contains the digit 0 or 1. At test time, nothing changes except the definitions of 0 and 1 are reversed. It is clearly impossible to detect this from unlabeled data— mathematically, the risk matrices Mv are only recoverable up to column permutation. We will end up computing the minimum risk over these permutations, which we call the optimistic risk and denote R̃(θ) def= minσ∈Sym(k) Ex,y∼p∗ [L(θ;x, σ(y))]. This equals the true risk as long as θ is at least aligned with the correct classes in the sense that Ex[L(θ;x, j) | y = j] ≤ Ex[L(θ;x, j′) | y = j] for j′ 6= j. The optimal σ can be computed from Mv and π in O ( k3 ) time using maximum weight bipartite matching; see Section B for details.\nOur main result, Theorem 1, says that we can recover both Mv and π up to permutation, with a number of samples that is polynomial in k: Theorem 1. Suppose Assumption 1 holds. Then, for any , δ ∈ (0, 1), we can estimate Mv and π up to column permutation, to error (in Frobenius and∞-norm respectively). Our algorithm requires\nm = poly ( k, π−1min, λ −1, τ ) · log(2/δ) 2 samples to succeed with probability 1− δ, where\nπmin def = k min j=1 p∗(y = j), τ def = E [∑ v,jfv(θ;xv, j) 2 ] , and λ def= 3 min v=1 σk(Mv), (3)\nand σk denotes the kth singular value. Moreover, the algorithm runs in time m · poly(k).\nEstimates for Mv and π imply an estimate for R̃ via (2); see Algorithm 1 below for details. Importantly, the sample complexity in Theorem 1 depends on the number of classes k, but not on the dimension d of θ. Moreover, Theorem 1 holds even if p∗ lies outside the model family θ, and even if the train and test distributions are very different (in fact, the result is agnostic to how the model θ was produced). The only requirement is the 3-view assumption for p∗ and that λ, πmin 6= 0. Let us interpret each term in (3). First, τ tracks the variance of the loss, and we should expect the difficulty of estimating the risk to increase with this variance. The log(2/δ) 2 term is typical and shows up even when estimating the parameter of a random variable to accuracy from m samples. The π−1min term appears because, if one of the classes is very rare, we need to wait a long time to observe even a single sample from that class, and even longer to estimate the risk on that class accurately.\nPerhaps least intuitive is the λ−1 term, which is large e.g. when two classes have similar conditional risk vectors E[(fv(θ;xv, i))ki=1 | y = j]. To see why this matters, consider an extreme where x1, x2, and x3 are independent not only of each other but also of y. Then p∗(y) is completely unconstrained, and it is impossible to estimate R at all. Why does this not contradict Theorem 1? The answer is that in this case, all rows of Mv are equal and hence Mv has rank 1, λ = 0, λ−1 =∞, and we need infinitely many samples for Theorem 1 to hold; λ measures how close we are to this degenerate case.\nProof of Theorem 1. We now outline a proof of Theorem 1. Recall the goal is to estimate the conditional risk matrices Mv, defined as (Mv)ij = E[fv(θ;xv, i) | y = j]; from these we can recover the risk itself using (2). The key insight is that certain moments of p∗(y | x) can be expressed as polynomial functions of the matrices Mv, and therefore we can solve for the Mv even without explicitly estimating p∗. Our approach follows the technical machinery behind the spectral method of moments (e.g., Anandkumar et al., 2012), which we explain below for completeness.\nDefine the loss vector hv(xv) = (fv(θ;xv, i))ki=1, which measures the loss that would be incurred under each of the k classes. The conditional independence of the xv means that E[h1(x1)h2(x2)> | y] = E[h1(x1) | y]E[h2(x2) | y]>, and similarly for higher-order conditional moments. Marginalizing over y, we see that there is low-rank structure in the moments of h that we can exploit; in particular (letting ⊗ denote outer product and A·,j denote the jth column of A):\nE[hv(xv)] = k∑ j=1 πj ·(Mv)·,j , E[hv(xv)⊗hv′(xv′)] = k∑ j=1 πj ·(Mv)·,j⊗(Mv′)·,j for v 6= v′, and\nE[h1(x1)⊗h2(x2)⊗h3(x3)] = k∑ j=1 πj ·(M1)·,j⊗(M2)·,j⊗(M3)·,j . (4)\nThe left-hand-side of each equation can be estimated from unlabeled data; using tensor decomposition (Lathauwer, 2006; Comon et al., 2009; Anandkumar et al., 2012; 2013; Kuleshov et al., 2015), it is\nAlgorithm 1 Algorithm for estimating R̃(θ) from unlabeled data.\n1: Input: unlabeled samples x(1), . . . , x(m) ∼ p∗(x). 2: Estimate the left-hand-side of each term in (4) using x(1:m). 3: Compute approximations M̂v and π̂ to Mv and π using tensor decomposition. 4: Compute σ maximizing ∑k j=1 π̂σ(j) ∑3 v=1(M̂v)j,σ(j) using maximum bipartite matching.\n5: Output: estimated risk, 1m ∑m i=1A(θ;x (i))− ∑k j=1 π̂σ(j) ∑3 v=1(M̂v)j,σ(j).\nthen possible to solve for Mv and π. In particular, we can recover M and π up to permutation: that is, we recover M̂ and π̂ such that Mi,j ≈ M̂i,σ(j) and πj ≈ π̂σ(j) for some permutation σ ∈ Sym(k). This then yields Theorem 1; see Section C for a full proof.\nAssumption 1 thus yields a set of moment equations (4) whose solution lets us estimate the risk without any labels y. The procedure is summarized in Algorithm 1: we (i) approximate the left-handside of each term in (4) by sample averages; (ii) use tensor decomposition to solve for π and Mv; (iii) use maximum matching to compute the permutation σ; and (iv) use (2) to obtain R̃ from π and Mv ."
    }, {
      "heading" : "3 Extensions",
      "text" : "Theorem 1 provides a basic building block which admits several extensions to more complex model structures. We go over several cases below, omitting most proofs to avoid tedium.\nExtension 1 (Conditional Random Field). Most importantly, the variable y need not belong to a small discrete set; we can handle structured outputs such as a CRF as long as p∗ has the right structure. This contrasts with previous work on unsupervised risk estimation that was restricted to multiclass classification (though in a different vein, it is close to Proposition 8 of Anandkumar et al. (2012)).\nSuppose that p∗(x1:T , y1:T ) factorizes as a hidden Markov model, and that pθ is a CRF respecting the HMM structure: pθ(y1:T | x1:T ) ∝ ∏T t=2 fθ(yt−1, yt) · ∏T t=1 gθ(yt, xt). For the log-loss L(θ;x, y) = − log pθ(y1:T | x1:T ), we can exploit the decomposition\n− log pθ(y1:T | x1:T ) = T∑ t=2\n− log pθ(yt−1, yt | x1:T )︸ ︷︷ ︸ def = `t\n− T∑ t=1\n− log pθ(yt | x1:T )︸ ︷︷ ︸ def = `′t . (5)\nEach of the components `t and `′t satisfy Assumption 1 (see Figure 2; for `t, the views are x1:t−2, xt−1:t, xt+1:T , and for `′t they are x1:t−1, xt, xt+1:T ). We use Theorem 1 to estimate each E[`t], E[`′t] individually, and thus also the full risk E[L]. (We actually estimate the risk for y2:T−1 | x1:T due to the 3-view assumption failing at the boundaries.) In general, the idea in (5) applies to any structured output problem that is a sum of local 3-view structures. It would be interesting to extend our results to other structures such as more general graphical models (Chaganty and Liang, 2014) and parse trees (Hsu et al., 2012).\nExtension 2 (Exponential Loss). We can also relax the additivityL=A−f1−f2−f3 in Assumption 1. For instance, suppose L(θ;x, y) = exp(−θ> ∑3 v=1 φv(xv, y)) is the exponential loss. Theorem 1 lets us estimate the matrices Mv corresponding to fv(θ;xv, y) = exp(−θ>φv(xv, y)). Then\nR(θ) = E [ 3∏ v=1 fv(θ;xv, y) ] = ∑ j πj 3∏ v=1 E [fv(θ;xv, j) | y = j] (6)\nby conditional independence, so the risk can be computed as ∑ j πj ∏3 v=1(Mv)j,j . This idea extends\nto any loss expressible as L(θ;x, y) = A(θ;x) + ∑n i=1 ∏3 v=1 f v i (θ;xv, y) for some functions f v i .\nExtension 3 (Mediating Variable). Assuming that x1:3 are independent conditioned only on y may not be realistic; there might be multiple subclasses of a class (e.g., multiple ways to write the digit 4) which would induce systematic correlations across views. To address this, we show that independence need only hold conditioned on a mediating variable z, rather than on the class y itself.\nLet z be a refinement of y (in the sense that knowing z determines y) which takes on k′ values, and suppose that the views x1, x2, x3 are independent conditioned on z, as in Figure 2. Then we can\ntry to estimate the risk by defining L′(θ;x, z) = L(θ;x, y(z)), which satisfies Assumption 1. The problem is that the corresponding risk matrices M ′v will only have k distinct rows and hence have rank k < k′. To fix this, suppose that the loss vector hv(xv) = (fv(xv, j))kj=1 can be extended to a vector h′v(xv) ∈ Rk ′ , such that (i) the first k coordinates of h′v(xv) are hv(xv) and (ii) the conditional risk matrix M ′v corresponding to h ′ v has full rank. Then, Theorem 1 allows us to recover M ′v and hence also Mv (since it is a sub-matrix of M ′ v) and thereby estimate the risk."
    }, {
      "heading" : "4 From Estimation to Learning",
      "text" : "We now turn our attention to unsupervised learning, i.e., minimizingR(θ) over θ ∈ Rd. Unsupervised learning is impossible without some additional information, since even if we could learn the k classes, we wouldn’t know which class had which label (this is the same as the class permutation issue from before). Thus we assume that we have a small amount of information to break this symmetry:\nAssumption 2 (Seed Model). We have access to a “seed model” θ0 such that R̃(θ0) = R(θ0).\nAssumption 2 is very weak — it merely asks for θ0 to be aligned with the true classes on average. We can obtain θ0 from a small amount of labeled data (semi-supervised learning) or by training in a nearby domain (domain adaptation). We define gap(θ0) to be the difference between R(θ0) and the next smallest permutation of the classes–i.e., gap(θ0) def = minσ 6=id E[L(θ0;x, σ(y))− L(θ0;x, y)]– which will affect the difficulty of learning.\nFor simplicity we will focus on the case of logistic regression, and show how to learn given only Assumptions 1 and 2. Our algorithm extends to general losses, as we show in Section F.\nLearning from moments. Note that for logistic regression (Example 1), we have\nR(θ) = E [ A(θ;x)− θ> 3∑ v=1 φv(xv, y) ] = E[A(θ;x)]− θ>φ̄, where φ̄ def= 3∑ v=1 E[φv(xv, y)]. (7)\nFrom (7), we see that it suffices to estimate φ̄, after which all terms on the right-hand-side of (7) are known. Given an approximation φ̂ to φ̄ (we will show how to obtain φ̂ below), we can learn a near-optimal θ by solving the following convex optimization problem:\nθ̂ = arg min ‖θ‖2≤ρ\nE[A(θ;x)]− θ>φ̂. (8)\nIn practice we would need to approximate E[A(θ;x)] by samples, but we ignore this for simplicity (it generally only contributes lower-order terms to the error). The reason for the `2-constraint on θ is that it imparts robustness to the error between φ̂ and φ̄. In particular (see Section D for a proof):\nLemma 1. Suppose ‖φ̂−φ̄‖2 ≤ . Then the output θ̂ from (8) satisfiesR(θ̂) ≤ min‖θ‖2≤ρR(θ)+2 ρ.\nIf the optimal θ∗ has `2-norm at most ρ, Lemma 1 says that θ̂ nearly minimizes the risk: R(θ̂) ≤ R(θ∗) + 2 ρ. The problem of learning θ thus reduces to computing a good estimate φ̂ of φ̄.\nComputing φ̂. Estimating φ̄ can be done in a manner similar to how we estimated R(θ) in Section 2. In addition to the conditional risk matrix Mv ∈ Rk×k, we compute the conditional moment matrix Gv ∈ Rdk×k, which tracks the conditional expectation of φv: (Gv)i+(r−1)k,j def = E[φv(θ;xv, i)r |\ny = j], where r indexes 1, . . . , d. We then have φ̄r = ∑k j=1 πj ∑3 v=1(Gv)j+(r−1)k,j .\nAs in Theorem 1, we can solve for G1, G2, and G3 using a tensor factorization similar to (4), though some care is needed to avoid explicitly forming the (kd) × (kd) × (kd) tensor that would result (since O ( k3d3 ) memory is intractable for even moderate values of d). We take a standard approach based on random projections (Halko et al., 2011) and described in Section 6.1.2 of Anandkumar et al. (2013). We refer the reader to the aforementioned references for details, and cite only the resulting sample complexity and runtime, which are both roughly d times larger than in Theorem 1. Theorem 2. Suppose that Assumptions 1 and 2 hold. Let δ < 1 and < min(1, gap(θ0)). Then, given m = poly ( k, π−1min, λ −1, τ ) · log(2/δ) 2 samples, where λ and τ are as defined in (3),\nwith probability 1 − δ we can recover Mv and π to error , and Gv to error (B/τ) , where B2 = E[ ∑ i,v ‖φv(xv, i)‖22] measures the `2-norm of the features. The algorithm runs in time O (d (m+ poly(k))), and the errors are in Frobenius norm for M and G, and∞-norm for π.\nSee Section E for a proof sketch. Whereas before we estimated the risk matrix Mv to error , now we estimate the gradient matrix Gv (and hence φ̄) to error (B/τ) . To achieve error in estimating Gv requires (B/τ)2 · poly ( k, π−1min, λ −1, τ ) log(2/δ) 2 samples, which is (B/τ) 2 times as large as in Theorem 1. The quantity (B/τ)2 typically grows as O(d), and so the sample complexity needed to estimate φ̄ is typically d times larger than the sample complexity needed to estimate R. This matches the behavior of the supervised case where we need d times as many samples for learning as compared to (supervised) risk estimation of a fixed model.\nSummary. We have shown how to perform unsupervised logistic regression, given only a seed model θ0. This enables unsupervised learning under fairly weak assumptions (only the multi-view and seed model assumptions) even for mis-specified models and zero train-test overlap, and without assuming covariate shift. See Section F for learning under more general losses."
    }, {
      "heading" : "5 Experiments",
      "text" : "To better understand the behavior of our algorithms, we perform experiments on a version of the MNIST data set that is modified to ensure that the 3-view assumption holds. To create an image I , we sample a class in {0, . . . , 9}, then sample 3 images I1, I2, I3 at random from that class, letting every third pixel in I come from the respective image Iv. This guarantees there are 3 conditionally independent views. To explore train-test variation, we dim pixel p in the image by exp (a (‖p− p0‖2 − 0.4)), where p0 is the image center and distances are normalized to be at most 1. We show example images for a = 0 (train) and a = 5 (a possible test distribution) in Figure 3.\nRisk estimation. We use Algorithm 1 to perform unsupervised risk estimation for a model trained on a = 0, testing on various values of a ∈ [0, 10]. We trained the model with AdaGrad (Duchi et al., 2010) on 10,000 training examples, and used 10,000 test examples to estimate the risk. To solve for π and M in (4), we first use the tensor power method implemented by Chaganty and Liang (2013) to initialize, and then locally minimize a weighted `2-norm of the moment errors in (4) using L-BFGS. We compared with two other methods: (i) validation error from held-out samples (which would be valid if train = test), and (ii) predictive entropy ∑ j −pθ(j | x) log pθ(j | x) on the test set (which would be valid if the predictions were well-calibrated). The results are shown in Figure 4a; both the tensor method in isolation and tensor + L-BFGS estimate the risk accurately, with the latter performing slightly better.\nUnsupservised domain adaptation. We next evaluate our learning algorithm in an unsupervised domain adaptation setting, where we receive labeled training data at a = 0 and unlabeled test data at a different value of a. We use the training data to obtain a seed model θ0, and then perform\nunsupervised learning (Section 4), setting ρ = 10 in (8). The results are shown in Figure 4b. For small values of a, our algorithm performs worse than the baseline of directly using θ0, likely due to finite-sample effects. However, our algorithm is far more robust as a increases, and tracks the performance of an oracle that was trained on the same distribution as the test examples.\nBecause we only need to provide our algorithm with a seed model for disentangling the classes, we do not need much data when training θ0. To verify this, we tried obtaining θ0 from only 300 labeled examples. Tensor decomposition sometimes led to bad initializations in this limited data regime, in which case we obtained a different θ0 by training with a smaller step size. The results are shown in Figure 4c. Our algorithm generally performs well, but has higher variability than before, seemingly due to higher condition number of the matrices Mv .\nSummary. Our experiments show that given 3 views, we can estimate the risk and perform unsupervised domain adaptation, even with limited labeled data from the source domain."
    }, {
      "heading" : "6 Discussion",
      "text" : "We have presented a method for estimating the risk from unlabeled data, which relies only on conditional independence structure and hence makes no parametric assumptions about the true distribution. Our approach applies to a large family of losses and extends beyond classification tasks to conditional random fields. We can also perform unsupervised learning given only a seed model that can distinguish between classes in expectation; the seed model can be trained on a related domain, on a small amount of labeled data, or any combination of the two, and thus provides a pleasingly general formulation highlighting the similarities between domain adaptation and semi-supervised learning.\nPrevious approaches to domain adaptation and semi-supervised learning have also exploited multiview structure. Given two views, Blitzer et al. (2011) perform domain adaptation with zero source/target overlap (covariate shift is still assumed). Two-view approaches (e.g. co-training and CCA) are also used in semi-supervised learning (Blum and Mitchell, 1998; Ando and Zhang, 2007; Kakade and Foster, 2007; Balcan and Blum, 2010). These methods all assume some form of low noise or low regret, as do, e.g., transductive SVMs (Joachims, 1999). By focusing on the central problem of risk estimation, our work connects multi-view learning approaches for domain adaptation and semi-supervised learning, and removes covariate shift and low-noise/low-regret assumptions (though we make stronger independence assumptions, and specialize to discrete prediction tasks).\nIn addition to reliability and unsupervised learning, our work is motivated by the desire to build machine learning systems with contracts, a challenge recently posed by Bottou (2015); the goal is for machine learning systems to satisfy a well-defined input-output contract in analogy with software systems (Sculley et al., 2015). Theorem 1 provides the contract that under the 3-view assumption the test error is close to our estimate of the test error; the typical (weak) contract of ML systems is that if train and test are similar, then the test error is close to the training error. One other interesting contract is to provide prediction regions that contain the truth with probability 1− (Shafer and Vovk, 2008; Khani et al., 2016), which includes abstaining when uncertain as a special case (Li et al., 2011).\nThe most restrictive part of our framework is the three-view assumption, which is inappropriate if the views are not completely independent or if the data have structure that is not captured in terms of multiple views. Since Balasubramanian et al. (2011) obtain results under Gaussianity (which would be implied by many somewhat dependent views), we are optimistic that unsupervised risk estimation is possible for a wider family of structures. Along these lines, we end with the following questions:\nOpen question. In the 3-view setting, suppose the views are not completely independent. Is it still possible to estimate the risk? How does the degree of dependence affect the number of views needed?\nOpen question. Given only two independent views, can one obtain an upper bound on the risk R(θ)?\nThe results of this paper have caused us to adopt the following perspective: To leverage unlabeled data, we should make generative structural assumptions, but still optimize discriminative model performance. This hybrid approach allows us to satisfy the traditional machine learning goal of predictive accuracy, while handling lack of supervision and under-specification in a principled way. Perhaps, then, what is truly needed for learning is understanding the structure of a domain.\nAcknowledgments. This research was supported by a Fannie & John Hertz Foundation Fellowship, a NSF Graduate Research Fellowship, and a Future of Life Institute grant."
    } ],
    "references" : [ {
      "title" : "Two-view feature generation model for semi-supervised learning",
      "author" : [ "R.K. Ando", "T. Zhang" ],
      "venue" : "Annals of Mathematical Statistics,",
      "citeRegEx" : "Ando and Zhang.,? \\Q2007\\E",
      "shortCiteRegEx" : "Ando and Zhang.",
      "year" : 2007
    }, {
      "title" : "A discriminative model for semi-supervised learning",
      "author" : [ "M. Balcan", "A. Blum" ],
      "venue" : null,
      "citeRegEx" : "Balcan and Blum.,? \\Q2010\\E",
      "shortCiteRegEx" : "Balcan and Blum.",
      "year" : 2010
    }, {
      "title" : "Domain adaptation with coupled subspaces",
      "author" : [ "J. Blitzer", "S. Kakade", "D.P. Foster" ],
      "venue" : "In AISTATS,",
      "citeRegEx" : "Blitzer et al\\.,? \\Q2006\\E",
      "shortCiteRegEx" : "Blitzer et al\\.",
      "year" : 2006
    }, {
      "title" : "Unsupervised ensemble learning with dependent",
      "author" : [ "E. Fetaya", "B. Nadler", "A. Jaffe", "Y. Kluger", "T. Jiang" ],
      "venue" : null,
      "citeRegEx" : "Fetaya et al\\.,? \\Q1972\\E",
      "shortCiteRegEx" : "Fetaya et al\\.",
      "year" : 1972
    }, {
      "title" : "Finding structure with randomness: Probabilistic algorithms",
      "author" : [ "N. Halko", "P.-G. Martinsson", "J. Tropp" ],
      "venue" : null,
      "citeRegEx" : "Halko et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Halko et al\\.",
      "year" : 2016
    }, {
      "title" : "constructing approximate matrix decompositions",
      "author" : [ "A. Jaffe", "B. Nadler", "Y. Kluger" ],
      "venue" : "SIAM Review,",
      "citeRegEx" : "Jaffe et al\\.,? \\Q2011\\E",
      "shortCiteRegEx" : "Jaffe et al\\.",
      "year" : 2011
    }, {
      "title" : "Transductive inference for text classification using support vector machines",
      "author" : [ "T. Joachims" ],
      "venue" : "AISTATS,",
      "citeRegEx" : "Joachims.,? \\Q2015\\E",
      "shortCiteRegEx" : "Joachims.",
      "year" : 2015
    }, {
      "title" : "Tensor factorization via matrix factorization",
      "author" : [ "V. Kuleshov", "A. Chaganty", "P. Liang" ],
      "venue" : "In AISTATS,",
      "citeRegEx" : "Kuleshov et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Kuleshov et al\\.",
      "year" : 2015
    }, {
      "title" : "Towards making unlabeled data never hurt",
      "author" : [ "Y. Li", "Z. Zhou" ],
      "venue" : "Machine learning,",
      "citeRegEx" : "Li and Zhou.,? \\Q2011\\E",
      "shortCiteRegEx" : "Li and Zhou.",
      "year" : 2011
    }, {
      "title" : "Tagging English text with a probabilistic model",
      "author" : [ "B. Merialdo" ],
      "venue" : "Computational Linguistics,",
      "citeRegEx" : "2009",
      "shortCiteRegEx" : "2009",
      "year" : 1994
    }, {
      "title" : "Hidden technical debt in machine learning systems",
      "author" : [ "D. Dennison" ],
      "venue" : "In NIPS, pages 2494–2502,",
      "citeRegEx" : "Dennison.,? \\Q2015\\E",
      "shortCiteRegEx" : "Dennison.",
      "year" : 2015
    }, {
      "title" : "Memory, communication, and statistical queries",
      "author" : [ "J. Steinhardt", "G. Valiant", "S. Wager" ],
      "venue" : "Journal of Statistical Planning and Inference,",
      "citeRegEx" : "Steinhardt et al\\.,? \\Q2000\\E",
      "shortCiteRegEx" : "Steinhardt et al\\.",
      "year" : 2000
    } ],
    "referenceMentions" : [ {
      "referenceID" : 3,
      "context" : ", 2015; Fetaya et al., 2016). Similarly to Zhang et al. (2014) and Jaffe et al. (2015), we use the method of moments for estimating latent-variable models.",
      "startOffset" : 8,
      "endOffset" : 87
    }, {
      "referenceID" : 3,
      "context" : ", 2015; Fetaya et al., 2016). Similarly to Zhang et al. (2014) and Jaffe et al. (2015), we use the method of moments for estimating latent-variable models. However, those papers use it for parameter estimation in the face of non-convexity, rather than as a way to avoid full estimation of p(fv |y). The insight that the method of moments works under partial specification lets us extend beyond the simple discrete settings they consider to handle more complex continuous and structured losses. The intriguing work of Balasubramanian et al. (2011) provides an alternate approach",
      "startOffset" : 8,
      "endOffset" : 547
    }, {
      "referenceID" : 7,
      "context" : "The left-hand-side of each equation can be estimated from unlabeled data; using tensor decomposition (Lathauwer, 2006; Comon et al., 2009; Anandkumar et al., 2012; 2013; Kuleshov et al., 2015), it is",
      "startOffset" : 101,
      "endOffset" : 192
    }, {
      "referenceID" : 4,
      "context" : "We take a standard approach based on random projections (Halko et al., 2011) and described in Section 6.1.2 of Anandkumar et al. (2013). We refer the reader to the aforementioned references for details, and cite only the resulting sample complexity and runtime, which are both roughly d times larger than in Theorem 1.",
      "startOffset" : 57,
      "endOffset" : 136
    }, {
      "referenceID" : 0,
      "context" : "co-training and CCA) are also used in semi-supervised learning (Blum and Mitchell, 1998; Ando and Zhang, 2007; Kakade and Foster, 2007; Balcan and Blum, 2010).",
      "startOffset" : 63,
      "endOffset" : 158
    }, {
      "referenceID" : 1,
      "context" : "co-training and CCA) are also used in semi-supervised learning (Blum and Mitchell, 1998; Ando and Zhang, 2007; Kakade and Foster, 2007; Balcan and Blum, 2010).",
      "startOffset" : 63,
      "endOffset" : 158
    }, {
      "referenceID" : 0,
      "context" : "Given two views, Blitzer et al. (2011) perform domain adaptation with zero source/target overlap (covariate shift is still assumed).",
      "startOffset" : 17,
      "endOffset" : 39
    } ],
    "year" : 2016,
    "abstractText" : "We show how to estimate a model’s test error from unlabeled data, on distributions very different from the training distribution, while assuming only that certain conditional independencies are preserved between train and test. We do not need to assume that the optimal predictor is the same between train and test, or that the true distribution lies in any parametric family. We can also efficiently compute gradients of the estimated error and hence perform unsupervised discriminative learning. Our technical tool is the method of moments, which allows us to exploit conditional independencies in the absence of a fully-specified model. Our framework encompasses a large family of losses including the log and exponential loss, and extends to structured output settings such as conditional random fields.",
    "creator" : null
  }
}