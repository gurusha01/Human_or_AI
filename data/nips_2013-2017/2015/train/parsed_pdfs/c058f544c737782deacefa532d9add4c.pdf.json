{
  "name" : "c058f544c737782deacefa532d9add4c.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "On the Global Linear Convergence of Frank-Wolfe Optimization Variants",
    "authors" : [ "Simon Lacoste-Julien", "Martin Jaggi" ],
    "emails" : [ ],
    "sections" : [ {
      "heading" : null,
      "text" : "The Frank-Wolfe algorithm [9] (also known as conditional gradient) is one of the earliest existing methods for constrained convex optimization, and has seen an impressive revival recently due to its nice properties compared to projected or proximal gradient methods, in particular for sparse optimization and machine learning applications.\nOn the other hand, the classical projected gradient and proximal methods have been known to exhibit a very nice adaptive acceleration property, namely that the the convergence rate becomes linear for strongly convex objective, i.e. that the optimization error of the same algorithm after t iterations will decrease geometrically with O((1 − ρ)t) instead of the usual O(1/t) for general convex objective functions. It has become an active research topic recently whether such an acceleration is also possible for Frank-Wolfe type methods.\nContributions. We clarify several variants of the Frank-Wolfe algorithm and show that they all converge linearly for any strongly convex function optimized over a polytope domain, with a constant bounded away from zero that only depends on the geometry of the polytope. Our analysis does not depend on the location of the true optimum with respect to the domain, which was a disadvantage of earlier existing results such as [34, 12, 5], and the newer work of [28], as well as the line of work of [1, 19, 26] which rely on Robinson’s condition [30]. Our analysis yields a weaker sufficient condition than Robinson’s condition; in particular we can have linear convergence even in some cases when the function has more than one global minima, and is not globally strongly convex. The constant also naturally separates as the product of the condition number of the function with a novel notion of condition number of a polytope, which might have applications in complexity theory.\nRelated Work. For the classical Frank-Wolfe algorithm, [5] showed a linear rate for the special case of quadratic objectives when the optimum is in the strict interior of the domain, a result already subsumed by the more general [12]. The early work of [23] showed linear convergence for strongly\nconvex constraint sets, under the strong requirement that the gradient norm is not too small (see [11] for a discussion). The away-steps variant of the Frank-Wolfe algorithm, that can also remove weight from ‘bad’ atoms in the current active set, was proposed in [34], and later also analyzed in [12]. The precise method is stated below in Algorithm 1. [12] showed a (local) linear convergence rate on polytopes, but the constant unfortunately depends on the distance between the solution and its relative boundary, a quantity that can be arbitrarily small. More recently, [1, 19, 26] have obtained linear convergence results in the case that the optimum solution satisfies Robinson’s condition [30]. In a different recent line of work, [10, 22] have studied a variation of FW that repeatedly moves mass from the worst vertices to the standard FW vertex until a specific condition is satisfied, yielding a linear rate on strongly convex functions. Their algorithm requires the knowledge of several constants though, and moreover is not adaptive to the best-case scenario, unlike the Frank-Wolfe algorithm with away steps and line-search. None of these previous works was shown to be affine invariant, and most require additional knowledge about problem specific parameters.\nSetup. We consider general constrained convex optimization problems of the form:\nmin x∈M f(x) , M = conv(A), with only access to: LMOA(r) ∈ arg min x∈A 〈r,x〉, (1) where A ⊆ Rd is a finite set of vectors that we call atoms.1 We assume that the function f is µstrongly convex with L-Lipschitz continuous gradient overM. We also consider weaker conditions than strong convexity for f in Section 4. AsA is finite,M is a (convex and bounded) polytope. The methods that we consider in this paper only require access to a linear minimization oracle LMOA(.) associated with the domain M through a generating set of atoms A. This oracle is defined as to return a minimizer of a linear subproblem overM = conv(A), for any given direction r ∈ Rd.2\nExamples. Optimization problems of the form (1) appear widely in machine learning and signal processing applications. The set of atoms A can represent combinatorial objects of arbitrary type. Efficient linear minimization oracles often exist in the form of dynamic programs or other combinatorial optimization approaches. As an example from tracking in computer vision, A could be the set of integer flows on a graph [16, 7], where LMOA can be efficiently implemented by a minimum cost network flow algorithm. In this case,M can also be described with a polynomial number of linear inequalities. But in other examples,M might not have a polynomial description in terms of linear inequalities, and testing membership inM might be much more expensive than running the linear oracle. This is the case when optimizing over the base polytope, an object appearing in submodular function optimization [3]. There, the LMOA oracle is a simple greedy algorithm. Another example is whenA represents the possible consistent value assignments on cliques of a Markov random field (MRF);M is the marginal polytope [32], where testing membership is NP-hard in general, though efficient linear oracles exist for some special cases [17]. Optimization over the marginal polytope appears for example in structured SVM learning [21] and variational inference [18].\nThe Original Frank-Wolfe Algorithm. The Frank-Wolfe (FW) optimization algorithm [9], also known as conditional gradient [23], is particularly suited for the setup (1) whereM is only accessed through the linear minimization oracle. It works as follows: At a current iterate x(t), the algorithm finds a feasible search atom st to move towards by minimizing the linearization of the objective function f over M (line 3 in Algorithm 1) – this is where the linear minimization oracle LMOA is used. The next iterate x(t+1) is then obtained by doing a line-search on f between x(t) and st (line 11 in Algorithm 1). One reason for the recent increased popularity of Frank-Wolfe-type algorithms is the sparsity of their iterates: in iteration t of the algorithm, the iterate can be represented as a sparse convex combination of at most t+ 1 atoms S(t) ⊆ A of the domainM, which we write as x(t) = ∑ v∈S(t) α (t) v v. We write S(t) for the active set, containing the previously discovered search atoms sr for r < t that have non-zero weight α (t) sr > 0 in the expansion (potentially also including the starting point x(0)). While tracking the active set S(t) is not necessary for the original FW algorithm, the improved variants of FW that we discuss will require that S(t) is maintained.\nZig-Zagging Phenomenon. When the optimal solution lies at the boundary of M, the convergence rate of the iterates is slow, i.e. sublinear: f(x(t))−f(x∗) ≤ O ( 1/t ) , for x∗ being an optimal solution [9, 6, 8, 15]. This is because the iterates of the classical FW algorithm start to zig-zag 1The atoms do not have to be extreme points (vertices) ofM. 2All our convergence results can be carefully extended to approximate linear minimization oracles with multiplicative approximation guarantees; we state them for exact oracles in this paper for simplicity.\nbetween the vertices defining the face containing the solution x∗ (see left of Figure 1). In fact, the 1/t rate is tight for a large class of functions: Canon and Cullum [6], Wolfe [34] showed (roughly) that f(x(t))−f(x∗) ≥ Ω ( 1/t1+δ ) for any δ > 0 when x∗ lies on a face ofM with some additional\nregularity assumptions. Note that this lower bound is different than the Ω ( 1/t )\none presented in [15, Lemma 3] which holds for all one-atom-per-step algorithms but assumes high dimensionality d ≥ t."
    }, {
      "heading" : "1 Improved Variants of the Frank-Wolfe Algorithm",
      "text" : "Algorithm 1 Away-steps Frank-Wolfe algorithm: AFW(x(0),A, ) 1: Let x(0) ∈ A, and S(0) := {x(0)} (so that α(0)v = 1 for v = x(0) and 0 otherwise) 2: for t = 0 . . . T do 3: Let st := LMOA ( ∇f(x(t)) ) and dFWt := st − x(t) (the FW direction)\n4: Let vt ∈ arg max v∈S(t)\n〈 ∇f(x(t)),v 〉 and dAt := x (t) − vt (the away direction)\n5: if gFWt := 〈 −∇f(x(t)),dFWt 〉 ≤ then return x(t) (FW gap is small enough, so return)\n6: if 〈 −∇f(x(t)),dFWt 〉 ≥ 〈 −∇f(x(t)),dAt 〉 then 7: dt := dFWt , and γmax := 1 (choose the FW direction) 8: else 9: dt := dAt , and γmax := αvt/(1− αvt) (choose away direction; maximum feasible step-size)\n10: end if 11: Line-search: γt ∈ arg min γ∈[0,γmax] f ( x(t) + γdt ) 12: Update x(t+1) := x(t) + γtdt (and accordingly for the weights α(t+1), see text) 13: Update S(t+1) := {v ∈ A s.t. α(t+1)v > 0} 14: end for\nAlgorithm 2 Pairwise Frank-Wolfe algorithm: PFW(x(0),A, ) 1: . . . as in Algorithm 1, except replacing lines 6 to 10 by: dt = dPFWt := st−vt, and γmax := αvt .\nAway-Steps Frank-Wolfe. To address the zig-zagging problem of FW, Wolfe [34] proposed to add the possibility to move away from an active atom in S(t) (see middle of Figure 1); this simple modification is sufficient to make the algorithm linearly convergent for strongly convex functions. We describe the away-steps variant of Frank-Wolfe in Algorithm 1.3 The away direction dAt is defined in line 4 by finding the atom vt in S(t) that maximizes the potential of descent given by gAt := 〈 −∇f(x(t)),x(t) − vt 〉 . Note that this search is over the (typically small) active set S(t), and is fundamentally easier than the linear oracle LMOA. The maximum step-size γmax as defined on line 9 ensures that the new iterate x(t) + γdAt stays inM. In fact, this guarantees that the convex representation is maintained, and we stay inside conv(S(t)) ⊆ M. WhenM is a simplex, then the barycentric coordinates are unique and x(t) +γmaxdAt truly lies on the boundary ofM. On the other hand, if |A| > dim(M) + 1 (e.g. for the cube), then it could hypothetically be possible to have a step-size bigger than γmax which is still feasible. Computing the true maximum feasible step-size would require the ability to know when we cross the boundary of M along a specific line, which is not possible for generalM. Using the conservative maximum step-size of line 9 ensures that we\n3The original algorithm presented in [34] was not convergent; this was corrected by Guélat and Marcotte [12], assuming a tractable representation ofM with linear inequalities and called it the modified Frank-Wolfe (MFW) algorithm. Our description in Algorithm 1 extends it to the more general setup of (1).\ndo not need this more powerful oracle. This is why Algorithm 1 requires to maintain S(t) (unlike standard FW). Finally, as in classical FW, the FW gap gFWt is an upper bound on the unknown suboptimality, and can be used as a stopping criterion:\ngFWt := 〈 −∇f(x(t)),dFWt 〉 ≥ 〈 −∇f(x(t)),x∗ − x(t) 〉 ≥ f(x(t))− f(x∗) (by convexity).\nIf γt = γmax, then we call this step a drop step, as it fully removes the atom vt from the currently active set of atoms S(t) (by settings its weight to zero). The weight updates for lines 12 and 13 are of the following form: For a FW step, we have S(t+1) = {st} if γt = 1; otherwise S(t+1) = S(t)∪{st}. Also, we have α(t+1)st := (1−γt)α (t) st +γt and α (t+1) v := (1−γt)α(t)v for v ∈ S(t)\\{st}. For an away step, we have S(t+1) = S(t) \\{vt} if γt = γmax (a drop step); otherwise S(t+1) = S(t). Also, we have α(t+1)vt := (1 + γt)α (t) vt − γt and α (t+1) v := (1 + γt)α (t) v for v ∈ S(t) \\ {vt}.\nPairwise Frank-Wolfe. The next variant that we present is inspired by an early algorithm by Mitchell et al. [25], called the MDM algorithm, originally invented for the polytope distance problem. Here the idea is to only move weight mass between two atoms in each step. More precisely, the generalized method as presented in Algorithm 2 moves weight from the away atom vt to the FW atom st, and keeps all other α weights un-changed. We call such a swap of mass between the two atoms a pairwise FW step, i.e. α(t+1)vt = α (t) vt − γ and α (t+1) st = α (t) st + γ for some step-size γ ≤ γmax := α(t)vt . In contrast, classical FW shrinks all active weights at every iteration. The pairwise FW direction will also be central to our proof technique to provide the first global linear convergence rate for away-steps FW, as well as the fully-corrective variant and Wolfe’s minnorm-point algorithm.\nAs we will see in Section 2.2, the rate guarantee for the pairwise FW variant is more loose than for the other variants, because we cannot provide a satisfactory bound on the number of the problematic swap steps (defined just before Theorem 1). Nevertheless, the algorithm seems to perform quite well in practice, often outperforming away-steps FW, especially in the important case of sparse solutions, that is if the optimal solution x∗ lies on a low-dimensional face ofM (and thus one wants to keep the active set S(t) small). The pairwise FW step is arguably more efficient at pruning the coordinates in S(t). In contrast to the away step which moves the mass back uniformly onto all other active elements S(t) (and might require more corrections later), the pairwise FW step only moves the mass onto the (good) FW atom st. A slightly different version than Algorithm 2 was also proposed by Ñanculef et al. [26], though their convergence proofs were incomplete (see Appendix A.3). The algorithm is related to classical working set algorithms, such as the SMO algorithm used to train SVMs [29]. We refer to [26] for an empirical comparison for SVMs, as well as their Section 5 for more related work. See also Appendix A.3 for a link between pairwise FW and [10].\nFully-Corrective Frank-Wolfe, and Wolfe’s Min-Norm Point Algorithm. When the linear oracle is expensive, it might be worthwhile to do more work to optimize over the active set S(t) in between each call to the linear oracle, rather than just performing an away or pairwise step. We give in Algorithm 3 the fully-corrective Frank-Wolfe (FCFW) variant, that maintains a correction polytope defined by a set of atoms A(t) (potentially larger than the active set S(t)). Rather than obtaining the next iterate by line-search, x(t+1) is obtained by re-optimizing f over conv(A(t)). Depending on how the correction is implemented, and how the correction atoms A(t) are maintained, several variants can be obtained. These variants are known under many names, such as the extended FW method by Holloway [14] or the simplicial decomposition method [31, 13]. Wolfe’s min-norm point (MNP) algorithm [35] for polytope distance problems is often confused with FCFW for quadratic objectives. The major difference is that standard FCFW optimizes f over conv(A(t)), whereas MNP implements the correction as a sequence of affine projections that potentially yield a different update, but can be computed more efficiently in several practical applications [35]. We describe precisely in Appendix A.1 a generalization of the MNP algorithm as a specific case of the correction subroutine from step 7 of the generic Algorithm 3. The original convergence analysis of the FCFW algorithm [14] (and also MNP algorithm [35]) only showed that they were finitely convergent, with a bound on the number of iterations in terms of the cardinality of A (unfortunately an exponential number in general). Holloway [14] also argued that FCFW had an asymptotic linear convergence based on the flawed argument of Wolfe [34]. As far as we know, our work is the first to provide global linear convergence rates for FCFW and MNP for\nAlgorithm 3 Fully-corrective Frank-Wolfe with approximate correction: FCFW(x(0),A, ) 1: Input: Set of atoms A, active set S(0), starting point x(0) = ∑\nv∈S(0) α(0)v v, stopping criterion .\n2: Let A(0) := S(0) (optionally, a bigger A(0) could be passed as argument for a warm start) 3: for t = 0 . . . T do 4: Let st := LMOA ( ∇f(x(t)) ) (the FW atom)\n5: Let dFWt := st − x(t) and gFWt = 〈 −∇f(x(t)),dFWt 〉 (FW gap) 6: if gFWt ≤ then return x(t) 7: (x(t+1),A(t+1)) := Correction(x(t),A(t), st, ) (approximate correction step) 8: end for\nAlgorithm 4 Approximate correction: Correction(x(t),A(t), st, ) 1: Return (x(t+1),A(t+1)) with the following properties: 2: S(t+1) is the active set for x(t+1) and A(t+1) ⊇ S(t+1). 3: f(x(t+1)) ≤ min\nγ∈[0,1] f ( x(t) + γ(st − x(t)) ) (make at least as much progress as a FW step)\n4: gAt+1 := max v∈S(t+1)\n〈 −∇f(x(t+1)),x(t+1) − v 〉 ≤ (the away gap is small enough)\ngeneral strongly convex functions. Moreover, the proof of convergence for FCFW does not require an exact solution to the correction step; instead, we show that the weaker properties stated for the approximate correction procedure in Algorithm 4 are sufficient for a global linear convergence rate (this correction could be implemented using away-steps FW, as done for example in [18])."
    }, {
      "heading" : "2 Global Linear Convergence Analysis",
      "text" : ""
    }, {
      "heading" : "2.1 Intuition for the Convergence Proofs",
      "text" : "We first give the general intuition for the linear convergence proof of the different FW variants, starting from the work of Guélat and Marcotte [12]. We assume that the objective function f is smooth over a compact set M, i.e. its gradient is Lipschitz continuous with constant L. Also let M := diam(M). Let dt be the direction in which the line-search is executed by the algorithm (Line 11 in Algorithm 1). By the standard descent lemma [see e.g. (1.2.5) in 27], we have:\nf(x(t+1)) ≤ f(x(t) + γdt) ≤ f(x(t)) + γ 〈 ∇f(x(t)),dt 〉 + γ2\n2 L‖dt‖2 ∀γ ∈ [0, γmax]. (2)\nWe let rt := −∇f(x(t)) and let ht := f(x(t)) − f(x∗) be the suboptimality error. Supposing for now that γmax ≥ γ∗t := 〈rt,dt〉 /(L‖dt‖2). We can set γ = γ∗t to minimize the RHS of (2), subtract f(x∗) on both sides, and re-organize to get a lower bound on the progress:\nht − ht+1 ≥ 〈rt,dt〉2\n2L‖dt‖2 =\n1\n2L 〈rt, d̂t〉2 , (3)\nwhere we use the ‘hat’ notation to denote normalized vectors: d̂t := dt/‖dt‖. Let et := x∗ − x(t) be the error vector. By µ-strong convexity of f , we have:\nf(x(t) + γet) ≥ f(x(t)) + γ 〈 ∇f(x(t)), et 〉 + γ2\n2 µ‖et‖2 ∀γ ∈ [0, 1]. (4)\nThe RHS is lower bounded by its minimum as a function of γ (unconstrained), achieved using γ := 〈rt, et〉/(µ‖et‖2). We are then free to use any value of γ on the LHS and maintain a valid bound. In particular, we use γ = 1 to obtain f(x∗). Again re-arranging, we get:\nht ≤ 〈rt, êt〉2\n2µ , and combining with (3), we obtain: ht − ht+1 ≥\nµ\nL\n〈rt, d̂t〉2 〈rt, êt〉2 ht. (5)\nThe inequality (5) is fairly general and valid for any line-search method in direction dt. To get a linear convergence rate, we need to lower bound (by a positive constant) the term in front of ht on the RHS, which depends on the angle between the update direction dt and the negative gradient rt. If we assume that the solution x∗ lies in the relative interior ofMwith a distance of at least δ > 0 from the boundary, then 〈rt,dt〉 ≥ δ‖rt‖ for the FW direction dFWt , and by combining with ‖dt‖ ≤ M , we get a linear rate with constant 1 − µL ( δ M )\n2 (this was the result from [12]). On the other hand, if x∗ lies on the boundary, then 〈r̂t, d̂t〉 gets arbitrary close to zero for standard FW (the zig-zagging phenomenon) and the convergence is sublinear.\nProof Sketch for AFW. The key insight to prove the global linear convergence for AFW is to relate 〈rt,dt〉 with the pairwise FW direction dPFWt := st − vt. By the way the direction dt is chosen on lines 6 to 10 of Algorithm 1, we have:\n2〈rt,dt〉 ≥ 〈rt,dFWt 〉+ 〈rt,dAt 〉 = 〈rt,dFWt + dAt 〉 = 〈rt,dPFWt 〉. (6) We thus have 〈rt,dt〉 ≥ 〈rt,dPFWt 〉/2. Now the crucial property of the pairwise FW direction is that for any potential negative gradient direction rt, the worst case inner product 〈r̂t,dPFWt 〉\ndFWt\ndAt\ndpFWt\nx vt\nst rt can be lower bounded away from zero by a quantity depending only on the geometry ofM (unless we are at the optimum). We call this quantity the pyramidal width of A. The figure on the right shows the six possible pairwise FW directions dPFWt for a triangle domain, depending on which colored area the rt direction falls into. We will see that the pyramidal width is related to the smallest width of pyramids that we can construct from A in a specific way related to the choice of the away and towards atoms vt and st. See (9) and our main Theorem 3 in Section 3.\nThis gives the main argument for the linear convergence of AFW for steps where γ∗t ≤ γmax. When γmax is too small, AFW will perform a drop step, as the line-search will truncate the step-size to γt = γmax. We cannot guarantee sufficient progress in this case, but the drop step decreases the active set size by one, and thus they cannot happen too often (not more than half the time). These are the main elements for the global linear convergence proof for AFW. The rest is to carefully consider various boundary cases. We can re-use the same techniques to prove the convergence for pairwise FW, though unfortunately the latter also has the possibility of problematic swap steps. While their number can be bounded, so far we only found the extremely loose bound quoted in Theorem 1.\nProof Sketch for FCFW. For FCFW, by line 4 of the correction Algorithm 4, the away gap satisfies gAt ≤ at the beginning of a new iteration. Supposing that the algorithm does not exit at line 6 of Algorithm 3, we have gFWt > and therefore 2〈rt,dFWt 〉 ≥ 〈rt,dPFWt 〉 using a similar argument as in (6). Finally, by line 3 of Algorithm 4, the correction is guaranteed to make at least as much progress as a line-search in direction dFWt , and so the progress bound (5) applies also to FCFW."
    }, {
      "heading" : "2.2 Convergence Results",
      "text" : "We now give the global linear convergence rates for the four variants of the FW algorithm: awaysteps FW (AFW Alg. 1); pairwise FW (PFW Alg. 2); fully-corrective FW (FCFW Alg. 3 with approximate correction Alg. 4); and Wolfe’s min-norm point algorithm (Alg. 3 with MNP-correction as Alg. 5 in Appendix A.1). For the AFW, MNP and PFW algorithms, we call a drop step when the active set shrinks |S(t+1)| < |S(t)|. For the PFW algorithm, we also have the possibility of a swap step where γt = γmax but |S(t+1)| = |S(t)| (i.e. the mass was fully swapped from the away atom to the FW atom). A nice property of FCFW is that it does not have any drop step (it executes both FW steps and away steps simultaneously while guaranteeing enough progress at every iteration). Theorem 1. Suppose that f has L-Lipschitz gradient4 and is µ-strongly convex over M = conv(A). Let M = diam(M) and δ = PWidth(A) as defined by (9). Then the suboptimality ht of the iterates of all the four variants of the FW algorithm decreases geometrically at each step that is not a drop step nor a swap step (i.e. when γt < γmax, called a ‘good step’), that is\nht+1 ≤ (1− ρ)ht , where ρ := µ\n4L\n( δ\nM\n)2 .\nLet k(t) be the number of ‘good steps’ up to iteration t. We have k(t) = t for FCFW; k(t) ≥ t/2 for MNP and AFW; and k(t) ≥ t/(3|A|!+1) for PFW (because of the swap steps). This yields a global linear convergence rate of ht ≤ h0 exp(−ρ k(t)) for all variants. If µ = 0 (general convex), then ht = O(1/k(t)) instead. See Theorem 8 in Appendix D for an affine invariant version and proof.\nNote that to our knowledge, none of the existing linear convergence results showed that the duality gap was also linearly convergent. The result for the gap follows directly from the simple manipulation of (2); putting the FW gap to the LHS and optimizing the RHS for γ ∈ [0, 1]. Theorem 2. Suppose that f has L-Lipschitz gradient overM with M := diam(M). Then the FW gap gFWt for any algorithm is upper bounded by the primal error ht as follows:\ngFWt ≤ ht + LM2/2 when ht > LM2/2, gFWt ≤M √\n2htL otherwise . (7) 4For AFW and PFW, we actually require that∇f is L-Lipschitz over the larger domainM+M−M."
    }, {
      "heading" : "3 Pyramidal Width",
      "text" : "We now describe the claimed lower bound on the angle between the negative gradient and the pairwise FW direction, which depends only on the geometric properties of M. According to our argument about the progress bound (5) and the PFW gap (6), our goal is to find a lower bound on 〈rt,dPFWt 〉/〈rt, êt〉. First note that 〈rt,dPFWt 〉=〈rt, st−vt〉= max\ns∈M,v∈S(t) 〈rt, s−v〉 where S(t) is a pos-\nsible active set for x(t). This looks like the directional width of a pyramid with base S(t) and summit st. To be conservative, we consider the worst case possible active set for x(t); this is what we will call the pyramid directional width PdirW (A, rt,x(t)). We start with the following definitions. Directional Width. The directional width of a set A with respect to a direction r is defined as dirW (A, r) := maxs,v∈A 〈 r ‖r‖ , s− v 〉 . The width of A is the minimum directional width over all possible directions in its affine hull. Pyramidal Directional Width. We define the pyramidal directional width of a set A with respect to a direction r and a base point x ∈M to be\nPdirW (A, r,x) := min S∈Sx dirW (S ∪ {s(A, r)}, r) = min S∈Sx max s∈A,v∈S\n〈 r ‖r‖ , s− v 〉 , (8)\nwhere Sx := {S | S ⊆ A such that x is a proper5 convex combination of all the elements in S}, and s(A, r) := arg maxv∈A〈r,v〉 is the FW atom used as a summit.\nPyramidal Width. To define the pyramidal width of a set, we take the minimum over the cone of possible feasible directions r (in order to avoid the problem of zero width). A direction r is feasible for A from x if it points inwards conv(A), (i.e. r ∈ cone(A− x)). We define the pyramidal width of a set A to be the smallest pyramidal width of all its faces, i.e.\nPWidth(A) := min K∈faces(conv(A))\nx∈K r∈cone(K−x)\\{0}\nPdirW (K ∩A, r,x). (9)\nTheorem 3. Let x ∈ M = conv(A) be a suboptimal point and S be an active set for x. Let x∗ be an optimal point and corresponding error direction ê = (x∗−x)/ ‖x∗ − x‖, and negative gradient r := −∇f(x) (and so 〈r, ê〉 > 0). Let d = s−v be the pairwise FW direction obtained over A and S with negative gradient r. Then\n〈r,d〉 〈r, ê〉 ≥ PWidth(A). (10)"
    }, {
      "heading" : "3.1 Properties of Pyramidal Width and Consequences",
      "text" : "Examples of Values. The pyramidal width of a setA is lower bounded by the minimal width over all subsets of atoms, and thus is strictly greater than zero if the number of atoms is finite. On the other hand, this lower bound is often too loose to be useful, as in particular, vertex subsets of the unit cube in dimension d can have exponentially small width O(d− d 2 ) [see Corollary 27 in 36]. On the other hand, as we show here, the pyramidal width of the unit cube is actually 1/ √ d, justifying why we kept the tighter but more involved definition (9). See Appendix B.1 for the proof. Lemma 4. The pyramidal width of the unit cube in Rd is 1/ √ d.\nFor the probability simplex with d vertices, the pyramidal width is actually the same as its width, which is 2/ √ d when d is even, and 2/ √ d−1/d when d is odd [2] (see Appendix B.1). In contrast, the pyramidal width of an infinite set can be zero. For example, for a curved domain, the set of active atoms S can contain vertices forming a very narrow pyramid, yielding a zero width in the limit.\nCondition Number of a Set. The inverse of the rate constant ρ appearing in Theorem 1 is the product of two terms: L/µ is the standard condition number of the objective function appearing in the rates of gradient methods in convex optimization. The second quantity (M/δ)2 (diameter over pyramidal width) can be interpreted as a condition number of the domain M, or its eccentricity. The more eccentric the constraint set (large diameter compared to its pyramidal width), the slower the convergence. The best condition number of a function is when its level sets are spherical; the analog in term of the constraint sets is actually the regular simplex, which has the maximum widthto-diameter ratio amongst all simplices [see Corollary 1 in 2]. Its eccentricity is (at most) d/2. In contrast, the eccentricity of the unit cube is d2, which is much worse.\n5By proper convex combination, we mean that all coefficients are non-zero in the convex combination.\nWe conjecture that the pyramidal width of a set of vertices (i.e. extrema of their convex hull) is non-increasing when another vertex is added (assuming that all previous points remain vertices). For example, the unit cube can be obtained by iteratively adding vertices to the regular probability simplex, and the pyramidal width thereby decreases from 2/ √ d to 1/ √ d. This property could provide lower bounds for the pyramidal width of more complicated polytopes, such as 1/ √ d for the d-dimensional marginal polytope, as it can be obtained by removing vertices from the unit cube.\nComplexity Lower Bounds. Combining the convergence Theorem 1 and the condition number of the unit simplex, we get a complexity of O(dLµ log( 1 )) to reach -accuracy when optimizing a strongly convex function over the unit simplex. Here the linear dependence on d should not come as a surprise, in view of the known lower bound of 1/t for t ≤ d for Frank-Wolfe type methods [15]. Applications to Submodular Minimization. See Appendix A.2 for a consequence of our linear rate for the popular MNP algorithm for submodular function optimization (over the base polytope)."
    }, {
      "heading" : "4 Non-Strongly Convex Generalization",
      "text" : "Building on the work of Beck and Shtern [4] and Wang and Lin [33], we can generalize our global linear convergence results for all Frank-Wolfe variants for the more general case where f(x) := g(Ax) + 〈b,x〉, for A ∈ Rp×d, b ∈ Rd and where g is µg-strongly convex and continuously differentiable over AM. We note that for a general matrix A, f is convex but not necessarily strongly convex. In this case, the linear convergence still holds but with the constant µ appearing in the rate of Theorem 1 replaced with the generalized constant µ̃ appearing in Lemma 9 in Appendix F.\n5 Illustrative Experiments\nWe illustrate the performance of the presented algorithm variants in two numerical experiments, shown in Figure 2. The first example is a constrained Lasso problem (`1-regularized least squares regression), that is minx∈M f(x) = ‖Ax− b‖2, withM = 20 · L1 a scaled L1-ball. We used a random Gaussian matrix A ∈ R200×500, and a noisy measurement b = Ax∗ with x∗ being a sparse vector with 50 entries ±1, and 10% of additive noise. For the L1-ball, the linear minimization oracle LMOA just selects the column of A of best inner product with the residual vector. The second application comes from video co-localization. The approach used by [16] is formulated as a quadratic program (QP) over a flow polytope, the convex hull of paths in a network. In this application, the linear minimization oracle is equivalent to finding a shortest path in the network, which can be done easily by dynamic programming. For the LMOA, we re-use the code provided by [16] and their included aeroplane dataset resulting in a QP over 660 variables. In both experiments, we see that the modified FW variants (away-steps and pairwise) outperform the original FW algorithm, and exhibit a linear convergence. In addition, the constant in the convergence rate of Theorem 1 can also be empirically shown to be\nfairly tight for AFW and PFW by running them on an increasingly obtuse triangle (see Appendix E).\nDiscussion. Building on a preliminary version of our work [20], Beck and Shtern [4] also proved a linear rate for away-steps FW, but with a simpler lower bound for the LHS of (10) using linear duality arguments. However, their lower bound [see e.g. Lemma 3.1 in 4] is looser: they get a d2 constant for the eccentricity of the regular simplex instead of the tighter d that we proved. Finally, the recently proposed generic scheme for accelerating first-order optimization methods in the sense of Nesterov from [24] applies directly to the FW variants given their global linear convergence rate that we proved. This gives for the first time first-order methods that only use linear oracles and obtain the “near-optimal” Õ(1/k2) rate for smooth convex functions, or the accelerated Õ( √ L/µ) constant in the linear rate for strongly convex functions. Given that the constants also depend on the dimensionality, it remains an open question whether this acceleration is practically useful. Acknowledgements. We thank J.B. Alayrac, E. Hazan, A. Hubard, A. Osokin and P. Marcotte for helpful discussions. This work was partially supported by the MSR-Inria Joint Center and a Google Research Award."
    } ],
    "references" : [ {
      "title" : "Linear convergence of a modified Frank-Wolfe algorithm for computing minimum-volume enclosing ellipsoids",
      "author" : [ "S.D. Ahipaaoğlu", "P. Sun", "M. Todd" ],
      "venue" : "Optimization Methods and Software, 23(1):5–19",
      "citeRegEx" : "1",
      "shortCiteRegEx" : null,
      "year" : 2008
    }, {
      "title" : "The width and diameter of a simplex",
      "author" : [ "R. Alexander" ],
      "venue" : "Geometriae Dedicata, 6(1):87–94",
      "citeRegEx" : "2",
      "shortCiteRegEx" : null,
      "year" : 1977
    }, {
      "title" : "Learning with submodular functions: A convex optimization perspective",
      "author" : [ "F. Bach" ],
      "venue" : "Foundations and Trends in Machine Learning, 6(2-3):145–373",
      "citeRegEx" : "3",
      "shortCiteRegEx" : null,
      "year" : 2013
    }, {
      "title" : "Linearly convergent away-step conditional gradient for non-strongly convex functions",
      "author" : [ "A. Beck", "S. Shtern" ],
      "venue" : "arXiv:1504.05002v1",
      "citeRegEx" : "4",
      "shortCiteRegEx" : null,
      "year" : 2015
    }, {
      "title" : "A conditional gradient method with linear rate of convergence for solving convex linear systems",
      "author" : [ "A. Beck", "M. Teboulle" ],
      "venue" : "Mathematical Methods of Operations Research (ZOR), 59(2):235–247",
      "citeRegEx" : "5",
      "shortCiteRegEx" : null,
      "year" : 2004
    }, {
      "title" : "A tight upper bound on the rate of convergence of Frank-Wolfe algorithm",
      "author" : [ "M.D. Canon", "C.D. Cullum" ],
      "venue" : "SIAM Journal on Control, 6(4):509–516",
      "citeRegEx" : "6",
      "shortCiteRegEx" : null,
      "year" : 1968
    }, {
      "title" : "On pairwise costs for network flow multi-object tracking",
      "author" : [ "V. Chari" ],
      "venue" : "In CVPR,",
      "citeRegEx" : "7",
      "shortCiteRegEx" : "7",
      "year" : 2015
    }, {
      "title" : "Rates of convergence for conditional gradient algorithms near singular and nonsingular extremals",
      "author" : [ "J.C. Dunn" ],
      "venue" : "SIAM Journal on Control and Optimization, 17(2):187–211",
      "citeRegEx" : "8",
      "shortCiteRegEx" : null,
      "year" : 1979
    }, {
      "title" : "An algorithm for quadratic programming",
      "author" : [ "M. Frank", "P. Wolfe" ],
      "venue" : "Naval Research Logistics Quarterly, 3:95–110",
      "citeRegEx" : "9",
      "shortCiteRegEx" : null,
      "year" : 1956
    }, {
      "title" : "A linearly convergent conditional gradient algorithm with applications to online and stochastic optimization",
      "author" : [ "D. Garber", "E. Hazan" ],
      "venue" : "arXiv:1301.4666v5",
      "citeRegEx" : "10",
      "shortCiteRegEx" : null,
      "year" : 2013
    }, {
      "title" : "Faster rates for the Frank-Wolfe method over strongly-convex sets",
      "author" : [ "D. Garber", "E. Hazan" ],
      "venue" : "ICML",
      "citeRegEx" : "11",
      "shortCiteRegEx" : null,
      "year" : 2015
    }, {
      "title" : "Some comments on Wolfe’s ‘away step",
      "author" : [ "J. Guélat", "P. Marcotte" ],
      "venue" : "Mathematical Programming",
      "citeRegEx" : "12",
      "shortCiteRegEx" : null,
      "year" : 1986
    }, {
      "title" : "Restricted simplicial decomposition: Computation and extensions",
      "author" : [ "D. Hearn", "S. Lawphongpanich", "J. Ventura" ],
      "venue" : "Computation Mathematical Programming, volume 31, pages 99–118. Springer",
      "citeRegEx" : "13",
      "shortCiteRegEx" : null,
      "year" : 1987
    }, {
      "title" : "An extension of the Frank and Wolfe method of feasible directions",
      "author" : [ "C.A. Holloway" ],
      "venue" : "Mathematical Programming, 6(1):14–27",
      "citeRegEx" : "14",
      "shortCiteRegEx" : null,
      "year" : 1974
    }, {
      "title" : "Revisiting Frank-Wolfe: Projection-free sparse convex optimization",
      "author" : [ "M. Jaggi" ],
      "venue" : "ICML",
      "citeRegEx" : "15",
      "shortCiteRegEx" : null,
      "year" : 2013
    }, {
      "title" : "Efficient image and video co-localization with Frank-Wolfe algorithm",
      "author" : [ "A. Joulin", "K. Tang", "L. Fei-Fei" ],
      "venue" : "ECCV",
      "citeRegEx" : "16",
      "shortCiteRegEx" : null,
      "year" : 2014
    }, {
      "title" : "What energy functions can be minimized via graph cuts? IEEE Transactions on Pattern Analysis and Machine Intelligence",
      "author" : [ "V. Kolmogorov", "R. Zabin" ],
      "venue" : "26(2):147–159",
      "citeRegEx" : "17",
      "shortCiteRegEx" : null,
      "year" : 2004
    }, {
      "title" : "Barrier Frank-Wolfe for marginal inference",
      "author" : [ "R.G. Krishnan", "S. Lacoste-Julien", "D. Sontag" ],
      "venue" : "NIPS",
      "citeRegEx" : "18",
      "shortCiteRegEx" : null,
      "year" : 2015
    }, {
      "title" : "A linearly convergent linear-time first-order algorithm for support vector classification with a core set result",
      "author" : [ "P. Kumar", "E.A. Yildirim" ],
      "venue" : "INFORMS Journal on Computing",
      "citeRegEx" : "19",
      "shortCiteRegEx" : null,
      "year" : 2010
    }, {
      "title" : "An affine invariant linear convergence analysis for Frank-Wolfe algorithms",
      "author" : [ "S. Lacoste-Julien", "M. Jaggi" ],
      "venue" : "arXiv:1312.7864v2",
      "citeRegEx" : "20",
      "shortCiteRegEx" : null,
      "year" : 2013
    }, {
      "title" : "Block-coordinate Frank-Wolfe optimization for structural SVMs",
      "author" : [ "S. Lacoste-Julien", "M. Jaggi", "M. Schmidt", "P. Pletscher" ],
      "venue" : "ICML",
      "citeRegEx" : "21",
      "shortCiteRegEx" : null,
      "year" : 2013
    }, {
      "title" : "The complexity of large-scale convex programming under a linear optimization oracle",
      "author" : [ "G. Lan" ],
      "venue" : "arXiv:1309.5550v2",
      "citeRegEx" : "22",
      "shortCiteRegEx" : null,
      "year" : 2013
    }, {
      "title" : "Constrained minimization methods",
      "author" : [ "E.S. Levitin", "B.T. Polyak" ],
      "venue" : "USSR Computational Mathematics and Mathematical Physics,",
      "citeRegEx" : "23",
      "shortCiteRegEx" : "23",
      "year" : 1966
    }, {
      "title" : "A universal catalyst for first-order optimization",
      "author" : [ "H. Lin", "J. Mairal", "Z. Harchaoui" ],
      "venue" : "NIPS",
      "citeRegEx" : "24",
      "shortCiteRegEx" : null,
      "year" : 2015
    }, {
      "title" : "Finding the point of a polyhedron closest to the origin",
      "author" : [ "B. Mitchell", "V.F. Demyanov", "V. Malozemov" ],
      "venue" : "SIAM Journal on Control, 12(1)",
      "citeRegEx" : "25",
      "shortCiteRegEx" : null,
      "year" : 1974
    }, {
      "title" : "A novel Frank-Wolfe algorithm",
      "author" : [ "R. Ñanculef", "E. Frandi", "C. Sartori", "H. Allende" ],
      "venue" : "Analysis and applications to large-scale SVM training. Information Sciences",
      "citeRegEx" : "26",
      "shortCiteRegEx" : null,
      "year" : 2014
    }, {
      "title" : "Introductory Lectures on Convex Optimization",
      "author" : [ "Y. Nesterov" ],
      "venue" : "Kluwer Academic Publishers",
      "citeRegEx" : "27",
      "shortCiteRegEx" : null,
      "year" : 2004
    }, {
      "title" : "On the von Neumann and Frank-Wolfe algorithms with away steps",
      "author" : [ "J. Pena", "D. Rodriguez", "N. Soheili" ],
      "venue" : "arXiv:1507.04073v2",
      "citeRegEx" : "28",
      "shortCiteRegEx" : null,
      "year" : 2015
    }, {
      "title" : "Fast training of support vector machines using sequential minimal optimization. In Advances in kernel methods: support vector learning, pages 185–208",
      "author" : [ "J.C. Platt" ],
      "venue" : null,
      "citeRegEx" : "29",
      "shortCiteRegEx" : "29",
      "year" : 1999
    }, {
      "title" : "Generalized Equations and their Solutions",
      "author" : [ "S.M. Robinson" ],
      "venue" : "Part II: Applications to Nonlinear Programming. Springer",
      "citeRegEx" : "30",
      "shortCiteRegEx" : null,
      "year" : 1982
    }, {
      "title" : "Simplicial decomposition in nonlinear programming algorithms",
      "author" : [ "B. Von Hohenbalken" ],
      "venue" : "Mathematical Programming, 13(1):49–68",
      "citeRegEx" : "31",
      "shortCiteRegEx" : null,
      "year" : 1977
    }, {
      "title" : "Graphical models",
      "author" : [ "M.J. Wainwright", "M.I. Jordan" ],
      "venue" : "exponential families, and variational inference. Foundations and Trends in Machine Learning, 1(12):1–305",
      "citeRegEx" : "32",
      "shortCiteRegEx" : null,
      "year" : 2008
    }, {
      "title" : "Iteration complexity of feasible descent methods for convex optimization",
      "author" : [ "P.-W. Wang", "C.-J. Lin" ],
      "venue" : "Journal of Machine Learning Research, 15:1523–1548",
      "citeRegEx" : "33",
      "shortCiteRegEx" : null,
      "year" : 2014
    }, {
      "title" : "Convergence theory in nonlinear programming",
      "author" : [ "P. Wolfe" ],
      "venue" : "In Integer and Nonlinear Programming",
      "citeRegEx" : "34",
      "shortCiteRegEx" : "34",
      "year" : 1970
    }, {
      "title" : "Finding the nearest point in a polytope",
      "author" : [ "P. Wolfe" ],
      "venue" : "Mathematical Programming, 11(1):128–149",
      "citeRegEx" : "35",
      "shortCiteRegEx" : null,
      "year" : 1976
    }, {
      "title" : "Lectures on 0/1-polytopes",
      "author" : [ "G.M. Ziegler" ],
      "venue" : "arXiv:math/9909177v1",
      "citeRegEx" : "36",
      "shortCiteRegEx" : null,
      "year" : 1999
    } ],
    "referenceMentions" : [ {
      "referenceID" : 8,
      "context" : "The Frank-Wolfe algorithm [9] (also known as conditional gradient) is one of the earliest existing methods for constrained convex optimization, and has seen an impressive revival recently due to its nice properties compared to projected or proximal gradient methods, in particular for sparse optimization and machine learning applications.",
      "startOffset" : 26,
      "endOffset" : 29
    }, {
      "referenceID" : 33,
      "context" : "Our analysis does not depend on the location of the true optimum with respect to the domain, which was a disadvantage of earlier existing results such as [34, 12, 5], and the newer work of [28], as well as the line of work of [1, 19, 26] which rely on Robinson’s condition [30].",
      "startOffset" : 154,
      "endOffset" : 165
    }, {
      "referenceID" : 11,
      "context" : "Our analysis does not depend on the location of the true optimum with respect to the domain, which was a disadvantage of earlier existing results such as [34, 12, 5], and the newer work of [28], as well as the line of work of [1, 19, 26] which rely on Robinson’s condition [30].",
      "startOffset" : 154,
      "endOffset" : 165
    }, {
      "referenceID" : 4,
      "context" : "Our analysis does not depend on the location of the true optimum with respect to the domain, which was a disadvantage of earlier existing results such as [34, 12, 5], and the newer work of [28], as well as the line of work of [1, 19, 26] which rely on Robinson’s condition [30].",
      "startOffset" : 154,
      "endOffset" : 165
    }, {
      "referenceID" : 27,
      "context" : "Our analysis does not depend on the location of the true optimum with respect to the domain, which was a disadvantage of earlier existing results such as [34, 12, 5], and the newer work of [28], as well as the line of work of [1, 19, 26] which rely on Robinson’s condition [30].",
      "startOffset" : 189,
      "endOffset" : 193
    }, {
      "referenceID" : 0,
      "context" : "Our analysis does not depend on the location of the true optimum with respect to the domain, which was a disadvantage of earlier existing results such as [34, 12, 5], and the newer work of [28], as well as the line of work of [1, 19, 26] which rely on Robinson’s condition [30].",
      "startOffset" : 226,
      "endOffset" : 237
    }, {
      "referenceID" : 18,
      "context" : "Our analysis does not depend on the location of the true optimum with respect to the domain, which was a disadvantage of earlier existing results such as [34, 12, 5], and the newer work of [28], as well as the line of work of [1, 19, 26] which rely on Robinson’s condition [30].",
      "startOffset" : 226,
      "endOffset" : 237
    }, {
      "referenceID" : 25,
      "context" : "Our analysis does not depend on the location of the true optimum with respect to the domain, which was a disadvantage of earlier existing results such as [34, 12, 5], and the newer work of [28], as well as the line of work of [1, 19, 26] which rely on Robinson’s condition [30].",
      "startOffset" : 226,
      "endOffset" : 237
    }, {
      "referenceID" : 29,
      "context" : "Our analysis does not depend on the location of the true optimum with respect to the domain, which was a disadvantage of earlier existing results such as [34, 12, 5], and the newer work of [28], as well as the line of work of [1, 19, 26] which rely on Robinson’s condition [30].",
      "startOffset" : 273,
      "endOffset" : 277
    }, {
      "referenceID" : 4,
      "context" : "For the classical Frank-Wolfe algorithm, [5] showed a linear rate for the special case of quadratic objectives when the optimum is in the strict interior of the domain, a result already subsumed by the more general [12].",
      "startOffset" : 41,
      "endOffset" : 44
    }, {
      "referenceID" : 11,
      "context" : "For the classical Frank-Wolfe algorithm, [5] showed a linear rate for the special case of quadratic objectives when the optimum is in the strict interior of the domain, a result already subsumed by the more general [12].",
      "startOffset" : 215,
      "endOffset" : 219
    }, {
      "referenceID" : 22,
      "context" : "The early work of [23] showed linear convergence for strongly",
      "startOffset" : 18,
      "endOffset" : 22
    }, {
      "referenceID" : 10,
      "context" : "convex constraint sets, under the strong requirement that the gradient norm is not too small (see [11] for a discussion).",
      "startOffset" : 98,
      "endOffset" : 102
    }, {
      "referenceID" : 33,
      "context" : "The away-steps variant of the Frank-Wolfe algorithm, that can also remove weight from ‘bad’ atoms in the current active set, was proposed in [34], and later also analyzed in [12].",
      "startOffset" : 141,
      "endOffset" : 145
    }, {
      "referenceID" : 11,
      "context" : "The away-steps variant of the Frank-Wolfe algorithm, that can also remove weight from ‘bad’ atoms in the current active set, was proposed in [34], and later also analyzed in [12].",
      "startOffset" : 174,
      "endOffset" : 178
    }, {
      "referenceID" : 11,
      "context" : "[12] showed a (local) linear convergence rate on polytopes, but the constant unfortunately depends on the distance between the solution and its relative boundary, a quantity that can be arbitrarily small.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 0,
      "context" : "More recently, [1, 19, 26] have obtained linear convergence results in the case that the optimum solution satisfies Robinson’s condition [30].",
      "startOffset" : 15,
      "endOffset" : 26
    }, {
      "referenceID" : 18,
      "context" : "More recently, [1, 19, 26] have obtained linear convergence results in the case that the optimum solution satisfies Robinson’s condition [30].",
      "startOffset" : 15,
      "endOffset" : 26
    }, {
      "referenceID" : 25,
      "context" : "More recently, [1, 19, 26] have obtained linear convergence results in the case that the optimum solution satisfies Robinson’s condition [30].",
      "startOffset" : 15,
      "endOffset" : 26
    }, {
      "referenceID" : 29,
      "context" : "More recently, [1, 19, 26] have obtained linear convergence results in the case that the optimum solution satisfies Robinson’s condition [30].",
      "startOffset" : 137,
      "endOffset" : 141
    }, {
      "referenceID" : 9,
      "context" : "In a different recent line of work, [10, 22] have studied a variation of FW that repeatedly moves mass from the worst vertices to the standard FW vertex until a specific condition is satisfied, yielding a linear rate on strongly convex functions.",
      "startOffset" : 36,
      "endOffset" : 44
    }, {
      "referenceID" : 21,
      "context" : "In a different recent line of work, [10, 22] have studied a variation of FW that repeatedly moves mass from the worst vertices to the standard FW vertex until a specific condition is satisfied, yielding a linear rate on strongly convex functions.",
      "startOffset" : 36,
      "endOffset" : 44
    }, {
      "referenceID" : 15,
      "context" : "As an example from tracking in computer vision, A could be the set of integer flows on a graph [16, 7], where LMOA can be efficiently implemented by a minimum cost network flow algorithm.",
      "startOffset" : 95,
      "endOffset" : 102
    }, {
      "referenceID" : 6,
      "context" : "As an example from tracking in computer vision, A could be the set of integer flows on a graph [16, 7], where LMOA can be efficiently implemented by a minimum cost network flow algorithm.",
      "startOffset" : 95,
      "endOffset" : 102
    }, {
      "referenceID" : 2,
      "context" : "This is the case when optimizing over the base polytope, an object appearing in submodular function optimization [3].",
      "startOffset" : 113,
      "endOffset" : 116
    }, {
      "referenceID" : 31,
      "context" : "Another example is whenA represents the possible consistent value assignments on cliques of a Markov random field (MRF);M is the marginal polytope [32], where testing membership is NP-hard in general, though efficient linear oracles exist for some special cases [17].",
      "startOffset" : 147,
      "endOffset" : 151
    }, {
      "referenceID" : 16,
      "context" : "Another example is whenA represents the possible consistent value assignments on cliques of a Markov random field (MRF);M is the marginal polytope [32], where testing membership is NP-hard in general, though efficient linear oracles exist for some special cases [17].",
      "startOffset" : 262,
      "endOffset" : 266
    }, {
      "referenceID" : 20,
      "context" : "Optimization over the marginal polytope appears for example in structured SVM learning [21] and variational inference [18].",
      "startOffset" : 87,
      "endOffset" : 91
    }, {
      "referenceID" : 17,
      "context" : "Optimization over the marginal polytope appears for example in structured SVM learning [21] and variational inference [18].",
      "startOffset" : 118,
      "endOffset" : 122
    }, {
      "referenceID" : 8,
      "context" : "The Frank-Wolfe (FW) optimization algorithm [9], also known as conditional gradient [23], is particularly suited for the setup (1) whereM is only accessed through the linear minimization oracle.",
      "startOffset" : 44,
      "endOffset" : 47
    }, {
      "referenceID" : 22,
      "context" : "The Frank-Wolfe (FW) optimization algorithm [9], also known as conditional gradient [23], is particularly suited for the setup (1) whereM is only accessed through the linear minimization oracle.",
      "startOffset" : 84,
      "endOffset" : 88
    }, {
      "referenceID" : 8,
      "context" : "sublinear: f(x(t))−f(x∗) ≤ O ( 1/t ) , for x∗ being an optimal solution [9, 6, 8, 15].",
      "startOffset" : 72,
      "endOffset" : 85
    }, {
      "referenceID" : 5,
      "context" : "sublinear: f(x(t))−f(x∗) ≤ O ( 1/t ) , for x∗ being an optimal solution [9, 6, 8, 15].",
      "startOffset" : 72,
      "endOffset" : 85
    }, {
      "referenceID" : 7,
      "context" : "sublinear: f(x(t))−f(x∗) ≤ O ( 1/t ) , for x∗ being an optimal solution [9, 6, 8, 15].",
      "startOffset" : 72,
      "endOffset" : 85
    }, {
      "referenceID" : 14,
      "context" : "sublinear: f(x(t))−f(x∗) ≤ O ( 1/t ) , for x∗ being an optimal solution [9, 6, 8, 15].",
      "startOffset" : 72,
      "endOffset" : 85
    }, {
      "referenceID" : 5,
      "context" : "In fact, the 1/t rate is tight for a large class of functions: Canon and Cullum [6], Wolfe [34] showed (roughly) that f(x(t))−f(x∗) ≥ Ω ( 1/t ) for any δ > 0 when x∗ lies on a face ofM with some additional",
      "startOffset" : 80,
      "endOffset" : 83
    }, {
      "referenceID" : 33,
      "context" : "In fact, the 1/t rate is tight for a large class of functions: Canon and Cullum [6], Wolfe [34] showed (roughly) that f(x(t))−f(x∗) ≥ Ω ( 1/t ) for any δ > 0 when x∗ lies on a face ofM with some additional",
      "startOffset" : 91,
      "endOffset" : 95
    }, {
      "referenceID" : 33,
      "context" : "To address the zig-zagging problem of FW, Wolfe [34] proposed to add the possibility to move away from an active atom in S (see middle of Figure 1); this simple modification is sufficient to make the algorithm linearly convergent for strongly convex functions.",
      "startOffset" : 48,
      "endOffset" : 52
    }, {
      "referenceID" : 33,
      "context" : "The original algorithm presented in [34] was not convergent; this was corrected by Guélat and Marcotte [12], assuming a tractable representation ofM with linear inequalities and called it the modified Frank-Wolfe (MFW) algorithm.",
      "startOffset" : 36,
      "endOffset" : 40
    }, {
      "referenceID" : 11,
      "context" : "The original algorithm presented in [34] was not convergent; this was corrected by Guélat and Marcotte [12], assuming a tractable representation ofM with linear inequalities and called it the modified Frank-Wolfe (MFW) algorithm.",
      "startOffset" : 103,
      "endOffset" : 107
    }, {
      "referenceID" : 24,
      "context" : "[25], called the MDM algorithm, originally invented for the polytope distance problem.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 25,
      "context" : "[26], though their convergence proofs were incomplete (see Appendix A.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 28,
      "context" : "The algorithm is related to classical working set algorithms, such as the SMO algorithm used to train SVMs [29].",
      "startOffset" : 107,
      "endOffset" : 111
    }, {
      "referenceID" : 25,
      "context" : "We refer to [26] for an empirical comparison for SVMs, as well as their Section 5 for more related work.",
      "startOffset" : 12,
      "endOffset" : 16
    }, {
      "referenceID" : 9,
      "context" : "3 for a link between pairwise FW and [10].",
      "startOffset" : 37,
      "endOffset" : 41
    }, {
      "referenceID" : 13,
      "context" : "These variants are known under many names, such as the extended FW method by Holloway [14] or the simplicial decomposition method [31, 13].",
      "startOffset" : 86,
      "endOffset" : 90
    }, {
      "referenceID" : 30,
      "context" : "These variants are known under many names, such as the extended FW method by Holloway [14] or the simplicial decomposition method [31, 13].",
      "startOffset" : 130,
      "endOffset" : 138
    }, {
      "referenceID" : 12,
      "context" : "These variants are known under many names, such as the extended FW method by Holloway [14] or the simplicial decomposition method [31, 13].",
      "startOffset" : 130,
      "endOffset" : 138
    }, {
      "referenceID" : 34,
      "context" : "Wolfe’s min-norm point (MNP) algorithm [35] for polytope distance problems is often confused with FCFW for quadratic objectives.",
      "startOffset" : 39,
      "endOffset" : 43
    }, {
      "referenceID" : 34,
      "context" : "The major difference is that standard FCFW optimizes f over conv(A), whereas MNP implements the correction as a sequence of affine projections that potentially yield a different update, but can be computed more efficiently in several practical applications [35].",
      "startOffset" : 257,
      "endOffset" : 261
    }, {
      "referenceID" : 13,
      "context" : "The original convergence analysis of the FCFW algorithm [14] (and also MNP algorithm [35]) only showed that they were finitely convergent, with a bound on the number of iterations in terms of the cardinality of A (unfortunately an exponential number in general).",
      "startOffset" : 56,
      "endOffset" : 60
    }, {
      "referenceID" : 34,
      "context" : "The original convergence analysis of the FCFW algorithm [14] (and also MNP algorithm [35]) only showed that they were finitely convergent, with a bound on the number of iterations in terms of the cardinality of A (unfortunately an exponential number in general).",
      "startOffset" : 85,
      "endOffset" : 89
    }, {
      "referenceID" : 13,
      "context" : "Holloway [14] also argued that FCFW had an asymptotic linear convergence based on the flawed argument of Wolfe [34].",
      "startOffset" : 9,
      "endOffset" : 13
    }, {
      "referenceID" : 33,
      "context" : "Holloway [14] also argued that FCFW had an asymptotic linear convergence based on the flawed argument of Wolfe [34].",
      "startOffset" : 111,
      "endOffset" : 115
    }, {
      "referenceID" : 17,
      "context" : "Moreover, the proof of convergence for FCFW does not require an exact solution to the correction step; instead, we show that the weaker properties stated for the approximate correction procedure in Algorithm 4 are sufficient for a global linear convergence rate (this correction could be implemented using away-steps FW, as done for example in [18]).",
      "startOffset" : 344,
      "endOffset" : 348
    }, {
      "referenceID" : 11,
      "context" : "We first give the general intuition for the linear convergence proof of the different FW variants, starting from the work of Guélat and Marcotte [12].",
      "startOffset" : 145,
      "endOffset" : 149
    }, {
      "referenceID" : 11,
      "context" : "If we assume that the solution x∗ lies in the relative interior ofMwith a distance of at least δ > 0 from the boundary, then 〈rt,dt〉 ≥ δ‖rt‖ for the FW direction dFW t , and by combining with ‖dt‖ ≤ M , we get a linear rate with constant 1 − μ L ( δ M ) 2 (this was the result from [12]).",
      "startOffset" : 282,
      "endOffset" : 286
    }, {
      "referenceID" : 1,
      "context" : "which is 2/ √ d when d is even, and 2/ √ d−1/d when d is odd [2] (see Appendix B.",
      "startOffset" : 61,
      "endOffset" : 64
    }, {
      "referenceID" : 14,
      "context" : "Here the linear dependence on d should not come as a surprise, in view of the known lower bound of 1/t for t ≤ d for Frank-Wolfe type methods [15].",
      "startOffset" : 142,
      "endOffset" : 146
    }, {
      "referenceID" : 3,
      "context" : "Building on the work of Beck and Shtern [4] and Wang and Lin [33], we can generalize our global linear convergence results for all Frank-Wolfe variants for the more general case where f(x) := g(Ax) + 〈b,x〉, for A ∈ Rp×d, b ∈ R and where g is μg-strongly convex and continuously differentiable over AM.",
      "startOffset" : 40,
      "endOffset" : 43
    }, {
      "referenceID" : 32,
      "context" : "Building on the work of Beck and Shtern [4] and Wang and Lin [33], we can generalize our global linear convergence results for all Frank-Wolfe variants for the more general case where f(x) := g(Ax) + 〈b,x〉, for A ∈ Rp×d, b ∈ R and where g is μg-strongly convex and continuously differentiable over AM.",
      "startOffset" : 61,
      "endOffset" : 65
    }, {
      "referenceID" : 15,
      "context" : "The approach used by [16] is formulated as a quadratic program (QP) over a flow polytope, the convex hull of paths in a network.",
      "startOffset" : 21,
      "endOffset" : 25
    }, {
      "referenceID" : 15,
      "context" : "For the LMOA, we re-use the code provided by [16] and their included aeroplane dataset resulting in a QP over 660 variables.",
      "startOffset" : 45,
      "endOffset" : 49
    }, {
      "referenceID" : 19,
      "context" : "Building on a preliminary version of our work [20], Beck and Shtern [4] also proved a linear rate for away-steps FW, but with a simpler lower bound for the LHS of (10) using linear duality arguments.",
      "startOffset" : 46,
      "endOffset" : 50
    }, {
      "referenceID" : 3,
      "context" : "Building on a preliminary version of our work [20], Beck and Shtern [4] also proved a linear rate for away-steps FW, but with a simpler lower bound for the LHS of (10) using linear duality arguments.",
      "startOffset" : 68,
      "endOffset" : 71
    }, {
      "referenceID" : 23,
      "context" : "Finally, the recently proposed generic scheme for accelerating first-order optimization methods in the sense of Nesterov from [24] applies directly to the FW variants given their global linear convergence rate that we proved.",
      "startOffset" : 126,
      "endOffset" : 130
    } ],
    "year" : 2015,
    "abstractText" : "The Frank-Wolfe (FW) optimization algorithm has lately re-gained popularity thanks in particular to its ability to nicely handle the structured constraints appearing in machine learning applications. However, its convergence rate is known to be slow (sublinear) when the solution lies at the boundary. A simple lessknown fix is to add the possibility to take ‘away steps’ during optimization, an operation that importantly does not require a feasibility oracle. In this paper, we highlight and clarify several variants of the Frank-Wolfe optimization algorithm that have been successfully applied in practice: away-steps FW, pairwise FW, fully-corrective FW and Wolfe’s minimum norm point algorithm, and prove for the first time that they all enjoy global linear convergence, under a weaker condition than strong convexity of the objective. The constant in the convergence rate has an elegant interpretation as the product of the (classical) condition number of the function with a novel geometric quantity that plays the role of a ‘condition number’ of the constraint set. We provide pointers to where these algorithms have made a difference in practice, in particular with the flow polytope, the marginal polytope and the base polytope for submodular optimization. The Frank-Wolfe algorithm [9] (also known as conditional gradient) is one of the earliest existing methods for constrained convex optimization, and has seen an impressive revival recently due to its nice properties compared to projected or proximal gradient methods, in particular for sparse optimization and machine learning applications. On the other hand, the classical projected gradient and proximal methods have been known to exhibit a very nice adaptive acceleration property, namely that the the convergence rate becomes linear for strongly convex objective, i.e. that the optimization error of the same algorithm after t iterations will decrease geometrically with O((1 − ρ)) instead of the usual O(1/t) for general convex objective functions. It has become an active research topic recently whether such an acceleration is also possible for Frank-Wolfe type methods. Contributions. We clarify several variants of the Frank-Wolfe algorithm and show that they all converge linearly for any strongly convex function optimized over a polytope domain, with a constant bounded away from zero that only depends on the geometry of the polytope. Our analysis does not depend on the location of the true optimum with respect to the domain, which was a disadvantage of earlier existing results such as [34, 12, 5], and the newer work of [28], as well as the line of work of [1, 19, 26] which rely on Robinson’s condition [30]. Our analysis yields a weaker sufficient condition than Robinson’s condition; in particular we can have linear convergence even in some cases when the function has more than one global minima, and is not globally strongly convex. The constant also naturally separates as the product of the condition number of the function with a novel notion of condition number of a polytope, which might have applications in complexity theory. Related Work. For the classical Frank-Wolfe algorithm, [5] showed a linear rate for the special case of quadratic objectives when the optimum is in the strict interior of the domain, a result already subsumed by the more general [12]. The early work of [23] showed linear convergence for strongly",
    "creator" : "LaTeX with hyperref package"
  }
}