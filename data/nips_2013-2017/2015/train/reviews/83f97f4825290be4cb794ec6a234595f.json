{"title": "Streaming Min-max Hypergraph Partitioning", "abstract": "In many applications, the data is of rich structure that can be represented by a hypergraph, where the data items are represented by vertices and the associations among items are represented by hyperedges. Equivalently, we are given an input bipartite graph with two types of vertices: items, and associations (which we refer to as topics). We consider the problem of partitioning the set of items into a given number of parts such that the maximum number of topics covered by a part of the partition is minimized. This is a natural clustering problem, with various applications, e.g. partitioning of a set of  information objects such as documents, images, and videos, and load balancing in the context of computation platforms.In this paper, we focus on the streaming computation model for this problem, in which items arrive online one at a time and each item must be assigned irrevocably to a part of the partition at its arrival time. Motivated by scalability requirements, we focus on the class of streaming computation algorithms with memory limited to be at most linear in the number of the parts of the partition. We show that a greedy assignment strategy is able to recover a hidden co-clustering of items under a natural set of recovery conditions. We also report results of an extensive empirical evaluation, which demonstrate that this greedy strategy yields superior performance when compared with alternative approaches.", "id": "83f97f4825290be4cb794ec6a234595f", "authors": ["Dan Alistarh", "Jennifer Iglesias", "Milan Vojnovic"], "conference": "NIPS2015", "accepted": true, "reviews": [{"comments": "This paper proposes a simple greedy strategy for the min-max hypergraph partitioning problem under the streaming model. This paper defines a stochastic model for generating the input hypergraph and show the sufficient conditions for the asymptotical recovery of the hidden clusters for the hypergraphs generated using this model.\n\nI think the paper studies an interesting and important problem. The proposed stochastic model for graph generation seems interesting and novel. I find it interesting to see that the min-max graph partitioning problem can be almost recovered under certain conditions of the graph.\n\n However, I am mostly concerned about how realistic the stochastic model for generating the graph is: does the hidden co-clustering assumption about how the data is generated realistic in practice? I hope to see more justification of why this model is natural for real-world applications.\n\n I think the authors should also cite a recent but very relevant paper below, which essentially considers the same problem of min-max graph partitioning and proposes an offline greedy algorithm very similar to the one proposed in this work. The offline greedy algorithm is claimed to run with time complexity of O(k|E|) , where k is the number of parts in the resulting partitioning and |E| is the number of edges in the bipartite graph. I am curious to see how the streaming greedy algorithm performs relative to the offline greedy algorithm empirically.\n\n Graph Partitioning via Parallel Submodular Approximation to Accelerate Distributed Machine Learning Mu Li, Dave G. Andersen, Alexander J. Smola, 2015\n\nhttp://arxiv.org/pdf/1505.04636.pdf\n\nMinor comments:\n\nLine 168-171: It seems that this part of paper is trying to claim that the random partitioning of the graph can yield bad performance, but all it shows is that the random partitioning gives a cost of (1-1/e)m, whereas it is unclear what the global optimal is.\n\nDescription of Alg 1 (Line 216-225): The notations used in Alg 1 are a bit confusing. At the beginning of Alg 1, S_i's are defined to be the assignment of the items, which makes me think that S_i should denote the set of items in block i. However, it seems that S_i is used to refer to the set of topics covered by the items in block i in the description of the algorithm. I find it quite confusing.\n\n  This paper proposes a simple greedy strategy for the min-max hypergraph partitioning problem under the streaming model. This paper defines a stochastic model for generating the input hypergraph and show the sufficient conditions for the asymptotical recovery of the hidden clusters.", "IS_ANNOTATED": false, "IS_META_REVIEW": false}, {"comments": "The paper proposes a new greedy method for streaming hypergraph clustering, with the goal of minimizing the maximum number of topics covered by a partitioning. The proposed algorithm is simple, and the authors prove the algorithm provably performs well under a balance assumption of the data, asymptotically uncovering the hidden partitioning. The algorithm is then compared against other simple algorithms on real data sets, which it outperforms in terms of normalized maximum load.\n\nIt is noted that the new techniques could not be compared against batch methods on real data sets due to their slow computational time. The experiment could be performed on smaller sets (or simply small subsets of the data sets used), and may be interesting (even though the new method cannot necessarily be expected to perform as well as batch techniques, it would be interesting to see what the gap is).\n\n Small typo: Double \"the\" on line 319.  The paper proposes a new greedy method for streaming hypergraph clustering, with the goal of minimizing the maximum number of topics covered by a partitioning, proving that it performs well under balance assumptions and demonstrating its efficacy in practice. This problem is typically studies in the batch setting, this makes a natural step and studies it in the streaming model, and the new method seems to work well.", "IS_ANNOTATED": false, "IS_META_REVIEW": false}, {"comments": "Overall, I liked the paper. The paper addresses an important problem, and has a nice balance of theoretical results and empirical ones. Some comments:\n\n1) The authors should mention that the problem they consider is a special case of submodular load balancing, studied in 'Submodular approximation: sampling-based algorithms and lower bounds' (Svitkina & Fleicher).\n\n2) The result about arbitrary partitions (Proposition 2) was known for general submodular functions (see, again the above reference). 3) Another related paper -- Graph Partitioning via Parallel Submodular Approximation to Accelerate Distributed Machine Learning (Mu Li et al) This paper studies the problem of Min-Max hyper-graph partitioning in a streaming setting. The authors observe that this problem is an instance of min-max subodular data partitioning, a problem also called the submodular load balancing problem. The authors show theoretical results, and demonstrate the algorithm on real world data.", "IS_ANNOTATED": false, "IS_META_REVIEW": false}], "histories": []}
