{
  "name" : "cfee398643cbc3dc5eefc89334cacdc1.pdf",
  "metadata" : {
    "source" : "META",
    "title" : "Recovering Communities in the General Stochastic Block Model Without Knowing the Parameters",
    "authors" : [ "Emmanuel Abbe", "Colin Sandon" ],
    "emails" : [ "eabbe@princeton.edu", "sandon@princeton.edu" ],
    "sections" : [ {
      "heading" : "1 Introduction",
      "text" : "This paper studies the problem of recovering communities in the general stochastic block model with linear size communities, for constant and logarithmic degree regimes. In contrast to [1], this paper does not require knowledge of the parameters. It shows how to learn these from the graph toplogy. We next provide some motivations on the problem and further background on the model.\nDetecting communities (or clusters) in graphs is a fundamental problem in networks, computer science and machine learning. This applies to a large variety of complex networks (e.g., social and biological networks) as well as to data sets engineered as networks via similarly graphs, where one often attempts to get a first impression on the data by trying to identify groups with similar behavior. In particular, finding communities allows one to find like-minded people in social networks, to improve recommendation systems, to segment or classify images, to detect protein complexes, to find genetically related sub-populations, or discover new tumor subclasses. See [1] for references.\nWhile a large variety of community detection algorithms have been deployed in the past decades, the understanding of the fundamental limits of community detection has only appeared more recently, in particular for the SBM [1–7]. The SBM is a canonical model for community detection. We use here the notation SBM(n, p,W ) to refer to a random graph ensemble on the vertex-set V = [n], where each vertex v ∈ V is assigned independently a hidden (or planted) label σv in [k] under a probability distribution p = (p1, . . . , pk) on [k], and each unordered pair of nodes (u, v) ∈ V × V is connected independently with probability Wσu,σv , where W is a symmetric k × k matrix with entries in [0, 1]. Note that G ∼ SBM(n, p,W ) denotes a random graph drawn under this model, without the hidden (or planted) clusters (i.e., the labels σv) revealed. The goal is to recover these labels by observing only the graph.\nRecently the SBM came back at the center of the attention at both the practical level, due to extensions allowing overlapping communities that have proved to fit well real data sets in massive networks [8], and at the theoretical level due to new phase transition phenomena [2–6]. The latter works focus exclusively on the SBM with two symmetric communities, i.e., each community is of the same size and the connectivity in each community is identical. Denoting by p the intra- and q the extra-cluster probabilities, most of the results are concerned with two figure of merits: (i) recovery (also called exact recovery or strong consistency), which investigates the regimes of p and q for which there exists an algorithm that recovers with high probability the two communities completely [7, 9–19], (ii) detection, which investigates the regimes for which there exists an algorithm that recovers with high probability a positively correlated partition [2–4].\nThe sharp threshold for exact recovery was obtained in [5, 6], showing1 that for p = a log(n)/n, q = b log(n)/n, a, b > 0, exact recovery is solvable if and only if | √ a − √ b| ≥ √ 2, with efficient algorithms achieving the threshold. In addition, [5] introduces an SDP, proved to achieve the threshold in [20, 21], while [22] shows that a spectral algorithm also achieves the threshold. The sharp threshold for detection was obtained in [3, 4], showing that detection is solvable (and so efficiently) if and only if (a− b)2 > 2(a+ b), when p = a/n, q = b/n, settling a conjecture from [2]. Besides the detection and the recovery properties, one may ask about the partial recovery of the communities, studied in [1, 19, 23–25]. Of particular interest to this paper is the case of strong recovery (also called weak consistency), where only a vanishing fraction of the nodes is allowed to be misclassified. For two-symmetric communities, [6] shows that strong recovery is possible if and only if n(p− q)2/(p+ q) diverges, extended in [1] for general SBMs. In the next section, we discuss the results for the general SBM of interest in this paper and the problem of learning the model parameters. We conclude this section by providing motivations on the problem of achieving the threshold with an efficient and universal algorithm.\nThreshold phenomena have long been studied in fields such as information theory (e.g., Shannon’s capacity) and constrained satisfaction problems (e.g., the SAT threshold). In particular, the quest of achieving the threshold has generated major algorithmic developments in these fields (e.g., LDPC codes, polar codes, survey propagation to name a few). Likewise, identifying thresholds in community detection models is key to benchmark and guide the development of clustering algorithms. However, it is particularly crucial to develop benchmarks that do not depend sensitively on the knowledge of the model parameters. A natural question is hence whether one can solve the various recovery problems in the SBM without having access to the parameters. This paper answers this question in the affirmative for the exact and strong recovery of the communities."
    }, {
      "heading" : "1.1 Prior results on the general SBM with known parameters",
      "text" : "Most of the previous works are concerned with the SBM having symmetric communities (mainly 2 or sometimes k), with the exception of [19] which provides the first general achievability results for the SBM.2 Recently, [1] studied fundamental limits for the general model SBM(n, p,W ), with p independent of n. The results are summarized below. Recall first the recovery requirements:\nDefinition 1. (Recovery requirements.) An algorithm recovers or detects communities in SBM(n, p,W ) with an accuracy of α ∈ [0, 1], if it outputs a labelling of the nodes {σ′(v), v ∈ V }, which agrees with the true labelling σ on a fraction α of the nodes with probability 1 − on(1). The agreement is maximized over relabellings of the communities. Strong recovery refers to α = 1− on(1) and exact recovery refers to α = 1.\nThe problem is solvable information-theoretically if there exists an algorithm that solves it, and efficiently if the algorithm runs in polynomial-time in n. Note that exact recovery in SBM(n, p,W ) requires the graph not to have vertices of degree 0 in multiple communities with high probability. Therefore, for exact recovery, we focus on W = ln(n)Q/n where Q is fixed.\nI. Partial and strong recovery in the general SBM. The first result of [1] concerns the regime where the connectivity matrix W scales as Q/n for a positive symmetric matrix Q (i.e., the node\n1 [6] generalizes this to a, b = Θ(1). 2 [24] also study variations of the k-symmetric model.\naverage degree is constant). The following notion of SNR is first introduced SNR = |λmin|2/λmax (1)\nwhere λmin and λmax are respectively the smallest3 and largest eigenvalues of diag(p)Q. The algorithm Sphere-comparison is proposed that solves partial recovery with exponential accuracy and quasi-linear complexity when the SNR diverges. Theorem 1. [1] Given any k ∈ Z, p ∈ (0, 1)k with |p| = 1, and symmetric matrix Q with no two rows equal, let λ be the largest eigenvalue of PQ, and λ′ be the eigenvalue of PQ with the smallest nonzero magnitude. If SNR := |λ\n′|2 λ > 4, λ 7 < (λ′)8, and 4λ3 < (λ′)4, for some ε = ε(λ, λ′) and C = C(p,Q) > 0, Sphere-comparison detects communities in graphs\ndrawn from SBM(n, p,Q/n) with accuracy 1 − 4ke− Cρ 16k /(1 − exp(− Cρ16k\n( (λ′)4 λ3 − 1 ) )), provided\nthat the above is larger than 1 − mini pi2 ln(4k) , and runs in O(n 1+ ) time. Moreover, ε can be made arbitrarily small with 8 ln(λ √ 2/|λ′|)/ ln(λ), and C(p, αQ) is independent of α.\nNote that for k symmetric clusters, SNR reduces to (a−b) 2\nk(a+(k−1)b) , which is the quantity of interest for detection [2, 26]. Moreover, the SNR must diverge to ensure strong recovery in the symmetric case [1]. The following is an important consequence of the previous theorem, stating that Sphere-comparison solves strong recovery when the entries of Q are amplified. Corollary 1. [1] For any k ∈ Z, p ∈ (0, 1)a with |p| = 1, and symmetric matrixQ with no two rows equal, there exist (c) = O(1/ ln(c)) such that for all sufficiently large c, Sphere-comparison detects communities in SBM(n, p, cQ/n) with accuracy 1− e−Ω(c) and complexity On(n1+ (c)).\nThe above gives the optimal scaling both in accuracy and complexity.\nII. Exact recovery in the general SBM. The second result in [1] is for the regime where the connectivity matrix scales as ln(n)Q/n, Q independent of n, where it is shown that exact recovery has a sharp threshold characterized by the divergence function\nD+(f, g) = max t∈[0,1] ∑ x∈[k] ( tf(x) + (1− t)g(x)− f(x)tg(x)1−t ) ,\nnamed the CH-divergence in [1]. Specifically, if all pairs of columns in diag(p)Q are atD+-distance at least 1 from each other, then exact recovery is solvable in the general SBM. We refer to Section 2.3 in [1] for discussion on the connection with Shannon’s channel coding theorem (and CH vs. KL divergence). An algorithm (Degree-profiling) is also developed in [1] that solves exact recovery down to theD+ limit in quasi-linear time, showing that exact recovery has no informational to computational gap. Theorem 2. [1] (i) Exact recovery is solvable in SBM(n, p, ln(n)Q/n) if and only if\nmin i,j∈[k],i6=j\nD+((PQ)i||(PQ)j) ≥ 1.\n(ii) The Degree-profiling algorithm (see [1]) solves exact recovery whenever it is information-theoretically solvable and runs in o(n1+ ) time for all > 0.\nExact and strong recovery are thus solved for the general SBM with linear-size communities, when the parameters are known. We next remove the latter assumption."
    }, {
      "heading" : "1.2 Estimating the parameters",
      "text" : "For the estimation of the parameters, some results are known for two-symmetric communities. In the logarithmic degree regime, since the SDP is agnostic to the parameters (it is a relaxation of the min-bisection), the parameters can be estimated by recovering the communities [5, 20, 21]. For the constant-degree regime, [26] shows that the parameters can be estimated above the threshold by counting cycles (which is efficiently approximated by counting non-backtracking walks). These are, however, for 2 communities. We also became aware of a parallel work [27], which considers private graphon estimation (including SBMs). In particular, for the logarithmic degree regime, [27] obtains a (non-efficient) procedure to estimate parameters of graphons in an appropriate version of the L2 norm. For the general SBM, learning the model was to date mainly open.\n3The smallest eigenvalue of diag(p)Q is the one with least magnitude."
    }, {
      "heading" : "2 Results",
      "text" : "Agnostic algorithms are developed for the constant and diverging node degrees (with p, k independent of n). These afford optimal accuracy and complexity scaling for large node degrees and achieve the CH-divergence limit for logarithmic node degrees. In particular, the SBM can be learned efficiently for any diverging degrees.\nNote that the assumptions on p and k being independent of n could be slightly relaxed, for example to slowly growing k, but we leave this for future work."
    }, {
      "heading" : "2.1 Partial recovery",
      "text" : "Our main result for partial recovery holds in the constant degree regime and requires a lower bound δ on the least relative size of the communities. This requirement is removed when working with diverging degrees, as stated in the corollary below. Theorem 3. Given δ > 0 and for any k ∈ Z, p ∈ (0, 1)k with ∑ pi = 1 and 0 < δ ≤ min pi, and any symmetric matrix Q with no two rows equal such that every entry in Qk is positive (in other words, Q such that there is a nonzero probability of a path between vertices in any two communities in a graph drawn from SBM(n, p,Q/n)), there exist (c) = O(1/ ln(c)) such that for all sufficiently large α, Agnostic-sphere-comparison detects communities in graphs drawn from SBM(n, p, αQ/n) with accuracy at least 1− e−Ω(α) in On(n1+ (α)) time.\nNote that a vertex in community i has degree 0 with probability exponential in c, and there is no way to differentiate between vertices of degree 0 from different communities. So, an error rate that decreases exponentially with c is optimal. In [28], we provide a more detailed version of this theorem, which yields a quantitate statement on the accuracy of the algorithm in terms of the SNR (λ′)2/λ for general SBM(n, p,Q/n). Corollary 2. If α = ω(1) in Theorem 3, the knowledge requirement on δ can be removed."
    }, {
      "heading" : "2.2 Exact recovery",
      "text" : "Recall that from [1], exact recovery is information-theoretically and computationally solvable in SBM(n, p, ln(n)Q/n) if and only if,\nmin i<j\nD+((PQ)i, (PQ)j) ≥ 1. (2)\nWe next show that this can be achieved without any knowledge on the parameters for SBM(n, p, ln(n)Q/n). Theorem 4. The Agnostic-degree-profiling algorithm (see Section 3.2) solves exact recovery in any SBM(n, p, ln(n)Q/n) for which exact recovery is solvable, using no input except the graph in question, and runs in o(n1+ ) time for all > 0. In particular, exact recovery is efficiently and universally solvable whenever it is information-theoretically solvable."
    }, {
      "heading" : "3 Proof Techniques and Algorithms",
      "text" : "3.1 Partial recovery and the Agnostic-sphere-comparison algorithm"
    }, {
      "heading" : "3.1.1 Simplified version of the algorithm for the symmetric case",
      "text" : "To ease the presentation of the algorithm, we focus first on the symmetric case, i.e., the SBM with k communities of relative size 1/k, probability of connecting an inside communities and b n across communities. Let d = (a+ (k − 1)b)/k be the average degree. Definition 2. For any vertex v, let Nr[G](v) be the set of all vertices with shortest path in G to v of length r. We often drop the subscript G if the graph in question is the original SBM. We also refer to N̄r(v) as the vector whose i-th entry is the number of vertices in Nr(v) that are in community i.\nFor an arbitrary vertex v and reasonably small r, there will be typically about dr vertices in Nr(v), and about (a−bk ) r more of them will be in v’s community than in each other community. Of course,\nthis only holds when r < log n/ log d because there are not enough vertices in the graph otherwise. The obvious way to try to determine whether or not two vertices v and v′ are in the same community is to guess that they are in the same community if |Nr(v) ∩Nr(v′)| > d2r/n and different communities otherwise. Unfortunately, whether or not a vertex is in Nr(v) is not independent of whether or not it is in Nr(v′), which compromises this plan. Instead, we propose to rely on the following graph-splitting step: Randomly assign every edge in G to some set E with a fixed probability c and then count the number of edges in E that connect Nr[G\\E] and Nr′[G\\E]. Formally:\nDefinition 3. For any v, v′ ∈ G, r, r′ ∈ Z, and subset of G’s edges E, let Nr,r′[E](v · v′) be the number of pairs (v1, v2) such that v1 ∈ Nr[G\\E](v), v2 ∈ Nr′[G\\E](v′), and (v1, v2) ∈ E.\nNote that E and G\\E are disjoint. However, in SBM(n, p,Q/n), G is sparse enough that even if the two graphs were generated independently, a given pair of vertices would have an edge in both graphs with probability O( 1n2 ). So, E is approximately independent of G\\E. Thus, given v, r, and denoting by λ1 = (a+ (k − 1)b)/k and λ2 = (a− b)/k the two eigvenvalues of PQ in the symmetric case, the expected number of intra-community neighbors at depth r from v is approximately 1k (λ r 1 + (k − 1)λr2), whereas the expected number of extra-community neighbors at depth r from v is approximately 1k (λ r 1 − λr2) for each of the other (k − 1) communities. All of these are scaled by 1− c if we do the computations in G\\E. Using now the emulated independence between E and G\\E, and assuming v and v′ to be in the same community, the expected number of edges in E connecting Nr[G\\E](v) to Nr′[G\\E](v′) is approximately given by the inner product ut(c · PQ)u, where u = 1k (λ r 1 + (k − 1)λr2, λr1 − λr2, . . . , λr1 − λr2) and (PQ) is the matrix with a on the diagonal and b elsewhere. When v and v′ are in different communities, the inner product is between u and a permutation of u. After simplifications, this gives\nNr,r′[E](v · v′) ≈ c(1− c)r+r′\nn\n[ dr+r ′+1 + ( a− b k )r+r′+1 (kδσv,σv′ − 1) ] (3)\nwhere δσv,σv′ is 1 if v and v ′ are in the same community and 0 otherwise. In order forNr,r′[E](v ·v′) to depend on the relative communities of v and v′, it must be that c(1− c)r+r′ |a−bk | r+r′+1k is large enough, i.e., more than n, so r + r′ needs to be at least log n/ log |a−bk |. A difficulty is that for a specific pair of vertices, the dr+r\n′+1 term will be multiplied by a random factor dependent on the degrees of v, v′, and the nearby vertices. So, in order to stop the variation in the dr+r ′+1 term from\ndrowning out the ( a−b k )r+r′+1 (kδσv,σv′ − 1) term, it is necessary to cancel out the dominant term. This brings us to introduce the following sign-invariant statistics:\nIr,r′[E](v · v′) := Nr+2,r′[E](v · v′) ·Nr,r′[E](v · v′)−N2r+1,r′[E](v · v ′)\n≈ c 2(1− c)2r+2r′+2 n2 · ( d− a− b k )2 · dr+r ′+1 ( a− b k )r+r′+1 (kδσv,σv′ − 1)\nIn particular, for r + r′ odd, Ir,r′[E](v · v′) will tend to be positive if v and v′ are in the same community and negative otherwise, irrespective of the specific values of a, b, k. That suggests the following algorithm for partial recovery, it requires knowledge of δ < 1/k in the constant degree regime, but not in the regime where a, b scale with n.\n1. Set r = 34 log n/ log d and put each of the graph’s edges in E with probability 1/10. 2. Set kmax = 1/δ and select kmax ln(4kmax) random vertices, v1, ..., vkmax ln(4kmax).\n3. Compute Ir,r′[E](vi · vj) for each i and j. 4. If there is a possible assignment of these vertices to communities such that Ir,r′[E](vi ·vj) >\n0 if and only if vi and vj are in the same community, then randomly select one vertex from each apparent community, v[1], v[2], ...v[k′]. Otherwise, fail.\n5. For every v′ in the graph, guess that v′ is in the same community as the v[i] that maximizes the value of Ir,r′[E](v[i] · v′).\nThis algorithm succeeds as long as |a − b|/k > (10/9)1/6((a + (k − 1)b)/k)5/6, to ensure that the above estimates on Nr,r′[E](v · v′) are reliable. Further, if a, b are scaled by α = ω(1), setting δ = 1/ log logα allows removal of the knowledge requirement on δ.\nOne alternative to our approach could be to count the non-backtracking walks of a given length between v and v′, like in [4,29], instead of using Nr,r′[E](v · v′). However, proving that the number of non-backtracking walks is close to its expected value is difficult. Proving that Nr,r′[E](v · v′) is within a desired range is substantially easier because for any v1 and v2, whether or not there is an edge between v1 and v2 directly effects Nr(v) for at most one value of r. Algorithms based on shortest path have also been studied in [30]."
    }, {
      "heading" : "3.1.2 The general case",
      "text" : "In the general case, define Nr(v), N̄r(v) and Nr,r′[E](v · v′) as in the previous section. Now, for any v1 ∈ Nr[G/E](v) and v2 ∈ Nr′[G/E](v′), (v1, v2) ∈ E with a probability of approximately cQσv1 ,σv2/n. As a result,\nNr,r′ [E](v · v′) ≈ N̄r[G\\E](v) · cQ\nn N̄r′[G\\E](v\n′) ≈ ((1− c)PQ)reσv · cQ\nn ((1− c)PQ)r\n′ eσv′\n= c(1− c)r+r ′ eσv ·Q(PQ)r+r ′ eσv′/n.\nLet λ1, ..., λh be the distinct eigenvalues of PQ, ordered so that |λ1| ≥ |λ2| ≥ ... ≥ |λh| ≥ 0. Also define h′ so that h′ = h if λh 6= 0 and h′ = h − 1 if λh = 0. If Wi is the eigenspace of PQ corresponding to the eigenvalue λi, and PWi is the projection operator on to Wi, then\nNr,r′[E](v · v′) ≈ c(1− c)r+r ′ eσv ·Q(PQ)r+r ′ eσv′/n (4)\n= c(1− c)r+r′\nn\n∑ i λr+r ′+1 i PWi(eσv ) · P −1PWi(eσv′ ) (5)\nwhere the final equality holds because for all i 6= j, λiPWi(eσv ) · P−1PWj (eσv′ ) = (PQPWi(eσv )) · P −1PWj (eσv′ )\n= PWi(eσv ) ·QPWj (eσv′ ) = PWi(eσv ) · P −1λjPWj (eσv′ ),\nand since λi 6= λj , this implies that PWi(eσv ) · P−1PWj (eσv′ ) = 0. Definition 4. Let ζi(v · v′) = PWi(eσv ) · P−1PWi(eσv′ ) for all i, v, and v ′.\nEquation (5) is dominated by the λr+r ′+1 1 term, so getting good estimate of the λ r+r′+1 2 through λr+r ′+1\nh′ terms requires cancelling it out somehow. As a start, if λ1 > λ2 > λ3 then\nNr+2,r′[E](v · v′) ·Nr,r′[E](v · v′)−N2r+1,r′[E](v · v ′)\n≈ c 2(1− c)2r+2r′+2\nn2 (λ21 + λ 2 2 − 2λ1λ2)λr+r\n′+1 1 λ r+r′+1 2 ζ1(v · v′)ζ2(v · v′)\nNote that the left hand side of this expression is equal to det ∣∣∣∣ Nr,r′[E](v · v′) Nr+1,r′[E](v · v′)Nr+1,r′[E](v · v′) Nr+2,r′[E](v · v′) ∣∣∣∣. Definition 5. Let Mm,r,r′[E](v · v′) be the m × m matrix such that Mm,r,r′[E](v · v′)i,j = Nr+i+j,r′[E](v · v′) for each i and j.\nAs shown in [28], there exists constant γ(λ1, ..., λm) such that\ndet(Mm,r,r′[E](v · v′)) ≈ cm(1− c)m(r+r′)\nnm γ(λ1, ..., λm) m∏ i=1 λr+r ′+1 i ζi(v · v ′) (6)\nwhere we assumed that |λm| > |λm+1| above to simplify the discussion (the case |λm| = |λm+1| is similar). This suggests the following plan for estimating the eigenvalues corresponding to a graph. First, pick several vertices at random. Then, use the fact that |Nr[G\\E](v)| ≈ ((1 − c)λ1)r for any good vertex v to estimate λ1. Next, take ratios of (6) for m and m − 1 (with r = r′), and look for the smallest m making that ratio small enough (this will use the estimate on λ1), estimating h′ by this value minus one. Then estimate consecutively all of PQ’s eigenvalues for each selected vertex using ratios of (6). Finally, take the median of these estimates."
    }, {
      "heading" : "In general, whether |λm| > |λm+1| or |λm| = |λm+1|,",
      "text" : "det(Mm,r+1,r′[E](v · v′))− (1− c)mλm+1 ∏m−1 i=1 λi det(Mm,r,r′[E](v · v′))\ndet(Mm−1,r+1,r′[E](v · v′))− (1− c)m−1λm ∏m−2 i=1 λi det(Mm−1,r,r′[E](v · v′))\n≈ c n γ(λ1, ..., λm) γ(λ1, ..., λm−1) λm−1(λm − λm+1) λm(λm−1 − λm) ((1− c)λm)r+r ′+2ζm(v · v′).\nThis fact can be used to approximate ζi(v · v′) for arbitrary v, v′, and i. Of course, this requires r and r′ to be large enough that c(1−c) r+r′\nn λ r+r′+1 i ζi(v · v′) is large relative to the error terms for all\ni ≤ h′. This requires at least |(1− c)λi|r+r ′+1 = ω(n) for all i ≤ h′. Moreover, for any v and v′,\n0 ≤ PWi(eσv − eσv′ ) · P −1PWi(eσv − eσv′ ) = ζi(v · v)− 2ζi(v · v ′) + ζi(v ′ · v′)\nwith equality for all i if and only if σv = σv′ , so sufficiently good approximations of ζi(v·v), ζi(v·v′) and ζi(v′ · v′) can be used to determine which pairs of vertices are in the same community. One could generate a reasonable classification based solely on this method of comparing vertices (with an appropriate choice of the parameters, as later detailed). However, that would require computing Nr,r′[E](v · v) for every vertex in the graph with fairly large r + r′, which would be slow. Instead, we use the fact that for any vertices v, v′, and v′′ with σv = σv′ 6= σv′′ ,\nζi(v ′ · v′)− 2ζi(v · v′) + ζi(v · v) = 0 ≤ ζi(v′′ · v′′)− 2ζi(v · v′′) + ζi(v · v)\nfor all i, and the inequality is strict for at least one i. So, subtracting ζi(v · v) from both sides, ζi(v\n′ · v′)− 2ζi(v · v′) ≤ ζi(v′′ · v′′)− 2ζi(v · v′′) for all i, and the inequality is still strict for at least one i. So, given a representative vertex in each community, we can determine which of them a given vertex, v, is in the same community as without needing to know the value of ζi(v · v). This runs fairly quickly if r is large and r′ is small because the algorithm only requires focusing on |Nr′(v′)| vertices. This leads to the following plan for partial recovery. First, randomly select a set of vertices that is large enough to contain at least one vertex from each community with high probability. Next, compare all of the selected vertices in an attempt to determine which of them are in the same communities. Then, pick one in each community. Call these anchor nodes. After that, use the algorithm referred to above to determine which community each of the remaining vertices is in. As long as there actually was at least one vertex from each community in the initial set and none of the approximations were particularly bad, this should give a reasonable classification. The risk that this randomly gives a bad classification due to a bad set of initial vertices can be mitigated by repeating the previous classification procedure several times as discussed in [28]. This completes the Agnostic-sphere-comparison algorithm. We refer to [28] for the details.\n3.2 Exact recovery and the Agnostic-degree-profiling algorithm\nThe exact recovery part is similar to [1] and uses the fact that once a good enough clustering has been obtained from Agnostic-sphere-comparison, the classification can be finished by making local improvements based on the node’s neighborhoods. Similar techniques have been used in [5, 11, 19, 31, 32]. However, we establish here a sharp characterization of the local procedure error.\nThe key result is that, when testing between two multivariate Poisson distributions of means log(n)λ1 and log(n)λ2 respectively, where λ1, λ2 ∈ Zk+, the probability of error (of maximum a posteriori decoding) is\nn−D+(λ1,λ2)+o(1). (7) This is proved in [1]. In the case of unknown parameters, the algorithmic approach is largely unchanged, adding a step where the best known classification is used to estimate p and Q prior to any local improvement step. The analysis of the algorithm requires however some careful handling.\nFirst, it is necessary to prove that given a labelling of the graph’s vertices with an error rate of x, one can compute approximations of p and Q that are within O(x+ log(n)/ √ n) of their true values with probability 1− o(1). Secondly, one needs to modify the above hypothesis testing estimates to control the error probability. In attempting to determine vertices’ communities based on estimates of p and Q that are off by at most δ, say p′ and Q′, one must show that a classification of its neighbors that has an error rate of δ classifies the vertices with an error rate only eO(δ logn) times higher than it would be if the parameter really were p′ and Q′ and the vertices’ neighbors were all classified correctly. Thirdly, one needs to show that since D+((PQ)i, (PQ)j) is differentiable with respect to any element of PQ, the error rate if the parameters really were p′ and Q′ is at worst eO(δ logn) as high as the error rate with the actual parameters. Combining these yields the conclusion that any errors in the estimates of the SBM’s parameters do not disrupt vertex classification any worse than the errors in the preliminary classifications already were.\nThe Agnostic-degree-profiling algorithm. The inputs are (G, γ), where G is a graph, and γ ∈ [0, 1] (see [28] for how to set γ specifically). The algorithm outputs each node’s label. (1) Define the graph g′ on the vertex set [n] by selecting each edge in g independently with probability γ, and define the graph g′′ that contains the edges in g that are not in g′. (2) Run Agnostic-sphere-comparison on g′ with δ = 1/ log log(n) to obtain the classification σ′ ∈ [k]n. (3) Determine the size of each alleged community, and the edge density between each pair of alleged communities. (4) For each node v ∈ [n], determine the most likely community label of node v based on its degree profile N̄1(v) computed from the preliminary classification σ′, and call it σ′′v . (5) Use σ′′v to get new estimates of p and Q. (6) For each node v ∈ [n], determine the most likely community label of node v based on its degree profile N̄1(v) computed from σ′′. Output this labelling.\nIn step (3) and (6), the most likely label is the one that maximizes the probability that the degree profile comes from a multivariate distribution of mean ln(n)(PQ)i for i ∈ [k]. Note that this algorithm does not require a lower bound on min pi because setting δ to a slowly decreasing function of n results in δ being within an acceptable range for all sufficiently large n."
    }, {
      "heading" : "4 Data implementation and open problems",
      "text" : "We tested a simplified version of our algorithm on real data (see [28]), for the blog network of Adamic and Glance ’05. We obtained an error rate of about 60/1222 (best trial was 57, worst 67), achieving the state-of-the-art (as described in [32]). The results in this paper should extend quite directly to a slowly growing number of communities (e.g., up to logarithmic). It would be interesting to extend the current approach to smaller sized or more communities, watching the complexity scaling, as well as to corrected-degrees, labeled-edges, or overlapping communities (though the approach in this paper already applies to linear-sized overlaps)."
    } ],
    "references" : [ {
      "title" : "Community detection in general stochastic block models: fundamental limits and efficient recovery algorithms",
      "author" : [ "E. Abbe", "C. Sandon" ],
      "venue" : "arXiv:1503.00609. To appear in FOCS15., March",
      "citeRegEx" : "1",
      "shortCiteRegEx" : null,
      "year" : 2015
    }, {
      "title" : "Asymptotic analysis of the stochastic block model for modular networks and its algorithmic applications",
      "author" : [ "A. Decelle", "F. Krzakala", "C. Moore", "L. Zdeborová" ],
      "venue" : "Phys. Rev. E, 84:066106, December",
      "citeRegEx" : "2",
      "shortCiteRegEx" : null,
      "year" : 2011
    }, {
      "title" : "Community detection thresholds and the weak Ramanujan property",
      "author" : [ "L. Massoulié" ],
      "venue" : "STOC 2014: 46th Annual Symposium on the Theory of Computing, pages 1–10, New York, United States, June",
      "citeRegEx" : "3",
      "shortCiteRegEx" : null,
      "year" : 2014
    }, {
      "title" : "A proof of the block model threshold conjecture",
      "author" : [ "E. Mossel", "J. Neeman", "A. Sly" ],
      "venue" : "Available online at arXiv:1311.4115 [math.PR], January",
      "citeRegEx" : "4",
      "shortCiteRegEx" : null,
      "year" : 2014
    }, {
      "title" : "Exact recovery in the stochastic block model",
      "author" : [ "E. Abbe", "A.S. Bandeira", "G. Hall" ],
      "venue" : "To appear in IEEE Transactions on Information Theory. Available at ArXiv:1405.3267, May",
      "citeRegEx" : "5",
      "shortCiteRegEx" : null,
      "year" : 2014
    }, {
      "title" : "Consistency thresholds for binary symmetric block models",
      "author" : [ "E. Mossel", "J. Neeman", "A. Sly" ],
      "venue" : "Arxiv:arXiv:1407.1591. To appear in STOC15., July",
      "citeRegEx" : "6",
      "shortCiteRegEx" : null,
      "year" : 2014
    }, {
      "title" : "Statistical-computational tradeoffs in planted problems and submatrix localization with a growing number of clusters and submatrices",
      "author" : [ "J. Xu Y. Chen" ],
      "venue" : null,
      "citeRegEx" : "7",
      "shortCiteRegEx" : "7",
      "year" : 2014
    }, {
      "title" : "Efficient discovery of overlapping communities in massive networks",
      "author" : [ "P.K. Gopalan", "D.M. Blei" ],
      "venue" : "Proceedings of the National Academy of Sciences,",
      "citeRegEx" : "8",
      "shortCiteRegEx" : null,
      "year" : 2013
    }, {
      "title" : "Stochastic blockmodels: First steps",
      "author" : [ "P.W. Holland", "K. Laskey", "S. Leinhardt" ],
      "venue" : "Social Networks, 5(2):109–137,",
      "citeRegEx" : "9",
      "shortCiteRegEx" : null,
      "year" : 1983
    }, {
      "title" : "Graph bisection algorithms with good average case behavior",
      "author" : [ "T.N. Bui", "S. Chaudhuri", "F.T. Leighton", "M. Sipser" ],
      "venue" : "Combinatorica, 7(2):171–191,",
      "citeRegEx" : "10",
      "shortCiteRegEx" : null,
      "year" : 1987
    }, {
      "title" : "The solution of some random NP-hard problems in polynomial expected time",
      "author" : [ "M.E. Dyer", "A.M. Frieze" ],
      "venue" : "Journal of Algorithms, 10(4):451 – 489,",
      "citeRegEx" : "11",
      "shortCiteRegEx" : null,
      "year" : 1989
    }, {
      "title" : "The metropolis algorithm for graph bisection",
      "author" : [ "Mark Jerrum", "Gregory B. Sorkin" ],
      "venue" : "Discrete Applied Mathematics,",
      "citeRegEx" : "12",
      "shortCiteRegEx" : "12",
      "year" : 1998
    }, {
      "title" : "Algorithms for graph partitioning on the planted partition model",
      "author" : [ "A. Condon", "R.M. Karp" ],
      "venue" : "Lecture Notes in Computer Science, 1671:221–232,",
      "citeRegEx" : "13",
      "shortCiteRegEx" : null,
      "year" : 1999
    }, {
      "title" : "Estimation and Prediction for Stochastic Blockmodels for Graphs with Latent Block Structure",
      "author" : [ "T.A.B. Snijders", "K. Nowicki" ],
      "venue" : "Journal of Classification, 14(1):75–100, January",
      "citeRegEx" : "14",
      "shortCiteRegEx" : null,
      "year" : 1997
    }, {
      "title" : "Spectral partitioning of random graphs",
      "author" : [ "F. McSherry" ],
      "venue" : "Foundations of Computer Science, 2001. Proceedings. 42nd IEEE Symposium on, pages 529–537,",
      "citeRegEx" : "15",
      "shortCiteRegEx" : null,
      "year" : 2001
    }, {
      "title" : "A nonparametric view of network models and newmangirvan and other modularities",
      "author" : [ "P.J. Bickel", "A. Chen" ],
      "venue" : "Proceedings of the National Academy of Sciences,",
      "citeRegEx" : "16",
      "shortCiteRegEx" : null,
      "year" : 2009
    }, {
      "title" : "Spectral clustering and the high-dimensional stochastic blockmodel",
      "author" : [ "K. Rohe", "S. Chatterjee", "B. Yu" ],
      "venue" : "The Annals of Statistics, 39(4):1878–1915, 08",
      "citeRegEx" : "17",
      "shortCiteRegEx" : null,
      "year" : 2011
    }, {
      "title" : "Stochastic blockmodels with a growing number of classes",
      "author" : [ "D.S. Choi", "P.J. Wolfe", "E.M. Airoldi" ],
      "venue" : "Biometrika, pages 1–12,",
      "citeRegEx" : "18",
      "shortCiteRegEx" : null,
      "year" : 2012
    }, {
      "title" : "A simple svd algorithm for finding hidden partitions",
      "author" : [ "V. Vu" ],
      "venue" : "Available online at arXiv:1404.3918,",
      "citeRegEx" : "19",
      "shortCiteRegEx" : null,
      "year" : 2014
    }, {
      "title" : "Achieving exact cluster recovery threshold via semidefinite programming",
      "author" : [ "J. Xu B. Hajek", "Y. Wu" ],
      "venue" : null,
      "citeRegEx" : "20",
      "shortCiteRegEx" : "20",
      "year" : 2014
    }, {
      "title" : "Random laplacian matrices and convex relaxations",
      "author" : [ "A.S. Bandeira" ],
      "venue" : "arXiv:1504.03987,",
      "citeRegEx" : "21",
      "shortCiteRegEx" : null,
      "year" : 2015
    }, {
      "title" : "Accurate community detection in the stochastic block model via spectral algorithms",
      "author" : [ "S. Yun", "A. Proutiere" ],
      "venue" : "arXiv:1412.7335, December",
      "citeRegEx" : "22",
      "shortCiteRegEx" : null,
      "year" : 2014
    }, {
      "title" : "Belief propagation, robust reconstruction, and optimal recovery of block models",
      "author" : [ "E. Mossel", "J. Neeman", "A. Sly" ],
      "venue" : "Arxiv:arXiv:1309.1380,",
      "citeRegEx" : "23",
      "shortCiteRegEx" : null,
      "year" : 2013
    }, {
      "title" : "Community detection in sparse networks via Grothendieck’s inequality",
      "author" : [ "O. Guédon", "R. Vershynin" ],
      "venue" : "ArXiv:1411.4686, November",
      "citeRegEx" : "24",
      "shortCiteRegEx" : null,
      "year" : 2014
    }, {
      "title" : "Stochastic block model and community detection in the sparse graphs: A spectral algorithm with optimal rate of recovery",
      "author" : [ "P. Chin", "A. Rao", "V. Vu" ],
      "venue" : "arXiv:1501.05021, January",
      "citeRegEx" : "25",
      "shortCiteRegEx" : null,
      "year" : 2015
    }, {
      "title" : "Stochastic block models and reconstruction",
      "author" : [ "E. Mossel", "J. Neeman", "A. Sly" ],
      "venue" : "Available online at arXiv:1202.1499 [math.PR],",
      "citeRegEx" : "26",
      "shortCiteRegEx" : null,
      "year" : 2012
    }, {
      "title" : "Private graphon estimation for sparse graphs",
      "author" : [ "C. Borgs", "J. Chayes", "A. Smith" ],
      "venue" : "preparation,",
      "citeRegEx" : "27",
      "shortCiteRegEx" : null,
      "year" : 2015
    }, {
      "title" : "Recovering communities in the general stochastic block model without knowing the parameters",
      "author" : [ "E. Abbe", "C. Sandon" ],
      "venue" : "arXiv:1506.03729, June",
      "citeRegEx" : "28",
      "shortCiteRegEx" : null,
      "year" : 2015
    }, {
      "title" : "Non-backtracking spectrum of random graphs: community detection and non-regular ramanujan graphs",
      "author" : [ "C. Bordenave", "M. Lelarge", "L. Massoulié" ],
      "venue" : "Available at arXiv:1501.06087,",
      "citeRegEx" : "29",
      "shortCiteRegEx" : null,
      "year" : 2015
    }, {
      "title" : "Community Detection in Networks using Graph Distance",
      "author" : [ "S. Bhattacharyya", "P.J. Bickel" ],
      "venue" : "ArXiv e-prints, January",
      "citeRegEx" : "30",
      "shortCiteRegEx" : null,
      "year" : 2014
    }, {
      "title" : "A spectral technique for coloring random 3-colorable graphs",
      "author" : [ "N. Alon", "N. Kahale" ],
      "venue" : "SIAM Journal on Computing, pages 346–355,",
      "citeRegEx" : "31",
      "shortCiteRegEx" : null,
      "year" : 1994
    }, {
      "title" : "Achieving optimal misclassification proportion in stochastic block model",
      "author" : [ "A.Y. Zhang H.H. Zhou C. Gao", "Z. Ma" ],
      "venue" : null,
      "citeRegEx" : "32",
      "shortCiteRegEx" : "32",
      "year" : 2015
    } ],
    "referenceMentions" : [ {
      "referenceID" : 0,
      "context" : "In contrast to [1], this paper does not require knowledge of the parameters.",
      "startOffset" : 15,
      "endOffset" : 18
    }, {
      "referenceID" : 7,
      "context" : "Recently the SBM came back at the center of the attention at both the practical level, due to extensions allowing overlapping communities that have proved to fit well real data sets in massive networks [8], and at the theoretical level due to new phase transition phenomena [2–6].",
      "startOffset" : 202,
      "endOffset" : 205
    }, {
      "referenceID" : 4,
      "context" : "The sharp threshold for exact recovery was obtained in [5, 6], showing1 that for p = a log(n)/n, q = b log(n)/n, a, b > 0, exact recovery is solvable if and only if | √ a − √ b| ≥ √ 2, with efficient algorithms achieving the threshold.",
      "startOffset" : 55,
      "endOffset" : 61
    }, {
      "referenceID" : 5,
      "context" : "The sharp threshold for exact recovery was obtained in [5, 6], showing1 that for p = a log(n)/n, q = b log(n)/n, a, b > 0, exact recovery is solvable if and only if | √ a − √ b| ≥ √ 2, with efficient algorithms achieving the threshold.",
      "startOffset" : 55,
      "endOffset" : 61
    }, {
      "referenceID" : 4,
      "context" : "In addition, [5] introduces an SDP, proved to achieve the threshold in [20, 21], while [22] shows that a spectral algorithm also achieves the threshold.",
      "startOffset" : 13,
      "endOffset" : 16
    }, {
      "referenceID" : 19,
      "context" : "In addition, [5] introduces an SDP, proved to achieve the threshold in [20, 21], while [22] shows that a spectral algorithm also achieves the threshold.",
      "startOffset" : 71,
      "endOffset" : 79
    }, {
      "referenceID" : 20,
      "context" : "In addition, [5] introduces an SDP, proved to achieve the threshold in [20, 21], while [22] shows that a spectral algorithm also achieves the threshold.",
      "startOffset" : 71,
      "endOffset" : 79
    }, {
      "referenceID" : 21,
      "context" : "In addition, [5] introduces an SDP, proved to achieve the threshold in [20, 21], while [22] shows that a spectral algorithm also achieves the threshold.",
      "startOffset" : 87,
      "endOffset" : 91
    }, {
      "referenceID" : 2,
      "context" : "The sharp threshold for detection was obtained in [3, 4], showing that detection is solvable (and so efficiently) if and only if (a− b)(2) > 2(a+ b), when p = a/n, q = b/n, settling a conjecture from [2].",
      "startOffset" : 50,
      "endOffset" : 56
    }, {
      "referenceID" : 3,
      "context" : "The sharp threshold for detection was obtained in [3, 4], showing that detection is solvable (and so efficiently) if and only if (a− b)(2) > 2(a+ b), when p = a/n, q = b/n, settling a conjecture from [2].",
      "startOffset" : 50,
      "endOffset" : 56
    }, {
      "referenceID" : 1,
      "context" : "The sharp threshold for detection was obtained in [3, 4], showing that detection is solvable (and so efficiently) if and only if (a− b)(2) > 2(a+ b), when p = a/n, q = b/n, settling a conjecture from [2].",
      "startOffset" : 200,
      "endOffset" : 203
    }, {
      "referenceID" : 5,
      "context" : "For two-symmetric communities, [6] shows that strong recovery is possible if and only if n(p− q)(2)/(p+ q) diverges, extended in [1] for general SBMs.",
      "startOffset" : 31,
      "endOffset" : 34
    }, {
      "referenceID" : 0,
      "context" : "For two-symmetric communities, [6] shows that strong recovery is possible if and only if n(p− q)(2)/(p+ q) diverges, extended in [1] for general SBMs.",
      "startOffset" : 129,
      "endOffset" : 132
    }, {
      "referenceID" : 18,
      "context" : "Most of the previous works are concerned with the SBM having symmetric communities (mainly 2 or sometimes k), with the exception of [19] which provides the first general achievability results for the SBM.",
      "startOffset" : 132,
      "endOffset" : 136
    }, {
      "referenceID" : 0,
      "context" : "2 Recently, [1] studied fundamental limits for the general model SBM(n, p,W ), with p independent of n.",
      "startOffset" : 12,
      "endOffset" : 15
    }, {
      "referenceID" : 0,
      "context" : "The first result of [1] concerns the regime where the connectivity matrix W scales as Q/n for a positive symmetric matrix Q (i.",
      "startOffset" : 20,
      "endOffset" : 23
    }, {
      "referenceID" : 5,
      "context" : "1 [6] generalizes this to a, b = Θ(1).",
      "startOffset" : 2,
      "endOffset" : 5
    }, {
      "referenceID" : 23,
      "context" : "2 [24] also study variations of the k-symmetric model.",
      "startOffset" : 2,
      "endOffset" : 6
    }, {
      "referenceID" : 0,
      "context" : "[1] Given any k ∈ Z, p ∈ (0, 1) with |p| = 1, and symmetric matrix Q with no two rows equal, let λ be the largest eigenvalue of PQ, and λ′ be the eigenvalue of PQ with the smallest nonzero magnitude.",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 1,
      "context" : "Note that for k symmetric clusters, SNR reduces to (a−b) 2 k(a+(k−1)b) , which is the quantity of interest for detection [2, 26].",
      "startOffset" : 121,
      "endOffset" : 128
    }, {
      "referenceID" : 25,
      "context" : "Note that for k symmetric clusters, SNR reduces to (a−b) 2 k(a+(k−1)b) , which is the quantity of interest for detection [2, 26].",
      "startOffset" : 121,
      "endOffset" : 128
    }, {
      "referenceID" : 0,
      "context" : "Moreover, the SNR must diverge to ensure strong recovery in the symmetric case [1].",
      "startOffset" : 79,
      "endOffset" : 82
    }, {
      "referenceID" : 0,
      "context" : "[1] For any k ∈ Z, p ∈ (0, 1) with |p| = 1, and symmetric matrixQ with no two rows equal, there exist (c) = O(1/ ln(c)) such that for all sufficiently large c, Sphere-comparison detects communities in SBM(n, p, cQ/n) with accuracy 1− e−Ω(c) and complexity On(n ).",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 0,
      "context" : "The second result in [1] is for the regime where the connectivity matrix scales as ln(n)Q/n, Q independent of n, where it is shown that exact recovery has a sharp threshold characterized by the divergence function",
      "startOffset" : 21,
      "endOffset" : 24
    }, {
      "referenceID" : 0,
      "context" : "3 in [1] for discussion on the connection with Shannon’s channel coding theorem (and CH vs.",
      "startOffset" : 5,
      "endOffset" : 8
    }, {
      "referenceID" : 0,
      "context" : "An algorithm (Degree-profiling) is also developed in [1] that solves exact recovery down to theD+ limit in quasi-linear time, showing that exact recovery has no informational to computational gap.",
      "startOffset" : 53,
      "endOffset" : 56
    }, {
      "referenceID" : 0,
      "context" : "[1] (i) Exact recovery is solvable in SBM(n, p, ln(n)Q/n) if and only if",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 0,
      "context" : "(ii) The Degree-profiling algorithm (see [1]) solves exact recovery whenever it is information-theoretically solvable and runs in o(n ) time for all > 0.",
      "startOffset" : 41,
      "endOffset" : 44
    }, {
      "referenceID" : 4,
      "context" : "In the logarithmic degree regime, since the SDP is agnostic to the parameters (it is a relaxation of the min-bisection), the parameters can be estimated by recovering the communities [5, 20, 21].",
      "startOffset" : 183,
      "endOffset" : 194
    }, {
      "referenceID" : 19,
      "context" : "In the logarithmic degree regime, since the SDP is agnostic to the parameters (it is a relaxation of the min-bisection), the parameters can be estimated by recovering the communities [5, 20, 21].",
      "startOffset" : 183,
      "endOffset" : 194
    }, {
      "referenceID" : 20,
      "context" : "In the logarithmic degree regime, since the SDP is agnostic to the parameters (it is a relaxation of the min-bisection), the parameters can be estimated by recovering the communities [5, 20, 21].",
      "startOffset" : 183,
      "endOffset" : 194
    }, {
      "referenceID" : 25,
      "context" : "For the constant-degree regime, [26] shows that the parameters can be estimated above the threshold by counting cycles (which is efficiently approximated by counting non-backtracking walks).",
      "startOffset" : 32,
      "endOffset" : 36
    }, {
      "referenceID" : 26,
      "context" : "We also became aware of a parallel work [27], which considers private graphon estimation (including SBMs).",
      "startOffset" : 40,
      "endOffset" : 44
    }, {
      "referenceID" : 26,
      "context" : "In particular, for the logarithmic degree regime, [27] obtains a (non-efficient) procedure to estimate parameters of graphons in an appropriate version of the L2 norm.",
      "startOffset" : 50,
      "endOffset" : 54
    }, {
      "referenceID" : 27,
      "context" : "In [28], we provide a more detailed version of this theorem, which yields a quantitate statement on the accuracy of the algorithm in terms of the SNR (λ′)2/λ for general SBM(n, p,Q/n).",
      "startOffset" : 3,
      "endOffset" : 7
    }, {
      "referenceID" : 0,
      "context" : "Recall that from [1], exact recovery is information-theoretically and computationally solvable in SBM(n, p, ln(n)Q/n) if and only if,",
      "startOffset" : 17,
      "endOffset" : 20
    }, {
      "referenceID" : 0,
      "context" : "If there is a possible assignment of these vertices to communities such that Ir,r′[E](vi ·vj) > 0 if and only if vi and vj are in the same community, then randomly select one vertex from each apparent community, v[1], v[2], .",
      "startOffset" : 213,
      "endOffset" : 216
    }, {
      "referenceID" : 1,
      "context" : "If there is a possible assignment of these vertices to communities such that Ir,r′[E](vi ·vj) > 0 if and only if vi and vj are in the same community, then randomly select one vertex from each apparent community, v[1], v[2], .",
      "startOffset" : 219,
      "endOffset" : 222
    }, {
      "referenceID" : 3,
      "context" : "One alternative to our approach could be to count the non-backtracking walks of a given length between v and v′, like in [4,29], instead of using Nr,r′[E](v · v′).",
      "startOffset" : 121,
      "endOffset" : 127
    }, {
      "referenceID" : 28,
      "context" : "One alternative to our approach could be to count the non-backtracking walks of a given length between v and v′, like in [4,29], instead of using Nr,r′[E](v · v′).",
      "startOffset" : 121,
      "endOffset" : 127
    }, {
      "referenceID" : 29,
      "context" : "Algorithms based on shortest path have also been studied in [30].",
      "startOffset" : 60,
      "endOffset" : 64
    }, {
      "referenceID" : 27,
      "context" : "As shown in [28], there exists constant γ(λ1, .",
      "startOffset" : 12,
      "endOffset" : 16
    }, {
      "referenceID" : 27,
      "context" : "The risk that this randomly gives a bad classification due to a bad set of initial vertices can be mitigated by repeating the previous classification procedure several times as discussed in [28].",
      "startOffset" : 190,
      "endOffset" : 194
    }, {
      "referenceID" : 0,
      "context" : "The exact recovery part is similar to [1] and uses the fact that once a good enough clustering has been obtained from Agnostic-sphere-comparison, the classification can be finished by making local improvements based on the node’s neighborhoods.",
      "startOffset" : 38,
      "endOffset" : 41
    }, {
      "referenceID" : 4,
      "context" : "Similar techniques have been used in [5, 11, 19, 31, 32].",
      "startOffset" : 37,
      "endOffset" : 56
    }, {
      "referenceID" : 10,
      "context" : "Similar techniques have been used in [5, 11, 19, 31, 32].",
      "startOffset" : 37,
      "endOffset" : 56
    }, {
      "referenceID" : 18,
      "context" : "Similar techniques have been used in [5, 11, 19, 31, 32].",
      "startOffset" : 37,
      "endOffset" : 56
    }, {
      "referenceID" : 30,
      "context" : "Similar techniques have been used in [5, 11, 19, 31, 32].",
      "startOffset" : 37,
      "endOffset" : 56
    }, {
      "referenceID" : 31,
      "context" : "Similar techniques have been used in [5, 11, 19, 31, 32].",
      "startOffset" : 37,
      "endOffset" : 56
    }, {
      "referenceID" : 27,
      "context" : "The inputs are (G, γ), where G is a graph, and γ ∈ [0, 1] (see [28] for how to set γ specifically).",
      "startOffset" : 63,
      "endOffset" : 67
    }, {
      "referenceID" : 27,
      "context" : "We tested a simplified version of our algorithm on real data (see [28]), for the blog network of Adamic and Glance ’05.",
      "startOffset" : 66,
      "endOffset" : 70
    }, {
      "referenceID" : 31,
      "context" : "We obtained an error rate of about 60/1222 (best trial was 57, worst 67), achieving the state-of-the-art (as described in [32]).",
      "startOffset" : 122,
      "endOffset" : 126
    } ],
    "year" : 2015,
    "abstractText" : "The stochastic block model (SBM) has recently gathered significant attention due to new threshold phenomena. However, most developments rely on the knowledge of the model parameters, or at least on the number of communities. This paper introduces efficient algorithms that do not require such knowledge and yet achieve the optimal information-theoretic tradeoffs identified in Abbe-Sandon ’15. In the constant degree regime, an algorithm is developed that requires only a lower-bound on the relative sizes of the communities and achieves the optimal accuracy scaling for large degrees. This lower-bound requirement is removed for the regime of diverging degrees. For the logarithmic degree regime, this is further enhanced into a fully agnostic algorithm that simultaneously learns the model parameters, achieves the optimal CH-limit for exact recovery, and runs in quasilinear time. These provide the first algorithms affording efficiency, universality and information-theoretic optimality for strong and weak consistency in the SBM.",
    "creator" : null
  }
}