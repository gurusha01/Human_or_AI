{
  "name" : "6974ce5ac660610b44d9b9fed0ff9548.pdf",
  "metadata" : {
    "source" : "META",
    "title" : "Rounding-based Moves for Metric Labeling",
    "authors" : [ "M. Pawan Kumar" ],
    "emails" : [ "pawan.kumar@ecp.fr" ],
    "sections" : [ {
      "heading" : "1 Introduction",
      "text" : "A Markov random field (MRF) is a graph whose vertices are random variables, and whose edges specify a neighborhood over the random variables. Each random variable can be assigned a value from a set of labels, resulting in a labeling of the MRF. The putative labelings of an MRF are quantitatively distinguished from each other by an energy function, which is the sum of potential functions that depend on the cliques of the graph. An important optimization problem associate with the MRF framework is energy minimization, that is, finding a labeling with the minimum energy.\nMetric labeling is a special case of energy minimization, which models several useful low-level vision tasks [3, 4, 18]. It is characterized by a finite, discrete label set and a metric distance function over the labels. The energy function in metric labeling consists of arbitrary unary potentials and pairwise potentials that are proportional to the distance between the labels assigned to them. The problem is known to be NP-hard [20]. Two popular approaches for metric labeling are: (i) movemaking algorithms [4, 8, 14, 15, 21], which iteratively improve the labeling by solving a minimum st-cut problem; and (ii) linear programming (LP) relaxation [5, 13, 17, 22], which is obtained by dropping the integral constraints in the corresponding integer programming formulation. Movemaking algorithms are very efficient due to the availability of fast minimum st-cut solvers [2] and are very popular in the computer vision community. In contrast, the LP relaxation is significantly slower, despite the development of specialized solvers [7, 9, 11, 12, 16, 19, 22, 23, 24, 25]. However, when used in conjunction with randomized rounding algorithms, the LP relaxation provides the best known polynomial-time theoretical guarantees for metric labeling [1, 5, 10].\nAt first sight, the difference between move-making algorithms and the LP relaxation appears to be the standard accuracy vs. speed trade-off. However, for some special cases of distance functions, it has been shown that appropriately designed move-making algorithms can match the theoretical guarantees of the LP relaxation [14, 15, 20]. In this paper, we extend this result for a large class of randomized rounding procedures, which we call parallel rounding. In particular we prove that for any arbitrary (semi-)metric distance function, there exist move-making algorithms that match the theoretical guarantees provided by parallel rounding. The proofs, the various corollaries of our\ntheorems (which cover all previously known guarantees) and our experimental results are deferred to the accompanying technical report."
    }, {
      "heading" : "2 Preliminaries",
      "text" : "Metric Labeling. The problem of metric labeling is defined over an undirected graph G = (X,E). The vertices X = {X1, X2, · · · , Xn} are random variables, and the edges E specify a neighborhood relationship over the random variables. Each random variable can be assigned a value from the label set L = {l1, l2, · · · , lh}. We assume that we are also provided with a metric distance function d : L× L → R+ over the labels.\nWe refer to an assignment of values to all the random variables as a labeling. In other words, a labeling is a vector x ∈ Ln, which specifies the label xa assigned to each random variable Xa. The hn different labelings are quantitatively distinguished from each other by an energy function Q(x), which is defined as follows:\nQ(x) = ∑\nXa∈X\nθa(xa) + ∑\n(Xa,Xb)∈E\nwabd(xa, xb).\nHere, the unary potentials θa(·) are arbitrary, and the edge weights wab are non-negative. Metric labeling requires us to find a labeling with the minimum energy. It is known to be NP-hard.\nMultiplicative Bound. As metric labeling plays a central role in low-level vision, several approximate algorithms have been proposed in the literature. A common theoretical measure of accuracy for an approximate algorithm is the multiplicative bound. In this work, we are interested in the multiplicative bound of an algorithm with respect to a distance function. Formally, given a distance function d, the multiplicative bound of an algorithm is said to be B if the following condition is satisfied for all possible values of unary potentials θa(·) and non-negative edge weights wab:\n∑\nXa∈X\nθa(x̂a) + ∑\n(Xa,Xb)∈E\nwabd(x̂a, x̂b) ≤ ∑\nXa∈X\nθa(x ∗ a) +B\n∑\n(Xa,Xb)∈E\nwabd(x ∗ a, x ∗ b). (1)\nHere, x̂ is the labeling estimated by the algorithm for the given values of unary potentials and edge weights, and x∗ is an optimal labeling. Multiplicative bounds are greater than or equal to 1, and are invariant to reparameterizations of the unary potentials. A multiplicative bound B is said to be tight if the above inequality holds as an equality for some value of unary potentials and edge weights.\nLinear Programming Relaxation. An overcomplete representation of a labeling can be specified using the following variables: (i) unary variables ya(i) ∈ {0, 1} for all Xa ∈ X and li ∈ L such that ya(i) = 1 if and only if Xa is assigned the label li; and (ii) pairwise variables yab(i, j) ∈ {0, 1} for all (Xa, Xb) ∈ E and li, lj ∈ L such that yab(i, j) = 1 if and only if Xa and Xb are assigned labels li and lj respectively. This allows us to formulate metric labeling as follows:\nmin y\n∑\nXa∈X\n∑\nli∈L\nθa(li)ya(i) + ∑\n(Xa,Xb)∈E\n∑\nli,lj∈L\nwabd(li, lj)yab(i, j),\ns.t. ∑\nli∈L\nya(i) = 1, ∀Xa ∈ X,\n∑\nlj∈L\nyab(i, j) = ya(i), ∀(Xa, Xb) ∈ E, li ∈ L,\n∑\nli∈L\nyab(i, j) = yb(j), ∀(Xa, Xb) ∈ E, lj ∈ L,\nya(i) ∈ {0, 1}, yab(i, j) ∈ {0, 1}, ∀Xa ∈ X, (Xa, Xb) ∈ E, li, lj ∈ L.\nBy relaxing the final set of constraints such that the optimization variables can take any value between 0 and 1 inclusive, we obtain a linear program (LP). The computational complexity of solving the LP relaxation is polynomial in the size of the problem.\nRounding Procedure. In order to prove theoretical guarantees of the LP relaxation, it is common to use a rounding procedure that can covert a feasible fractional solution y of the LP relaxation to a feasible integer solution ŷ of the integer linear program. Several rounding procedures have been\nproposed in the literature. In this work, we focus on the randomized parallel rounding procedures proposed in [5, 10]. These procedures have the property that, given a fractional solution y, the probability of assigning a label li ∈ L to a random variable Xa ∈ X is equal to ya(i), that is,\nPr(ŷa(i) = 1) = ya(i). (2)\nWe will describe the various rounding procedures in detail in sections 3-5. For now, we would like to note that our reason for focusing on the parallel rounding of [5, 10] is that they provide the best known polynomial-time theoretical guarantees for metric labeling. Specifically, we are interested in their approximation factor, which is defined next.\nApproximation Factor. Given a distance function d, the approximation factor for a rounding procedure is said to be F if the following condition is satisfied for all feasible fractional solutions y:\nE\n\n\n∑\nli,lj∈L\nd(li, lj)ŷa(i)ŷb(j)\n\n ≤ F ∑\nli,lj∈L\nd(li, lj)yab(i, j). (3)\nHere, ŷ refers to the integer solution, and the expectation is taken with respect to the randomized rounding procedure applied to the feasible solution y.\nGiven a rounding procedure with an approximation factor of F , an optimal fractional solution y∗ of the LP relaxation can be rounded to a labeling ŷ that satisfies the following condition:\nE\n\n\n∑\nXa∈X\n∑\nli∈L\nθa(li)ŷa(i) + ∑\n(Xa,Xb)∈E\n∑\nli,lj∈L\nwabd(li, lj)ŷa(i)ŷb(j)\n\n\n≤ ∑\nXa∈X\n∑\nli∈L\nθa(li)y ∗ a(i) + F\n∑\n(Xa,Xb)∈E\n∑\nli,lj∈L\nwabd(li, lj)y ∗ ab(i, j).\nThe above inequality follows directly from properties (2) and (3). Similar to multiplicative bounds, approximation factors are always greater than or equal to 1, and are invariant to reparameterizations of the unary potentials. An approximation factor F is said to be tight if the above inequality holds as an equality for some value of unary potentials and edge weights.\nSubmodular Energy Function. We will use the following important fact throughout this paper. Given an energy function defined using arbitrary unary potentials, non-negative edge weights and a submodular distance function, an optimal labeling can be computed in polynomial time by solving an equivalent minimum st-cut problem [6]. Recall that a submodular distance function d′ over a label set L = {l1, l2, · · · , lh} satisfies the following properties: (i) d\n′(li, lj) ≥ 0 for all li, lj ∈ L, and d′(li, lj) = 0 if and only if i = j; and (ii) d ′(li, lj) + d ′(li+1, lj+1) ≤ d ′(li, lj+1) + d ′(li+1, lj) for all li, lj ∈ L\\{lh} (where \\ refers to set difference)."
    }, {
      "heading" : "3 Complete Rounding and Complete Move",
      "text" : "We start with a simple rounding scheme, which we call complete rounding. While complete rounding is not very accurate, it would help illustrate the flavor of our results. We will subsequently consider its generalizations, which have been useful in obtaining the best-known approximation factors for various special cases of metric labeling.\nThe complete rounding procedure consists of a single stage where we use the set of all unary variables to obtain a labeling (as opposed to other rounding procedures discussed subsequently). Algorithm 1 describes its main steps. Intuitively, it treats the value of the unary variable ya(i) as the probability of assigning the label li to the random variable Xa. It obtains a labeling by sampling from all the distributions ya = [ya(i), ∀li ∈ L] simultaneously using the same random number.\nIt can be shown that using a different random number to sample the distributions ya and yb of two neighboring random variables (Xa, Xb) ∈ E results in an infinite approximation factor. For example, let ya(i) = yb(i) = 1/h for all li ∈ L, where h is the number of labels. The pairwise variables yab that minimize the energy function are yab(i, i) = 1/h and yab(i, j) = 0 when i 6= j. For the above feasible solution of the LP relaxation, the RHS of inequality (3) is 0 for any finite F , while the LHS of inequality (3) is strictly greater than 0 if h > 1. However, we will shortly show that using the same random number r for all random variables provides a finite approximation factor.\nAlgorithm 1 The complete rounding procedure.\ninput A feasible solution y of the LP relaxation. 1: Pick a real number r uniformly from [0, 1]. 2: for all Xa ∈ X do 3: Define Ya(0) = 0 and Ya(i) = ∑i j=1 ya(j) for all li ∈ L.\n4: Assign the label li ∈ L to the random variable Xa if Ya(i− 1) < r ≤ Ya(i). 5: end for\nWe now turn our attention to designing a move-making algorithm whose multiplicative bound matches the approximation factor of the complete rounding procedure. To this end, we modify the range expansion algorithm proposed in [15] for truncated convex pairwise potentials to a general (semi-)metric distance function. Our method, which we refer to as the complete move-making algorithm, considers all putative labels of all random variables, and provides an approximate solution in a single iteration. Algorithm 2 describes its two main steps. First, it computes a submodular overestimation of the given distance function by solving the following optimization problem:\nd = argmin d′ t (4) s.t. d′(li, lj) ≤ td(li, lj), ∀li, lj ∈ L,\nd′(li, lj) ≥ d(li, lj), ∀li, lj ∈ L, d′(li, lj) + d ′(li+1, lj+1) ≤ d ′(li, lj+1) + d ′(li+1, lj), ∀li, lj ∈ L\\{lh}.\nThe above problem minimizes the maximum ratio of the estimated distance to the original distance over all pairs of labels, that is, maxi 6=j d\n′(li, lj)/d(li, lj). We will refer to the optimal value of problem (4) as the submodular distortion of the distance function d. Second, it replaces the original distance function by the submodular overestimation and computes an approximate solution to the original metric labeling problem by solving a single minimum st-cut problem. Note that, unlike the range expansion algorithm [15] that uses the readily available submodular overestimation of a truncated convex distance (namely, the corresponding convex distance function), our approach estimates the submodular overestimation via the LP (4). Since the LP (4) can be solved for any arbitrary distance function, it makes complete move-making more generally applicable.\nAlgorithm 2 The complete move-making algorithm.\ninput Unary potentials θa(·), edge weights wab, distance function d. 1: Compute a submodular overestimation of d by solving problem (4). 2: Using the approach of [6], solve the following problem via an equivalent minimum st-cut prob-\nlem: x̂ = argmin\nx∈Ln\n∑\nXa∈X\nθa(xa) + ∑\n(Xa,Xb)∈E\nwabd(xa, xb).\nThe following theorem establishes the theoretical guarantees of the complete move-making algorithm and the complete rounding procedure.\nTheorem 1. The tight multiplicative bound of the complete move-making algorithm is equal to the submodular distortion of the distance function. Furthermore, the tight approximation factor of the complete rounding procedure is also equal to the submodular distortion of the distance function.\nIn terms of computational complexities, complete move-making is significantly faster than solving the LP relaxation. Specifically, given an MRF with n random variables and m edges, and a label set with h labels, the LP relaxation requires at least O(m3h3log(m2h3)) time, since it consists of O(mh2) optimization variables and O(mh) constraints. In contrast, complete move-making requires O(nmh3log(m)) time, since the graph constructed using the method of [6] consists of O(nh) nodes and O(mh2) arcs. Note that complete move-making also requires us to solve the linear program (4). However, since problem (4) is independent of the unary potentials and the edge weights, it only needs to be solved once beforehand in order to compute the approximate solution for any metric labeling problem defined using the distance function d."
    }, {
      "heading" : "4 Interval Rounding and Interval Moves",
      "text" : "Theorem 1 implies that the approximation factor of the complete rounding procedure is very large for distance functions that are highly non-submodular. For example, consider the truncated linear distance function defined as follows over a label set L = {l1, l2, · · · , lh}:\nd(li, lj) = min{|i− j|,M}.\nHere, M is a user specified parameter that determines the maximum distance. The tightest submodular overestimation of the above distance function is the linear distance function, that is, d(li, lj) = |i − j|. This implies that the submodular distortion of the truncated linear metric is (h − 1)/M , and therefore, the approximation factor for the complete rounding procedure is also (h− 1)/M . In order to avoid this large approximation factor, Chekuri et al. [5] proposed an interval rounding procedure, which captures the intuition that it is beneficial to assign similar labels to as many random variables as possible.\nAlgorithm 3 provides a description of interval rounding. The rounding procedure chooses an interval of at most q consecutive labels (step 2). It generates a random number r (step 3), and uses it to attempt to assign labels to previously unlabeled random variables from the selected interval (steps 4-7). It can be shown that the overall procedure converges in a polynomial number of iterations with a probability of 1 [5]. Note that if we fix q = h and z = 1, interval rounding becomes equivalent to complete rounding. However, the analyses in [5, 10] shows that other values of q provide better approximation factors for various special cases.\nAlgorithm 3 The interval rounding procedure.\ninput A feasible solution y of the LP relaxation. 1: repeat 2: Pick an integer z uniformly from [−q + 2, h]. Define an interval of labels I = {ls, · · · , le},\nwhere s = max{z, 1} is the start index and e = min{z + q − 1, h} is the end index. 3: Pick a real number r uniformly from [0, 1]. 4: for all Unlabeled random variables Xa do 5: Define Ya(0) = 0 and Ya(i) = ∑s+i−1 j=s ya(j) for all i ∈ {1, · · · , e− s+ 1}. 6: Assign the label ls+i−1 ∈ I to the Xa if Ya(i− 1) < r ≤ Ya(i). 7: end for 8: until All random variables have been assigned a label.\nOur goal is to design a move-making algorithm whose multiplicative bound matches the approximation factor of interval rounding for any choice of q. To this end, we propose the interval move-making algorithm that generalizes the range expansion algorithm [15], originally proposed for truncated convex distances, to arbitrary distance functions. Algorithm 4 provides its main steps. The central idea of the method is to improve a given labeling x̂ by allowing each random variable Xa to either retain its current label x̂a or to choose a new label from an interval of consecutive labels. In more detail, let I = {ls, · · · , le} ⊆ L be an interval of labels of length at most q (step 4). For the sake of simplicity, let us assume that x̂a /∈ I for any random variable Xa. We define Ia = I ⋃\n{x̂a} (step 5). For each pair of neighboring random variables (Xa, Xb) ∈ E, we compute a submodular distance function dx̂a,x̂b : Ia × Ib → R + by solving the following linear program (step 6):\ndx̂a,x̂b = argmin d′ t (5)\ns.t. d′(li, lj) ≤ td(li, lj), ∀li ∈ Ia, lj ∈ Ib,\nd′(li, lj) ≥ d(li, lj), ∀li ∈ Ia, lj ∈ Ib, d′(li, lj) + d ′(li+1, lj+1) ≤ d ′(li, lj+1) + d ′(li+1, lj), ∀li, lj ∈ I\\{le}, d′(li, le) + d ′(li+1, x̂b) ≤ d ′(li, x̂b) + d ′(li+1, le), ∀li ∈ I\\{le}, d′(le, lj) + d ′(x̂a, lj+1) ≤ d ′(le, lj+1) + d ′(x̂a, lj), ∀lj ∈ I\\{le}, d′(le, le) + d(x̂a, x̂b) ≤ d ′(le, x̂b) + d ′(x̂a, le).\nSimilar to problem (4), the above problem minimizes the maximum ratio of the estimated distance to the original distance. However, instead of introducing constraints for all pairs of labels, it is only\nconsiders pairs of labels li and lj where li ∈ Ia and lj ∈ Ib. Furthermore, it does not modify the distance between the current labels x̂a and x̂b (as can be seen in the last constraint of problem (5)).\nGiven the submodular distance functions dx̂a,x̂b , we can compute a new labeling x by solving the following optimization problem via minimum st-cut using the method of [6] (step 7):\nx = argmin x\n∑\nXa∈X\nθa(xa) + ∑\n(Xa,Xb)∈E\nwabdx̂a,x̂b(xa, xb)\ns.t. xa ∈ Ia, ∀Xa ∈ X. (6)\nIf the energy of the new labeling x is less than that of the current labeling x̂, then we update our labeling to x (steps 8-10). Otherwise, we retain the current estimate of the labeling and consider another interval. The algorithm converges when the energy does not decrease for any interval of length at most q. Note that, once again, the main difference between interval move-making and the range expansion algorithm is the use of an appropriate optimization problem, namely the LP (5), to obtain a submodular overestimation of the given distance function. This allows us to use interval move-making for the general metric labeling problem, instead of focusing on only truncated convex models.\nAlgorithm 4 The interval move-making algorithm.\ninput Unary potentials θa(·), edge weights wab, distance function d, initial labeling x 0.\n1: Set current labeling to initial labeling, that is, x̂ = x0. 2: repeat 3: for all z ∈ [−q + 2, h] do 4: Define an interval of labels I = {ls, · · · , le}, where s = max{z, 1} is the start index and e = min{z + q − 1, h} is the end index. 5: Define Ia = I ⋃\n{x̂a} for all random variables Xa ∈ X. 6: Obtain submodular overestimates dx̂a,x̂b for each pair of neighboring random variables (Xa, Xb) ∈ E by solving problem (5). 7: Obtain a new labeling x by solving problem (6). 8: if Energy of x is less than energy of x̂ then 9: Update x̂ = x.\n10: end if 11: end for 12: until Energy cannot be decreased further.\nThe following theorem establishes the theoretical guarantees of the interval move-making algorithm and the interval rounding procedure.\nTheorem 2. The tight multiplicative bound of the interval move-making algorithm is equal to the tight approximation factor of the interval rounding procedure.\nAn interval move-making algorithm that uses an interval length of q runs for at most O(h/q) iterations. This follows from a simple modification of the result by Gupta and Tardos [8] (specifically, theorem 3.7). Hence, the total time complexity of interval move-making is O(nmhq2log(m)), since each iteration solves a minimum st-cut problem of a graph with O(nq) nodes and O(mq2) arcs. In other words, interval move-making is at most as computationally complex as complete move-making, which in turn is significantly less complex than solving the LP relaxation. Note that problem (5), which is required for interval move-making, is independent of the unary potentials and the edge weights. Hence, it only needs to be solved once beforehand for all pairs of labels (x̂a, x̂b) ∈ L × L in order to obtain a solution for any metric labeling problem defined using the distance function d."
    }, {
      "heading" : "5 Hierarchical Rounding and Hierarchical Moves",
      "text" : "We now consider the most general form of parallel rounding that has been proposed in the literature, namely the hierarchical rounding procedure [10]. The rounding relies on a hierarchical clustering of the labels. Formally, we denote a hierarchical clustering of m levels for the label set L by C = {C(i), i = 1, · · · ,m}. At each level i, the clustering C(i) = {C(i, j) ⊆ L, j = 1, · · · , hi} is\nmutually exclusive and collectively exhaustive, that is, ⋃\nj\nC(i, j) = L,C(i, j) ∩C(i, j′) = ∅, ∀j 6= j′.\nFurthermore, for each cluster C(i, j) at the level i > 2, there exists a unique cluster C(i− 1, j′) in the level i − 1 such that C(i, j) ⊆ C(i − 1, j′). We call the cluster C(i − 1, j′) the parent of the cluster C(i, j) and define p(i, j) = j′. Similarly, we call C(i, j) a child of C(i − 1, j′). Without loss of generality, we assume that there exists a single cluster at level 1 that contains all the labels, and that each cluster at level m contains a single label.\nAlgorithm 5 The hierarchical rounding procedure.\ninput A feasible solution y of the LP relaxation. 1: Define f1a = 1 for all Xa ∈ X. 2: for all i ∈ {2, · · · ,m} do 3: for all Xa ∈ X do 4: Define zia(j) for all j ∈ {1, · · · , h i} as follows:\nzia(j) =\n{ ∑\nk,lk∈C(i,j) ya(k) if p(i, j) = f i−1 a ,\n0 otherwise.\n5: Define yia(j) for all j ∈ {1, · · · , h i} as follows:\nyia(j) = zia(j)\n∑hi\nj′=1 z i a(j ′)\n6: end for 7: Using a rounding procedure (complete or interval) on yi = [yia(j), ∀Xa ∈ X, j ∈ {1, · · · , hi}], obtain an integer solution ŷi. 8: for all Xa ∈ X do 9: Let ka ∈ {1, · · · , h i} such that ŷi(ka) = 1. Define f i a = ka.\n10: end for 11: end for 12: for all Xa ∈ X do 13: Let lk be the unique label present in the cluster C(m, f m a ). Assign lk to Xa. 14: end for\nAlgorithm 5 describes the hierarchical rounding procedure. Given a clustering C, it proceeds in a top-down fashion through the hierarchy while assigning each random variable to a cluster in the current level. Let f ia be the index of the cluster assigned to the random variable Xa in the level i. In the first step, the rounding procedure assigns all the random variables to the unique cluster C(1, 1) (step 1). At each step i, it assigns each random variable to a unique cluster in the level i by computing a conditional probability distribution as follows. The conditional probability yia(j) of assigning the random variable Xa to the cluster C(i, j) is proportional to ∑\nlk∈C(i,j) ya(k) if\np(i, j) = f i−1a (steps 3-6). The conditional probability y i a(j) = 0 if p(i, j) 6= f i−1 a , that is, a random variable cannot be assigned to a cluster C(i, j) if it wasn’t assigned to its parent in the previous step. Using a rounding procedure (complete or interval) for yi, we obtain an assignment of random variables to the clusters at level i (step 7). Once such an assignment is obtained, the values f ia are computed for all random variables Xa (steps 8-10). At the end of step m, hierarchical rounding would have assigned each random variable to a unique cluster in the level m. Since each cluster at level m consists of a single label, this provides us with a labeling of the MRF (steps 12-14).\nOur goal is to design a move-making algorithm whose multiplicative bound matches the approximation factor of the hierarchical rounding procedure for any choice of hierarchical clustering C. To this end, we propose the hierarchical move-making algorithm, which extends the hierarchical graph cuts approach for hierarchically well-separated tree (HST) metrics proposed in [14]. Algorithm 6 provides its main steps. In contrast to hierarchical rounding, the move-making algorithm traverses the hierarchy in a bottom-up fashion while computing a labeling for each cluster in the current level. Let xi,j be the labeling corresponding to the cluster C(i, j). At the first step, when considering the level m of the clustering, all the random variables are assigned the same label. Specifically, xm,ja\nAlgorithm 6 The hierarchical move-making algorithm.\ninput Unary potentials θa(·), edge weights wab, distance function d. 1: for all j ∈ {1, · · · , h} do 2: Let lk be the unique label is the cluster C(m, j). Define x m,j a = lk for all Xa ∈ X.\n3: end for 4: for all i ∈ {2, · · · ,m} do 5: for all j ∈ {1, · · · , hm−i+1} do 6: Define Lm−i+1,ja = {x m−i+2,j′ a , p(m− i+ 2, j ′) = j, j′ ∈ {1, · · · , hm−i+2}}. 7: Using a move-making algorithm (complete or interval), compute the labeling xm−i+1,j\nunder the constraint xm−i+1,ja ∈ L m−i+1,j a .\n8: end for 9: end for\n10: The final solution is x1,1.\nis equal to the unique label contained in the cluster C(m, j) (steps 1-3). At step i, it computes the labeling xm−i+1,j for each cluster C(m− i+1, j) by using the labelings computed in the previous step. Specifically, it restricts the label assigned to a random variable Xa in the labeling x m−i+1,j to the subset of labels that were assigned to it by the labelings corresponding to the children of C(m − i + 1, j) (step 6). Under this restriction, the labeling xm−i+1,j is computed by approximately minimizing the energy using a move-making algorithm (step 7). Implicit in our description is the assumption that that we will use a move-making algorithm (complete or interval) in step 7 of Algorithm 6 whose multiplicative bound matches the approximation factor of the rounding procedure (complete or interval) used in step 7 of Algorithm 5. Note that, unlike the hierarchical graph cuts approach [14], the hierarchical move-making algorithm can be used for any arbitrary clustering and not just the one specified by an HST metric.\nThe following theorem establishes the theoretical guarantees of the hierarchical move-making algorithm and the hierarchical rounding procedure.\nTheorem 3. The tight multiplicative bound of the hierarchical move-making algorithm is equal to the tight approximation factor of the hierarchical rounding procedure.\nNote that hierarchical move-making solves a series of problems defined on a smaller label set. Since the complexity of complete and interval move-making is superlinear in the number of labels, it can be verified that the hierarchical move-making algorithm is at most as computationally complex as the complete move-making algorithm (corresponding to the case when the clustering consists of only one cluster that contains all the labels). Hence, hierarchical move-making is significantly faster than solving the LP relaxation."
    }, {
      "heading" : "6 Discussion",
      "text" : "For any general distance function that can be used to specify the (semi-)metric labeling problem, we proved that the approximation factor of a large family of parallel rounding procedures is matched by the multiplicative bound of move-making algorithms. This generalizes previously known results on the guarantees of move-making algorithms in two ways: (i) in contrast to previous results [14, 15, 20] that focused on special cases of distance functions, our results are applicable to arbitrary semi-metric distance functions; and (ii) the guarantees provided by our theorems are tight. Our experiments (described in the technical report) confirm that the rounding-based move-making algorithms provide similar accuracy to the LP relaxation, while being significantly faster due to the use of efficient minimum st-cut solvers.\nSeveral natural questions arise. What is the exact characterization of the rounding procedures for which it is possible to design matching move-making algorithms? Can we design rounding-based move-making algorithms for other combinatorial optimization problems? Answering these questions will not only expand our theoretical understanding, but also result in the development of efficient and accurate algorithms.\nAcknowledgements. This work is funded by the European Research Council under the European Community’s Seventh Framework Programme (FP7/2007-2013)/ERC Grant agreement number 259112."
    } ],
    "references" : [ {
      "title" : "Approximate classification via earthmover metrics",
      "author" : [ "A. Archer", "J. Fakcharoenphol", "C. Harrelson", "R. Krauthgamer", "K. Talvar", "E. Tardos" ],
      "venue" : "In SODA,",
      "citeRegEx" : "1",
      "shortCiteRegEx" : "1",
      "year" : 2004
    }, {
      "title" : "An experimental comparison of min-cut/max-flow algorithms for energy minimization in vision",
      "author" : [ "Y. Boykov", "V. Kolmogorov" ],
      "venue" : null,
      "citeRegEx" : "2",
      "shortCiteRegEx" : "2",
      "year" : 2004
    }, {
      "title" : "Markov random fields with efficient approximations",
      "author" : [ "Y. Boykov", "O. Veksler", "R. Zabih" ],
      "venue" : "In CVPR,",
      "citeRegEx" : "3",
      "shortCiteRegEx" : "3",
      "year" : 1998
    }, {
      "title" : "Fast approximate energy minimization via graph cuts",
      "author" : [ "Y. Boykov", "O. Veksler", "R. Zabih" ],
      "venue" : "In ICCV,",
      "citeRegEx" : "4",
      "shortCiteRegEx" : "4",
      "year" : 1999
    }, {
      "title" : "Approximation algorithms for the metric labeling problem via a new linear programming formulation",
      "author" : [ "C. Chekuri", "S. Khanna", "J. Naor", "L. Zosin" ],
      "venue" : "In SODA,",
      "citeRegEx" : "5",
      "shortCiteRegEx" : "5",
      "year" : 2001
    }, {
      "title" : "Transforming an arbitrary minsum problem into a binary one",
      "author" : [ "B. Flach", "D. Schlesinger" ],
      "venue" : "Technical report, TU Dresden,",
      "citeRegEx" : "6",
      "shortCiteRegEx" : "6",
      "year" : 2006
    }, {
      "title" : "Fixing max-product: Convergent message passing algorithms for MAP LP-relaxations",
      "author" : [ "A. Globerson", "T. Jaakkola" ],
      "venue" : "In NIPS,",
      "citeRegEx" : "7",
      "shortCiteRegEx" : "7",
      "year" : 2007
    }, {
      "title" : "A constant factor approximation algorithm for a class of classification problems",
      "author" : [ "A. Gupta", "E. Tardos" ],
      "venue" : "In STOC,",
      "citeRegEx" : "8",
      "shortCiteRegEx" : "8",
      "year" : 2000
    }, {
      "title" : "Convergent message-passing algorithms for inference over general graphs with convex free energy",
      "author" : [ "T. Hazan", "A. Shashua" ],
      "venue" : "In UAI,",
      "citeRegEx" : "9",
      "shortCiteRegEx" : "9",
      "year" : 2008
    }, {
      "title" : "Approximation algorithms for classification problems with pairwise relationships: Metric labeling and Markov random fields",
      "author" : [ "J. Kleinberg", "E. Tardos" ],
      "venue" : "In STOC,",
      "citeRegEx" : "10",
      "shortCiteRegEx" : "10",
      "year" : 1999
    }, {
      "title" : "Convergent tree-reweighted message passing for energy minimization",
      "author" : [ "V. Kolmogorov" ],
      "venue" : null,
      "citeRegEx" : "11",
      "shortCiteRegEx" : "11",
      "year" : 2006
    }, {
      "title" : "MRF optimization via dual decomposition: Message-passing revisited",
      "author" : [ "N. Komodakis", "N. Paragios", "G. Tziritas" ],
      "venue" : "In ICCV,",
      "citeRegEx" : "12",
      "shortCiteRegEx" : "12",
      "year" : 2007
    }, {
      "title" : "The partial constraint satisfaction problem: Facets and lifting theorems",
      "author" : [ "A. Koster", "C. van Hoesel", "A. Kolen" ],
      "venue" : "Operations Research Letters,",
      "citeRegEx" : "13",
      "shortCiteRegEx" : "13",
      "year" : 1998
    }, {
      "title" : "MAP estimation of semi-metric MRFs via hierarchical graph cuts",
      "author" : [ "M.P. Kumar", "D. Koller" ],
      "venue" : "In UAI,",
      "citeRegEx" : "14",
      "shortCiteRegEx" : "14",
      "year" : 2009
    }, {
      "title" : "Improved moves for truncated convex models",
      "author" : [ "M.P. Kumar", "P. Torr" ],
      "venue" : "In NIPS,",
      "citeRegEx" : "15",
      "shortCiteRegEx" : "15",
      "year" : 2008
    }, {
      "title" : "Message-passing for graph-structured linear programs: Proximal projections, convergence and rounding schemes",
      "author" : [ "P. Ravikumar", "A. Agarwal", "M. Wainwright" ],
      "venue" : "In ICML,",
      "citeRegEx" : "16",
      "shortCiteRegEx" : "16",
      "year" : 2008
    }, {
      "title" : "Syntactic analysis of two-dimensional visual signals in noisy conditions",
      "author" : [ "M. Schlesinger" ],
      "venue" : "Kibernetika,",
      "citeRegEx" : "17",
      "shortCiteRegEx" : "17",
      "year" : 1976
    }, {
      "title" : "A comparative study of energy minimization methods for Markov random fields with smoothness-based priors",
      "author" : [ "R. Szeliski", "R. Zabih", "D. Scharstein", "O. Veksler", "V. Kolmogorov", "A. Agarwala", "M. Tappen", "C. Rother" ],
      "venue" : null,
      "citeRegEx" : "18",
      "shortCiteRegEx" : "18",
      "year" : 2008
    }, {
      "title" : "Dynamic tree block coordinate ascent",
      "author" : [ "D. Tarlow", "D. Batra", "P. Kohli", "V. Kolmogorov" ],
      "venue" : "In ICML,",
      "citeRegEx" : "19",
      "shortCiteRegEx" : "19",
      "year" : 2011
    }, {
      "title" : "Efficient graph-based energy minimization methods in computer vision",
      "author" : [ "O. Veksler" ],
      "venue" : "PhD thesis, Cornell University,",
      "citeRegEx" : "20",
      "shortCiteRegEx" : "20",
      "year" : 1999
    }, {
      "title" : "Graph cut based optimization for MRFs with truncated convex priors",
      "author" : [ "O. Veksler" ],
      "venue" : "In CVPR,",
      "citeRegEx" : "21",
      "shortCiteRegEx" : "21",
      "year" : 2007
    }, {
      "title" : "MAP estimation via agreement on trees: Message passing and linear programming",
      "author" : [ "M. Wainwright", "T. Jaakkola", "A. Willsky" ],
      "venue" : "Transactions on Information Theory,",
      "citeRegEx" : "22",
      "shortCiteRegEx" : "22",
      "year" : 2005
    }, {
      "title" : "MAP estimation, linear programming and belief propagation with convex free energies",
      "author" : [ "Y. Weiss", "C. Yanover", "T. Meltzer" ],
      "venue" : "In UAI,",
      "citeRegEx" : "23",
      "shortCiteRegEx" : "23",
      "year" : 2007
    }, {
      "title" : "A linear programming approach to max-sum problem: A review",
      "author" : [ "T. Werner" ],
      "venue" : null,
      "citeRegEx" : "24",
      "shortCiteRegEx" : "24",
      "year" : 2007
    }, {
      "title" : "Revisting the linear programming relaxation approach to Gibbs energy minimization and weighted constraint satisfaction",
      "author" : [ "T. Werner" ],
      "venue" : null,
      "citeRegEx" : "25",
      "shortCiteRegEx" : "25",
      "year" : 2010
    } ],
    "referenceMentions" : [ {
      "referenceID" : 2,
      "context" : "Metric labeling is a special case of energy minimization, which models several useful low-level vision tasks [3, 4, 18].",
      "startOffset" : 109,
      "endOffset" : 119
    }, {
      "referenceID" : 3,
      "context" : "Metric labeling is a special case of energy minimization, which models several useful low-level vision tasks [3, 4, 18].",
      "startOffset" : 109,
      "endOffset" : 119
    }, {
      "referenceID" : 17,
      "context" : "Metric labeling is a special case of energy minimization, which models several useful low-level vision tasks [3, 4, 18].",
      "startOffset" : 109,
      "endOffset" : 119
    }, {
      "referenceID" : 19,
      "context" : "The problem is known to be NP-hard [20].",
      "startOffset" : 35,
      "endOffset" : 39
    }, {
      "referenceID" : 3,
      "context" : "Two popular approaches for metric labeling are: (i) movemaking algorithms [4, 8, 14, 15, 21], which iteratively improve the labeling by solving a minimum st-cut problem; and (ii) linear programming (LP) relaxation [5, 13, 17, 22], which is obtained by dropping the integral constraints in the corresponding integer programming formulation.",
      "startOffset" : 74,
      "endOffset" : 92
    }, {
      "referenceID" : 7,
      "context" : "Two popular approaches for metric labeling are: (i) movemaking algorithms [4, 8, 14, 15, 21], which iteratively improve the labeling by solving a minimum st-cut problem; and (ii) linear programming (LP) relaxation [5, 13, 17, 22], which is obtained by dropping the integral constraints in the corresponding integer programming formulation.",
      "startOffset" : 74,
      "endOffset" : 92
    }, {
      "referenceID" : 13,
      "context" : "Two popular approaches for metric labeling are: (i) movemaking algorithms [4, 8, 14, 15, 21], which iteratively improve the labeling by solving a minimum st-cut problem; and (ii) linear programming (LP) relaxation [5, 13, 17, 22], which is obtained by dropping the integral constraints in the corresponding integer programming formulation.",
      "startOffset" : 74,
      "endOffset" : 92
    }, {
      "referenceID" : 14,
      "context" : "Two popular approaches for metric labeling are: (i) movemaking algorithms [4, 8, 14, 15, 21], which iteratively improve the labeling by solving a minimum st-cut problem; and (ii) linear programming (LP) relaxation [5, 13, 17, 22], which is obtained by dropping the integral constraints in the corresponding integer programming formulation.",
      "startOffset" : 74,
      "endOffset" : 92
    }, {
      "referenceID" : 20,
      "context" : "Two popular approaches for metric labeling are: (i) movemaking algorithms [4, 8, 14, 15, 21], which iteratively improve the labeling by solving a minimum st-cut problem; and (ii) linear programming (LP) relaxation [5, 13, 17, 22], which is obtained by dropping the integral constraints in the corresponding integer programming formulation.",
      "startOffset" : 74,
      "endOffset" : 92
    }, {
      "referenceID" : 4,
      "context" : "Two popular approaches for metric labeling are: (i) movemaking algorithms [4, 8, 14, 15, 21], which iteratively improve the labeling by solving a minimum st-cut problem; and (ii) linear programming (LP) relaxation [5, 13, 17, 22], which is obtained by dropping the integral constraints in the corresponding integer programming formulation.",
      "startOffset" : 214,
      "endOffset" : 229
    }, {
      "referenceID" : 12,
      "context" : "Two popular approaches for metric labeling are: (i) movemaking algorithms [4, 8, 14, 15, 21], which iteratively improve the labeling by solving a minimum st-cut problem; and (ii) linear programming (LP) relaxation [5, 13, 17, 22], which is obtained by dropping the integral constraints in the corresponding integer programming formulation.",
      "startOffset" : 214,
      "endOffset" : 229
    }, {
      "referenceID" : 16,
      "context" : "Two popular approaches for metric labeling are: (i) movemaking algorithms [4, 8, 14, 15, 21], which iteratively improve the labeling by solving a minimum st-cut problem; and (ii) linear programming (LP) relaxation [5, 13, 17, 22], which is obtained by dropping the integral constraints in the corresponding integer programming formulation.",
      "startOffset" : 214,
      "endOffset" : 229
    }, {
      "referenceID" : 21,
      "context" : "Two popular approaches for metric labeling are: (i) movemaking algorithms [4, 8, 14, 15, 21], which iteratively improve the labeling by solving a minimum st-cut problem; and (ii) linear programming (LP) relaxation [5, 13, 17, 22], which is obtained by dropping the integral constraints in the corresponding integer programming formulation.",
      "startOffset" : 214,
      "endOffset" : 229
    }, {
      "referenceID" : 1,
      "context" : "Movemaking algorithms are very efficient due to the availability of fast minimum st-cut solvers [2] and are very popular in the computer vision community.",
      "startOffset" : 96,
      "endOffset" : 99
    }, {
      "referenceID" : 6,
      "context" : "In contrast, the LP relaxation is significantly slower, despite the development of specialized solvers [7, 9, 11, 12, 16, 19, 22, 23, 24, 25].",
      "startOffset" : 103,
      "endOffset" : 141
    }, {
      "referenceID" : 8,
      "context" : "In contrast, the LP relaxation is significantly slower, despite the development of specialized solvers [7, 9, 11, 12, 16, 19, 22, 23, 24, 25].",
      "startOffset" : 103,
      "endOffset" : 141
    }, {
      "referenceID" : 10,
      "context" : "In contrast, the LP relaxation is significantly slower, despite the development of specialized solvers [7, 9, 11, 12, 16, 19, 22, 23, 24, 25].",
      "startOffset" : 103,
      "endOffset" : 141
    }, {
      "referenceID" : 11,
      "context" : "In contrast, the LP relaxation is significantly slower, despite the development of specialized solvers [7, 9, 11, 12, 16, 19, 22, 23, 24, 25].",
      "startOffset" : 103,
      "endOffset" : 141
    }, {
      "referenceID" : 15,
      "context" : "In contrast, the LP relaxation is significantly slower, despite the development of specialized solvers [7, 9, 11, 12, 16, 19, 22, 23, 24, 25].",
      "startOffset" : 103,
      "endOffset" : 141
    }, {
      "referenceID" : 18,
      "context" : "In contrast, the LP relaxation is significantly slower, despite the development of specialized solvers [7, 9, 11, 12, 16, 19, 22, 23, 24, 25].",
      "startOffset" : 103,
      "endOffset" : 141
    }, {
      "referenceID" : 21,
      "context" : "In contrast, the LP relaxation is significantly slower, despite the development of specialized solvers [7, 9, 11, 12, 16, 19, 22, 23, 24, 25].",
      "startOffset" : 103,
      "endOffset" : 141
    }, {
      "referenceID" : 22,
      "context" : "In contrast, the LP relaxation is significantly slower, despite the development of specialized solvers [7, 9, 11, 12, 16, 19, 22, 23, 24, 25].",
      "startOffset" : 103,
      "endOffset" : 141
    }, {
      "referenceID" : 23,
      "context" : "In contrast, the LP relaxation is significantly slower, despite the development of specialized solvers [7, 9, 11, 12, 16, 19, 22, 23, 24, 25].",
      "startOffset" : 103,
      "endOffset" : 141
    }, {
      "referenceID" : 24,
      "context" : "In contrast, the LP relaxation is significantly slower, despite the development of specialized solvers [7, 9, 11, 12, 16, 19, 22, 23, 24, 25].",
      "startOffset" : 103,
      "endOffset" : 141
    }, {
      "referenceID" : 0,
      "context" : "However, when used in conjunction with randomized rounding algorithms, the LP relaxation provides the best known polynomial-time theoretical guarantees for metric labeling [1, 5, 10].",
      "startOffset" : 172,
      "endOffset" : 182
    }, {
      "referenceID" : 4,
      "context" : "However, when used in conjunction with randomized rounding algorithms, the LP relaxation provides the best known polynomial-time theoretical guarantees for metric labeling [1, 5, 10].",
      "startOffset" : 172,
      "endOffset" : 182
    }, {
      "referenceID" : 9,
      "context" : "However, when used in conjunction with randomized rounding algorithms, the LP relaxation provides the best known polynomial-time theoretical guarantees for metric labeling [1, 5, 10].",
      "startOffset" : 172,
      "endOffset" : 182
    }, {
      "referenceID" : 13,
      "context" : "However, for some special cases of distance functions, it has been shown that appropriately designed move-making algorithms can match the theoretical guarantees of the LP relaxation [14, 15, 20].",
      "startOffset" : 182,
      "endOffset" : 194
    }, {
      "referenceID" : 14,
      "context" : "However, for some special cases of distance functions, it has been shown that appropriately designed move-making algorithms can match the theoretical guarantees of the LP relaxation [14, 15, 20].",
      "startOffset" : 182,
      "endOffset" : 194
    }, {
      "referenceID" : 19,
      "context" : "However, for some special cases of distance functions, it has been shown that appropriately designed move-making algorithms can match the theoretical guarantees of the LP relaxation [14, 15, 20].",
      "startOffset" : 182,
      "endOffset" : 194
    }, {
      "referenceID" : 4,
      "context" : "In this work, we focus on the randomized parallel rounding procedures proposed in [5, 10].",
      "startOffset" : 82,
      "endOffset" : 89
    }, {
      "referenceID" : 9,
      "context" : "In this work, we focus on the randomized parallel rounding procedures proposed in [5, 10].",
      "startOffset" : 82,
      "endOffset" : 89
    }, {
      "referenceID" : 4,
      "context" : "For now, we would like to note that our reason for focusing on the parallel rounding of [5, 10] is that they provide the best known polynomial-time theoretical guarantees for metric labeling.",
      "startOffset" : 88,
      "endOffset" : 95
    }, {
      "referenceID" : 9,
      "context" : "For now, we would like to note that our reason for focusing on the parallel rounding of [5, 10] is that they provide the best known polynomial-time theoretical guarantees for metric labeling.",
      "startOffset" : 88,
      "endOffset" : 95
    }, {
      "referenceID" : 5,
      "context" : "Given an energy function defined using arbitrary unary potentials, non-negative edge weights and a submodular distance function, an optimal labeling can be computed in polynomial time by solving an equivalent minimum st-cut problem [6].",
      "startOffset" : 232,
      "endOffset" : 235
    }, {
      "referenceID" : 14,
      "context" : "To this end, we modify the range expansion algorithm proposed in [15] for truncated convex pairwise potentials to a general (semi-)metric distance function.",
      "startOffset" : 65,
      "endOffset" : 69
    }, {
      "referenceID" : 14,
      "context" : "Note that, unlike the range expansion algorithm [15] that uses the readily available submodular overestimation of a truncated convex distance (namely, the corresponding convex distance function), our approach estimates the submodular overestimation via the LP (4).",
      "startOffset" : 48,
      "endOffset" : 52
    }, {
      "referenceID" : 5,
      "context" : "2: Using the approach of [6], solve the following problem via an equivalent minimum st-cut problem: x̂ = argmin x∈Ln ∑",
      "startOffset" : 25,
      "endOffset" : 28
    }, {
      "referenceID" : 5,
      "context" : "In contrast, complete move-making requires O(nmh(3)log(m)) time, since the graph constructed using the method of [6] consists of O(nh) nodes and O(mh(2)) arcs.",
      "startOffset" : 113,
      "endOffset" : 116
    }, {
      "referenceID" : 4,
      "context" : "[5] proposed an interval rounding procedure, which captures the intuition that it is beneficial to assign similar labels to as many random variables as possible.",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 4,
      "context" : "It can be shown that the overall procedure converges in a polynomial number of iterations with a probability of 1 [5].",
      "startOffset" : 114,
      "endOffset" : 117
    }, {
      "referenceID" : 4,
      "context" : "However, the analyses in [5, 10] shows that other values of q provide better approximation factors for various special cases.",
      "startOffset" : 25,
      "endOffset" : 32
    }, {
      "referenceID" : 9,
      "context" : "However, the analyses in [5, 10] shows that other values of q provide better approximation factors for various special cases.",
      "startOffset" : 25,
      "endOffset" : 32
    }, {
      "referenceID" : 14,
      "context" : "To this end, we propose the interval move-making algorithm that generalizes the range expansion algorithm [15], originally proposed for truncated convex distances, to arbitrary distance functions.",
      "startOffset" : 106,
      "endOffset" : 110
    }, {
      "referenceID" : 5,
      "context" : "Given the submodular distance functions dx̂a,x̂b , we can compute a new labeling x by solving the following optimization problem via minimum st-cut using the method of [6] (step 7):",
      "startOffset" : 168,
      "endOffset" : 171
    }, {
      "referenceID" : 7,
      "context" : "This follows from a simple modification of the result by Gupta and Tardos [8] (specifically, theorem 3.",
      "startOffset" : 74,
      "endOffset" : 77
    }, {
      "referenceID" : 9,
      "context" : "We now consider the most general form of parallel rounding that has been proposed in the literature, namely the hierarchical rounding procedure [10].",
      "startOffset" : 144,
      "endOffset" : 148
    }, {
      "referenceID" : 13,
      "context" : "To this end, we propose the hierarchical move-making algorithm, which extends the hierarchical graph cuts approach for hierarchically well-separated tree (HST) metrics proposed in [14].",
      "startOffset" : 180,
      "endOffset" : 184
    }, {
      "referenceID" : 13,
      "context" : "Note that, unlike the hierarchical graph cuts approach [14], the hierarchical move-making algorithm can be used for any arbitrary clustering and not just the one specified by an HST metric.",
      "startOffset" : 55,
      "endOffset" : 59
    }, {
      "referenceID" : 13,
      "context" : "This generalizes previously known results on the guarantees of move-making algorithms in two ways: (i) in contrast to previous results [14, 15, 20] that focused on special cases of distance functions, our results are applicable to arbitrary semi-metric distance functions; and (ii) the guarantees provided by our theorems are tight.",
      "startOffset" : 135,
      "endOffset" : 147
    }, {
      "referenceID" : 14,
      "context" : "This generalizes previously known results on the guarantees of move-making algorithms in two ways: (i) in contrast to previous results [14, 15, 20] that focused on special cases of distance functions, our results are applicable to arbitrary semi-metric distance functions; and (ii) the guarantees provided by our theorems are tight.",
      "startOffset" : 135,
      "endOffset" : 147
    }, {
      "referenceID" : 19,
      "context" : "This generalizes previously known results on the guarantees of move-making algorithms in two ways: (i) in contrast to previous results [14, 15, 20] that focused on special cases of distance functions, our results are applicable to arbitrary semi-metric distance functions; and (ii) the guarantees provided by our theorems are tight.",
      "startOffset" : 135,
      "endOffset" : 147
    } ],
    "year" : 2014,
    "abstractText" : "Metric labeling is a special case of energy minimization for pairwise Markov random fields. The energy function consists of arbitrary unary potentials, and pairwise potentials that are proportional to a given metric distance function over the label set. Popular methods for solving metric labeling include (i) move-making algorithms, which iteratively solve a minimum st-cut problem; and (ii) the linear programming (LP) relaxation based approach. In order to convert the fractional solution of the LP relaxation to an integer solution, several randomized rounding procedures have been developed in the literature. We consider a large class of parallel rounding procedures, and design move-making algorithms that closely mimic them. We prove that the multiplicative bound of a move-making algorithm exactly matches the approximation factor of the corresponding rounding procedure for any arbitrary distance function. Our analysis includes all known results for move-making algorithms as special cases.",
    "creator" : null
  }
}