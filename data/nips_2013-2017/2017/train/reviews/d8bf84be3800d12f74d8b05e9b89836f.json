{"title": "PointNet++: Deep Hierarchical Feature Learning on Point Sets in a Metric Space", "abstract": "Few prior works study deep learning on point sets. PointNet is a pioneer in this direction. However, by design PointNet does not capture local structures induced by the metric space points live in, limiting its ability to recognize fine-grained patterns and generalizability to complex scenes. In this work, we introduce a hierarchical neural network that applies PointNet recursively on a nested partitioning of the input point set. By exploiting metric space distances, our network is able to learn local features with increasing contextual scales. With further observation that point sets are usually sampled with varying densities, which results in greatly decreased performance for networks trained on uniform densities, we propose novel set learning layers to adaptively combine features from multiple scales. Experiments show that our network called PointNet++ is able to learn deep point set features efficiently and robustly. In particular, results significantly better than state-of-the-art have been obtained on challenging benchmarks of 3D point clouds.", "id": "d8bf84be3800d12f74d8b05e9b89836f", "authors": ["Charles Ruizhongtai Qi", "Li Yi", "Hao Su", "Leonidas J. Guibas"], "conference": "NIPS2017", "accepted": true, "reviews": [{"comments": "This paper is improving the PointNet [19] with a recursive approach to introduce local context learning with gradually increasing scales. \n\n+ The exposition is clear and the math is easy to follow. \n+ Experiments show that PointNet++ achieves the best results on pointset benchmarks. \n- Even though the motivation builds upon local detail recovery ability of PointNet++, this is not strongly supported by the results.\n\nI am leaning towards acceptance due to the fact that clear experiments are provided on benchmarks with state of the art results.", "IS_ANNOTATED": false, "IS_META_REVIEW": false}, {"comments": "This paper is a follow-up on the very recent PointNet paper. Its main contribution is to make PointNet more similar to CNNs by introducing the spatial relation between points (in the form of grouping), and thus a form of locality and shift invariance for the low level descriptors. \n\nWhile the contribution is straightforward to explain, and at the end not a huge step from PointNet, it is well presented, evaluated, , it was probably some work to make it work efficiently (and it would be good to add numbers about speed in the paper, I don't think I saw them and sampling, centring etc. may improve the time quite a lot) and the results are satisfying (even if they are not amazing: for classification, I would consider the most meaningful comparison pointnet vs. pointnet++ without normal, so 89.2/90.7 . For segmentation, the comparison without normals should be added )\n\nAs a sidenote, I appreciated the results on SHREC non rigid shape classification, I don't know much paper evaluating both for it and ModelNet.", "IS_ANNOTATED": false, "IS_META_REVIEW": false}, {"comments": "As clearly indicated in the title, this paper submission is an extension of the PointNet work of [19], to appear at CVPR 2017. The goal is to classify and segment (3D) point clouds. Novel contributions over [19] are the use of a hierarchical network, leveraging neighbourhoods at different scales, and a mechanism to deal with varying sampling densities, effectively generating receptive fields that vary in a data dependent manner. All this leads to state-of-the-art results.\n\nPointNet++ seems an important extension over PointNet, in that it allows to properly exploit local spatial information. Yet the impact on the overall performance is just 1-2 percent.\n\nSome more experimental or theoretical analysis would have been appreciated. For instance: \n- A number of alternative sampling options, apart from most distant point, are mentioned in the text, but not compared against in the experiments. \n- In the conclusions, it is mentioned that MSG is more robust than MRG but worse in terms of computational efficiency. I'd like to see such a claim validated by a more in-depth analysis of the computational load, or at least some indicative numbers.", "IS_ANNOTATED": false, "IS_META_REVIEW": false}], "histories": []}
