{
  "name" : "38ed162a0dbef7b3fe0f628aa08b90e7.pdf",
  "metadata" : {
    "source" : "META",
    "title" : "Invariance and Stability of Deep Convolutional Representations",
    "authors" : [ "Alberto Bietti", "Julien Mairal" ],
    "emails" : [ "alberto.bietti@inria.fr", "julien.mairal@inria.fr" ],
    "sections" : [ {
      "heading" : "1 Introduction",
      "text" : "The results achieved by deep neural networks for prediction tasks have been impressive in domains where data is structured and available in large amounts. In particular, convolutional neural networks (CNNs) [14] have shown to model well the local appearance of natural images at multiple scales, while also representing images with some invariance through pooling operations. Yet, the exact nature of this invariance and the characteristics of functional spaces where convolutional neural networks live are poorly understood; overall, these models are sometimes only seen as clever engineering black boxes that have been designed with a lot of insight collected since they were introduced.\nUnderstanding the geometry of these functional spaces is nevertheless a fundamental question. In addition to potentially bringing new intuition about the success of deep networks, it may for instance help solving the issue of regularization, by providing ways to control the variations of prediction functions in a principled manner. Small deformations of natural signals often preserve their main characteristics, such as the class label in a classification task (e.g., the same digit with different handwritings may correspond to the same images up to small deformations), and provide a much richer class of transformations than translations. Representations that are stable to small deformations allow more robust models that may exploit these invariances, which may lead to improved sample complexity. The scattering transform [5, 17] is a recent attempt to characterize convolutional multilayer architectures based on wavelets. The theory provides an elegant characterization of invariance and stability properties of signals represented via the scattering operator, through a notion of Lipschitz stability to the action of diffeomorphisms. Nevertheless, these networks do not involve “learning” in the classical sense since the filters of the networks are pre-defined, and the resulting architecture differs significantly from the most used ones.\nIn this work, we study these theoretical properties for more standard convolutional architectures from the point of view of positive definite kernels [27]. Specifically, we consider a functional space derived from a kernel for multi-dimensional signals, which admits a multilayer and convolutional structure that generalizes the construction of convolutional kernel networks (CKNs) [15, 16]. We show that this functional space contains a large class of CNNs with smooth homogeneous activation functions in addition to CKNs [15], allowing us to obtain theoretical results for both classes of models.\n∗Univ. Grenoble Alpes, Inria, CNRS, Grenoble INP, LJK, 38000 Grenoble, France\n31st Conference on Neural Information Processing Systems (NIPS 2017), Long Beach, CA, USA.\nThe main motivation for introducing a kernel framework is to study separately data representation and predictive models. On the one hand, we study the translation-invariance properties of the kernel representation and its stability to the action of diffeomorphisms, obtaining similar guarantees as the scattering transform [17], while preserving signal information. When the kernel is appropriately designed, we also show how to obtain signal representations that are near-invariant to the action of any group of transformations. On the other hand, we show that these stability results can be translated to predictive models by controlling their norm in the functional space. In particular, the RKHS norm controls both stability and generalization, so that stability may lead to improved sample complexity.\nRelated work. Our work relies on image representations introduced in the context of convolutional kernel networks [15, 16], which yield a sequence of spatial maps similar to traditional CNNs, but each point on the maps is possibly infinite-dimensional and lives in a reproducing kernel Hilbert space (RKHS). The extension to signals with d spatial dimensions is straightforward. Since computing the corresponding Gram matrix as in classical kernel machines is computationally impractical, CKNs provide an approximation scheme consisting of learning finite-dimensional subspaces of each RKHS’s layer, where the data is projected, see [15]. The resulting architecture of CKNs resembles traditional CNNs with a subspace learning interpretation and different unsupervised learning principles.\nAnother major source of inspiration is the study of group-invariance and stability to the action of diffeomorphisms of scattering networks [17], which introduced the main formalism and several proof techniques from harmonic analysis that were keys to our results. Our main effort was to extend them to more general CNN architectures and to the kernel framework. Invariance to groups of transformations was also studied for more classical convolutional neural networks from methodological and empirical points of view [6, 9], and for shallow learned representations [1] or kernel methods [13, 19, 22].\nNote also that other techniques combining deep neural networks and kernels have been introduced. Early multilayer kernel machines appear for instance in [7, 26]. Shallow kernels for images modelling local regions were also proposed in [25], and a multilayer construction was proposed in [4]. More recently, different models based on kernels are introduced in [2, 10, 18] to gain some theoretical insight about classical multilayer neural networks, while kernels are used to define convex models for two-layer neural networks in [36]. Finally, we note that Lipschitz stability of deep models to additive perturbations was found to be important to get robustness to adversarial examples [8]. Our results show that convolutional kernel networks already enjoy such a property.\nNotation and basic mathematical tools. A positive definite kernel K that operates on a set X implicitly defines a reproducing kernel Hilbert space H of functions from X to R, along with a mapping ϕ : X → H. A predictive model associates to every point z in X a label in R; it consists of a linear function f in H such that f(z) = 〈f, ϕ(z)〉H, where ϕ(z) is the data representation. Given now two points z, z′ in X , Cauchy-Schwarz’s inequality allows us to control the variation of the predictive model f according to the geometry induced by the Hilbert norm ‖.‖H:\n|f(z)− f(z′)| ≤ ‖f‖H‖ϕ(z)− ϕ(z ′)‖H. (1)\nThis property implies that two points z and z′ that are close to each other according to the RKHS norm should lead to similar predictions, when the model f has reasonably small norm in H.\nThen, we consider notation from signal processing similar to [17]. We call a signal x a function in L2(Ω,H), where Ω is a subset of Rd representing spatial coordinates, and H is a Hilbert space, when ‖x‖2L2 := ∫ Ω ‖x(u)‖2Hdu < ∞, where du is the Lebesgue measure on R d. Given a linear operator T : L2(Ω,H) → L2(Ω,H′), the operator norm is defined as ‖T‖L2(Ω,H)→L2(Ω,H′) := sup‖x‖\nL2(Ω,H)≤1 ‖Tx‖L2(Ω,H′). For the sake of clarity, we drop norm subscripts, from now on, using\nthe notation ‖ · ‖ for Hilbert space norms, L2 norms, and L2 → L2 operator norms, while | · | denotes the Euclidean norm on Rd. Some useful mathematical tools are also presented in Appendix A."
    }, {
      "heading" : "2 Construction of the Multilayer Convolutional Kernel",
      "text" : "We now present the multilayer convolutional kernel, which operates on signals with d spatial dimensions. The construction follows closely that of convolutional kernel networks [15] but generalizes it to input signals defined on the continuous domain Ω = Rd (which does not prevent signals to have compact support), as done by Mallat [17] for analyzing the properties of the scattering transform; the issue of discretization where Ω is a discrete grid is addressed in Section 2.1.\nIn what follows, an input signal is denoted by x0 and lives in L 2(Ω,H0), where H0 is typically R p0 (e.g., with p0 = 3, x0(u) may represent the RGB pixel value at location u). Then, we build a sequence of RKHSs H1,H2, . . ., and transform x0 into a sequence of “feature maps” supported on Ω, respectively denoted by x1 in L 2(Ω,H1), x2 in L 2(Ω,H2), . . . . As depicted in Figure 1, a new map xk is built from the previous one xk–1 by applying successively three operators that perform patch extraction (Pk), kernel mapping (Mk) in a new RKHS Hk, and linear pooling (Ak), respectively. When going up in the hierarchy, the points xk(u) carry information from larger signal neighborhoods centered at u in Ω with more invariance, as we will formally show.\nPatch extraction operator. Given the layer xk–1, we consider a patch shape Sk, defined as a compact centered subset of Rd, e.g., a box [−1, 1]× [−1, 1] for images, and we define the Hilbert space Pk := L 2(Sk,Hk–1) equipped with the norm ‖z‖ 2 = ∫\nSk ‖z(u)‖2dνk(u), where dνk is the\nnormalized uniform measure on Sk for every z in Pk. More precisely, we now define the linear patch extraction operator Pk : L 2(Ω,Hk–1) → L 2(Ω,Pk) such that for all u in Ω,\nPkxk–1(u) = (v 7→ xk–1(u+ v))v∈Sk ∈ Pk.\nNote that by equipping Pk with a normalized measure, the operator Pk preserves the norm. By Fubini’s theorem, we have indeed ‖Pkxk–1‖ = ‖xk–1‖ and hence Pkxk–1 is in L 2(Ω,Pk).\nKernel mapping operator. In a second stage, we map each patch of xk–1 to a RKHS Hk with a kernel mapping ϕk : Pk → Hk associated to a positive definite kernel Kk. It is then possible to define the non-linear pointwise operator Mk such that\nMkPkxk–1(u) := ϕk(Pkxk–1(u)) ∈ Hk.\nAs in [15], we use homogeneous dot-product kernels of the form\nKk(z, z ′) = ‖z‖‖z′‖κk\n(\n〈z, z′〉\n‖z‖‖z′‖\n)\nwith κk(1) = 1, (2)\nwhich ensures that ‖MkPkxk–1(u)‖ = ‖Pkxk–1(u)‖ and that MkPkxk–1 is in L 2(Ω,Hk). Concrete examples of kernels satisfying (2) with some other properties are presented in Appendix B.\nPooling operator. The last step to build the layer xk is to pool neighboring values to achieve some local shift-invariance. As in [15], we apply a linear convolution operator Ak with a Gaussian kernel at scale σk, hσk(u) := σ −d k h(u/σk), where h(u) = (2π) −d/2 exp(−|u|2/2). Then,\nxk(u) = AkMkPkxk–1(u) =\n∫\nRd\nhσk(u− v)MkPkxk–1(v)dv ∈ Hk.\nApplying Schur’s test to the integral operator Ak (see Appendix A), we obtain that ‖Ak‖ ≤ 1. Thus, ‖xk‖ ≤ ‖MkPkxk–1‖ and xk ∈ L\n2(Ω,Hk). Note that a similar pooling operator is used in the scattering representation [5, 17], though in a different way which does not affect subsequent layers.\nMultilayer construction. Finally, we obtain a multilayer representation by composing multiple times the previous operators. In order to increase invariance with each layer, the size of the patch Sk and pooling scale σk typically grow exponentially with k, with σk and supc∈Sk |c| of the same order. With n layers, the final representation is given by the feature map\nΦn(x0) := xn = AnMnPnAn–1Mn–1Pn–1 · · · A1M1P1x0 ∈ L 2(Ω,Hn). (3)\nThen, we can define a kernel Kn on two signals x0 and x ′ 0 by Kn(x0, x ′ 0) := 〈Φn(x0),Φn(x ′ 0)〉, whose RKHS HKn contains all functions of the form f(x0) = 〈w,Φn(x0)〉 with w ∈ L 2(Ω,Hn).\nThe following lemma shows that this representation preserves all information about the signal at each layer, and each feature map xk can be sampled on a discrete set with no loss of information. This suggests a natural approach for discretization which we discuss next. For space limitation reasons, all proofs in this paper are relegated to Appendix C.\nLemma 1 (Signal preservation). Assume that Hk contains linear functions 〈w, ·〉 with w in Pk (this is true for all kernels Kk described in Appendix B), then the signal xk–1 can be recovered from a sampling of xk = AkMkPkxk–1 at discrete locations as soon as the union of patches centered at these points covers all of Ω. It follows that xk can be reconstructed from such a sampling."
    }, {
      "heading" : "2.1 From Theory to Practice: Discretization and Signal Preservation",
      "text" : "The previous construction defines a kernel representation for general signals in L2(Ω,H0), which is an abstract object defined for theoretical purposes, as often done in signal processing [17]. In practice, signals are discrete, and it is thus important to discuss the problem of discretization, as done in [15]. For clarity, we limit the presentation to 1-dimensional signals (Ω = Rd with d = 1), but the arguments can easily be extended to higher dimensions d when using box-shaped patches. Notation from the previous section is preserved, but we add a bar on top of all discrete analogues of their discrete counterparts, e.g., x̄k is a discrete feature map in ℓ 2(Z, H̄k) for some RKHS H̄k.\nInput signals x0 and x̄0. Discrete signals acquired by a physical device are often seen as local integrators of signals defined on a continuous domain (e.g., sensors from digital cameras integrate the pointwise distribution of photons that hit a sensor in a spatial window). Let us then consider a signal x0 in L2(Ω,H0) and s0 a sampling interval. By defining x̄0 in ℓ2(Z,H0) such that x̄0[n] = x0(ns0) for all n in Z, it is thus natural to assume that x0=A0x, where A0 is a pooling operator (local integrator) applied to an original signal x. The role of A0 is to prevent aliasing and reduce high frequencies; typically, the scale σ0 of A0 should be of the same magnitude as s0, which we choose to be s0 = 1 in the following, without loss of generality. This natural assumption will be kept later in the analysis.\nMultilayer construction. We now want to build discrete feature maps x̄k in ℓ 2(Z, H̄k) at each layer k involving subsampling with a factor sk w.r.t. x̄k–1. We now define the discrete analogues of the operators Pk (patch extraction), Mk (kernel mapping), and Ak (pooling) as follows: for n ∈ Z,\nP̄kx̄k–1[n] := e −1/2 k (x̄k–1[n], x̄k–1[n+ 1], . . . , x̄k–1[n+ ek − 1]) ∈ P̄k := H̄ ek k–1\nM̄kP̄kx̄k–1[n] := ϕ̄k(P̄kx̄k–1[n]) ∈ H̄k\nx̄k[n]=ĀkM̄kP̄kx̄k–1[n] := s 1/2 k\n∑\nm∈Z\nh̄k[nsk −m]M̄kP̄kx̄k–1[m]=(h̄k ∗ M̄kP̄kx̄k–1)[nsk] ∈ H̄k,\nwhere (i) P̄k extracts a patch of size ek starting at position n in x̄k–1[n] (defining a patch centered at n is also possible), which lives in the Hilbert space P̄k defined as the direct sum of ek times H̄k–1; (ii) M̄k is a kernel mapping identical to the continuous case, which preserves the norm, like Mk; (iii) Āk performs a convolution with a Gaussian filter and a subsampling operation with factor sk. The next lemma shows that under mild assumptions, this construction preserves signal information.\nLemma 2 (Signal recovery with subsampling). Assume that H̄k contains the linear functions 〈w, ·〉 for all w ∈ P̄k and that ek ≥ sk. Then, x̄k–1 can be recovered from x̄k.\nWe note that this result relies on recovery by deconvolution of a pooling convolution with filter h̄k, which is stable when its scale parameter, typically of order sk to prevent anti-aliasing, is small enough. This suggests using small values for ek, sk, as in typical recent convolutional architectures [30].\nLinks between the parameters of the discrete and continuous models. Due to subsampling, the patch size in the continuous and discrete models are related by a multiplicative factor. Specifically, a patch of size ek with discretization corresponds to a patch Sk of diameter eksk−1sk−2 . . . s1 in the continuous case. The same holds true for the scale parameter of the Gaussian pooling."
    }, {
      "heading" : "2.2 From Theory to Practice: Kernel Approximation and Convolutional Kernel Networks",
      "text" : "Besides discretization, two modifications are required to use the image representation we have described in practice. The first one consists of using feature maps with finite spatial support, which introduces border effects that we did not study, but which are negligible when dealing with large realistic images. The second one requires finite-dimensional approximation of the kernel maps, leading to the convolutional kernel network model of [15]. Typically, each RKHS’s mapping is approximated by performing a projection onto a subspace of finite dimension, a classical approach to make kernel methods work at large scale [12, 31, 34]. One advantage is its compatibility with the RKHSs (meaning that the approximations live in the respective RKHSs), and the stability results we will present next are preserved thanks to the non-expansiveness of the projection.\nIt is then be possible to derive theoretical results for the CKN model, which appears as a natural implementation of the kernel constructed previously; yet, we will also show in Section 5 that the results apply more broadly to CNNs that are contained in the functional space associated to the kernel."
    }, {
      "heading" : "3 Stability to Deformations and Translation Invariance",
      "text" : "In this section, we study the translation-invariance and the stability of the kernel representation described in Section 2 for continuous signals under the action of diffeomorphisms. We use a similar characterization of stability to the one introduced by Mallat [17]: for a C1-diffeomorphism τ : Ω → Ω, let Lτ denote the linear operator defined by Lτx(u) = x(u− τ(u)), the representation Φ(·) is stable under the action of diffeomorphisms if there exist two constants C1 and C2 such that\n‖Φ(Lτx)− Φ(x)‖ ≤ (C1‖∇τ‖∞ + C2‖τ‖∞)‖x‖, (4)\nwhere ∇τ is the Jacobian of τ , ‖∇τ‖∞ := supu∈Ω ‖∇τ(u)‖, and ‖τ‖∞ := supu∈Ω |τ(u)|. As in [17], our results will assume the regularity condition ‖∇τ‖∞ < 1/2. In order to have a translationinvariant representation, we want C2 to be small (a translation is a diffeomorphism with ∇τ = 0), and indeed we will show that C2 is proportional to 1/σn, where σn is the scale of the last pooling layer, which typically increases exponentially with the number of layers n.\nNote that unlike the scattering transform [17], we do not have a representation that preserves the norm, i.e., such that ‖Φ(x)‖=‖x‖. While the patch extraction Pk and kernel mapping Mk operators do preserve the norm, the pooling operators Ak may remove (or significantly reduce) frequencies from the signal that are larger than 1/σk. Yet, natural signals such as natural images often have high energy in the low-frequency domain (the power spectra of natural images is often considered to have a polynomial decay in 1/f2, where f is the signal frequency [33]). For such classes of signals, a large fraction of the signal energy will be preserved by the pooling operator. In particular, with some additional assumptions on the kernels Kk, it is possible to show [3]:\n‖Φ(x)‖ ≥ ‖An · · ·A0x‖.\nAdditionally, when using a Gaussian kernel mapping ϕn+1 on top of the last feature map as a prediction layer instead of a linear layer, the final representation Φf (x) := ϕn+1(Φn(A0x)) preserves stability and always has unit norm (see the extended version of the paper [3] for details). This suggests that norm preservation may be a less relevant concern in our kernel setting."
    }, {
      "heading" : "3.1 Stability Results",
      "text" : "In order to study the stability of the representation (3), we assume that the input signal x0 may be written as x0 = A0x, where A0 is an initial pooling operator at scale σ0, which allows us to control the high frequencies of the signal in the first layer. As discussed previously in Section 2.1, this assumption is natural and compatible with any physical acquisition device. Note that σ0 can be taken arbitrarily small, making the operator A0 arbitrarily close to the identity, so that this assumption does not limit the generality of our results. Moreover, we make the following assumptions for each layer k:\n(A1) Norm preservation: ‖ϕk(x)‖ = ‖x‖ for all x in Pk; (A2) Non-expansiveness: ‖ϕk(x)− ϕk(x ′)‖ ≤ ‖x− x′‖ for all x, x′ in Pk; (A3) Patch sizes: there exists κ > 0 such that at any layer k we have\nsup c∈Sk |c| ≤ κσk−1.\nNote that assumptions (A1-2) imply that the operators Mk preserve the norm and are non-expansive. Appendix B exposes a large class of homogeneous kernels that satisfy assumptions (A1-2).\nGeneral bound for stability. The following result gives an upper bound on the quantity of interest, ‖Φ(Lτx)−Φ(x)‖, in terms of the norm of various linear operators which control how τ affects each layer. The commutator of linear operators A and B is denoted [A,B] = AB −BA. Proposition 3. Let Φ(x)=Φn(A0x) where Φn is defined in (3) for x in L 2(Ω,H0). Then,\n‖Φ(Lτx)− Φ(x)‖ ≤\n(\nn ∑\nk=1\n‖[PkAk−1, Lτ ]‖+ ‖[An, Lτ ]‖+ ‖LτAn −An‖\n)\n‖x‖ (5)\nIn the case of a translation Lτx(u) = Lcx(u) = x(u − c), it is easy to see that pooling and patch extraction operators commute with Lc (this is also known as covariance or equivariance to translations), so that we are left with the term ‖LcAn − An‖, which should control translation invariance. For general diffeomorphisms τ , we no longer have exact covariance, but we show below that commutators are stable to τ , in the sense that ‖[PkAk−1, Lτ ]‖ is controlled by ‖∇τ‖∞, while ‖LτAn −An‖ is controlled by ‖τ‖∞ and decays with the pooling size σn.\nBound on ‖[PkAk−1, Lτ ]‖. We begin by noting that Pkz can be identified with (Lcz)c∈Sk isometrically for all z in L2(Ω,Hk–1), since ‖Pkz‖ 2 = ∫\nSk ‖Lcz‖\n2dνk(c) by Fubini’s theorem. Then,\n‖PkAk−1Lτz − LτPkAk−1z‖ 2 =\n∫\nSk\n‖LcAk−1Lτz − LτLcAk−1z‖ 2dνk(c)\n≤ sup c∈Sk\n‖LcAk−1Lτx− LτLcAk−1z‖ 2,\nso that ‖[PkAk−1, Lτ ]‖ ≤ supc∈Sk ‖[LcAk−1, Lτ ]‖. The following result lets us bound ‖[LcAk−1, Lτ ]‖ when |c| ≤ κσk−1, which is satisfied under assumption (A3). Lemma 4. Let Aσ be the pooling operator with kernel hσ(u) = σ −dh(u/σ). If ‖∇τ‖∞ ≤ 1/2, there exists a constant C1 such that for any σ and |c| ≤ κσ, we have\n‖[LcAσ, Lτ ]‖ ≤ C1‖∇τ‖∞,\nwhere C1 depends only on h and κ.\nA similar result is obtained in Mallat [17, Lemma E.1] for commutators of the form [Aσ, Lτ ], but we extend it to handle integral operators LcAσ with a shifted kernel. The proof (given in Appendix C.4) relies on the fact that [LcAσ, Lτ ] is an integral operator in order to bound its norm via Schur’s test. Note that κ can be made larger, at the cost of an increase of the constant C1 of the order κ d+1.\nBound on ‖LτAn −An‖. We bound the operator norm ‖LτAn −An‖ in terms of ‖τ‖∞ using the following result due to Mallat [17, Lemma 2.11], with σ = σn:\nLemma 5. If ‖∇τ‖∞ ≤ 1/2, we have\n‖LτAσ −Aσ‖ ≤ C2 σ ‖τ‖∞, (6)\nwith C2 = 2 d · ‖∇h‖1.\nCombining Proposition 3 with Lemmas 4 and 5, we immediately obtain the following result.\nTheorem 6. Let Φ(x) be a representation given by Φ(x) = Φn(A0x) and assume (A1-3). If ‖∇τ‖∞ ≤ 1/2, we have\n‖Φ(Lτx)− Φ(x)‖ ≤\n(\nC1 (1 + n) ‖∇τ‖∞ + C2 σn ‖τ‖∞\n)\n‖x‖. (7)\nThis result matches the desired notion of stability in Eq. (4), with a translation-invariance factor that decays with σn. The dependence on a notion of depth (the number of layers n here) also appears in [17], with a factor equal to the maximal length of scattering paths, and with the same condition ‖∇τ‖∞ ≤ 1/2. However, while the norm of the scattering representation is preserved as the length of these paths goes to infinity, the norm of Φ(x) can decrease with depth due to pooling layers, though this concern may be alleviated by using an additional non-linear prediction layer, as discussed previously (see also [3])."
    }, {
      "heading" : "3.2 Stability with Kernel Approximations",
      "text" : "As in the analysis of the scattering transform of [17], we have characterized the stability and shiftinvariance of the data representation for continuous signals, in order to give some intuition about the properties of the corresponding discrete representation, which we have described in Section 2.1.\nAnother approximation performed in the CKN model of [15] consists of adding projection steps on finite-dimensional subspaces of the RKHS’s layers, as discusssed in Section 2.2. Interestingly, the stability properties we have obtained previously are compatible with these steps. We may indeed redefine the operator Mk as the pointwise operation such that Mkz(u) = Πkϕk(z(u)) for any map z in L2(Ω,Pk), instead of Mkz(u) = ϕk(z(u)); Πk : Hk → Fk is here a projection operator onto a linear subspace. Then, Mk does not necessarily preserve the norm anymore, but ‖Mkz‖ ≤ ‖z‖, with a loss of information corresponding to the quality of approximation of the kernel Kk on the points z(u). On the other hand, the non-expansiveness of Mk is satisfied thanks to the non-expansiveness of the projection. Additionally, the CKN construction provides a finite-dimensional representation at each layer, which preserves the norm structure of the original Hilbert spaces isometrically. In summary, it is possible to show that the conclusions of Theorem 6 remain valid for this tractable CKN representation, but we lose signal information in the process. The stability of the predictions can then be controlled through the norm of the last (linear) layer, which is typically used as a regularizer [15]."
    }, {
      "heading" : "4 Global Invariance to Group Actions",
      "text" : "In Section 3, we have seen how the kernel representation of Section 2 creates invariance to translations by commuting with the action of translations at intermediate layers, and how the last pooling layer on the translation group governs the final level of invariance. It is often useful to encode invariances to different groups of transformations, such as rotations or reflections (see, e.g., [9, 17, 22, 29]). Here, we show how this can be achieved by defining adapted patch extraction and pooling operators that commute with the action of a transformation group G (this is known as group covariance or equivariance). We assume that G is locally compact, so that we can define a left-invariant Haar measure µ—that is, a measure on G that satisfies µ(gS) = µ(S) for any Borel set S ⊂ G and g in G. We assume the initial signal x(u) is defined on G, and we define subsequent feature maps on the same domain. The action of an element g ∈ G is denoted by Lg, where Lgx(u) = x(g\n−1u). Then, we are interested in defining a layer—that is, a succession of patch extraction, kernel mapping, and pooling operators—that commutes with Lg , in order to achieve equivariance to the group G.\nPatch extraction. We define patch extraction as follows\nPx(u) = (x(uv))v∈S for all u ∈ G,\nwhere S ⊂ G is a patch centered at the identity. P commutes with Lg since\nPLgx(u) = (Lgx(uv))v∈S = (x(g −1uv))v∈S = Px(g −1u) = LgPx(u).\nKernel mapping. The pointwise operator M is defined as in Section 2, and thus commutes with Lg .\nPooling. The pooling operator on the group G is defined in a similar fashion as [22] by\nAx(u) =\n∫\nG\nx(uv)h(v)dµ(v) =\n∫\nG\nx(v)h(u−1v)dµ(v),\nwhere h is a pooling filter typically localized around the identity element. It is easy to see from the first expression of Ax(u) that ALgx(u) = LgAx(u), making the pooling operator G-equivariant.\nIn our analysis of stability in Section 3, we saw that inner pooling layers are useful to guarantee stability to local deformations, while global invariance is achieved mainly through the last pooling layer. In some cases, one only needs stability to a subgroup of G, while achieving global invariance to the whole group, e.g., in the roto-translation group [21], one might want invariance to a global rotation but stability to local translations. Then, one can perform pooling just on the subgroup to stabilize (e.g., translations) in intermediate layers, while pooling on the entire group at the last layer to achieve the global group invariance."
    }, {
      "heading" : "5 Link with Convolutional Neural Networks",
      "text" : "In this section, we study the connection between the kernel representation defined in Section 2 and CNNs. Specifically, we show that the RKHS HKn obtained from our kernel construction contains a set of CNNs on continuous domains with certain types of smooth homogeneous activations. An important consequence is that the stability results of previous sections apply to this class of CNNs.\nCNN maps construction. We now define a CNN function fσ that takes as input an image x0 in L2(Ω,Rp0) with p0 channels, and builds a sequence of feature maps, represented at layer k as a function zk in L\n2(Ω,Rpk) with pk channels; it performs linear convolutions with a set of filters (wik)i=1,...,pk , followed by a pointwise activation function σ to obtain intermediate feature maps z̃k, then applies a linear pooling filter and repeats the same operations at each layer. Note that here, each wik is in L 2(Sk,R pk–1), with channels denoted by wijk ∈ L 2(Sk,R). Formally, the intermediate map z̃k in L 2(Ω,Rpk) is obtained for k ≥ 1 by\nz̃ik(u) = nk(u)σ ( 〈wik, Pkzk–1(u)〉/nk(u) ) , (8)\nwhere z̃k(u) = (z̃ 1 k(u), . . . , z̃ pk k (u)) in R pk , and Pk is the patch extraction operator, which operates here on finite-dimensional maps. The activation involves a pointwise non-linearity σ along with a quantity nk(u) that is independent of the filters and that will be made explicit in the sequel. Finally, the map zk is obtained by using a pooling operator as in Section 2, with zk = Akz̃k, and z0 = x0.\nHomogeneous activations. The choice of non-linearity σ relies on Lemma B.2 of the appendix, which shows that for many choices of smooth functions σ, the RKHSs Hk defined in Section 2 contains the linear functions z 7→ ‖z‖σ(〈g, z〉/‖z‖) for all g in Pk. While this homogenization involving the quantities ‖z‖ is not standard in classical CNNs, we note that (i) the most successful activation function, namely rectified linear units, is homogeneous—that is, relu(〈g, z〉) = ‖z‖relu(〈g, z〉/‖z‖); (ii) while relu is nonsmooth and thus not in our RKHSs, there exists a smoothed variant that satisfies the conditions of Lemma B.2 for useful kernels. As noticed in [35, 36], this is for instance the case for the inverse polynomial kernel described in Appendix B, In Figure 2, we plot and compare these different variants of relu. Then, we may now define the quantities nk(u) := ‖Pkxk−1(u)‖ in (8), which are due to the homogenization, and which are independent of the filters wik.\nClassification layer. The final CNN prediction function fσ is given by inner products with the feature maps of the last layer:\nfσ(x0) = 〈wn+1, zn〉,\nwith parameters wn+1 in L 2(Ω,Rpn). The next result shows that for appropriate σ, the function fσ is in HKn . The construction of this function in the RKHS and the proof are given in Appendix D. We note that a similar construction for fully connected networks with constraints on weights and inputs was given in [35].\nProposition 7 (CNNs and RKHSs). Assume the activation σ satisfies Cσ(a) < ∞ for all a ≥ 0, where Cσ is defined for a given kernel in Lemma B.2. Then the CNN function fσ defined above is in the RKHS HKn , with norm\n‖fσ‖ 2 ≤ pn\npn ∑\ni=1\n‖win+1‖ 2 2Bn,i,\nwhere Bn,i is defined recursively by B1,i = C 2 σ(‖w i 1‖ 2 2) and Bk,i = C 2 σ\n(\npk–1 ∑pk–1 j=1 ‖w ij k ‖ 2 2Bk–1,j\n)\n.\nThe results of this section imply that our study of the geometry of the kernel representations, and in particular the stability and invariance properties of Section 3, apply to the generic CNNs defined\nabove, thanks to the Lipschitz smoothness relation (1). The smoothness is then controlled by the RKHS norm of these functions, which sheds light on the links between generalization and stability. In particular, functions with low RKHS norm (a.k.a. “large margin”) are known to generalize better to unseen data (see, e.g., the notion of margin bounds for SVMs [27, 28]). This implies, for instance, that generalization is harder if the task requires classifying two slightly deformed images with different labels, since this requires a function with large RKHS norm according to our stability analysis. In contrast, if a stable function (i.e., with small RKHS norm) is sufficient to do well on a training set, learning becomes “easier” and few samples may be enough for good generalization."
    }, {
      "heading" : "Acknowledgements",
      "text" : "This work was supported by a grant from ANR (MACARON project under grant number ANR14-CE23-0003-01), by the ERC grant number 714381 (SOLARIS project), and by the MSR-Inria joint center."
    } ],
    "references" : [ {
      "title" : "On invariance and selectivity in representation learning",
      "author" : [ "F. Anselmi", "L. Rosasco", "T. Poggio" ],
      "venue" : "Information and Inference, 5(2):134–158,",
      "citeRegEx" : "1",
      "shortCiteRegEx" : null,
      "year" : 2016
    }, {
      "title" : "Deep convolutional networks are hierarchical kernel machines",
      "author" : [ "F. Anselmi", "L. Rosasco", "C. Tan", "T. Poggio" ],
      "venue" : "preprint arXiv:1508.01084,",
      "citeRegEx" : "2",
      "shortCiteRegEx" : null,
      "year" : 2015
    }, {
      "title" : "Group invariance and stability to deformations of deep convolutional representations",
      "author" : [ "A. Bietti", "J. Mairal" ],
      "venue" : "preprint arXiv:1706.03078,",
      "citeRegEx" : "3",
      "shortCiteRegEx" : null,
      "year" : 2017
    }, {
      "title" : "Object recognition with hierarchical kernel descriptors",
      "author" : [ "L. Bo", "K. Lai", "X. Ren", "D. Fox" ],
      "venue" : "Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition (CVPR),",
      "citeRegEx" : "4",
      "shortCiteRegEx" : null,
      "year" : 2011
    }, {
      "title" : "Invariant scattering convolution networks",
      "author" : [ "J. Bruna", "S. Mallat" ],
      "venue" : "IEEE Transactions on pattern analysis and machine intelligence (PAMI), 35(8):1872–1886,",
      "citeRegEx" : "5",
      "shortCiteRegEx" : null,
      "year" : 2013
    }, {
      "title" : "Learning stable group invariant representations with convolutional networks",
      "author" : [ "J. Bruna", "A. Szlam", "Y. LeCun" ],
      "venue" : "preprint arXiv:1301.3537,",
      "citeRegEx" : "6",
      "shortCiteRegEx" : null,
      "year" : 2013
    }, {
      "title" : "Kernel methods for deep learning",
      "author" : [ "Y. Cho", "L.K. Saul" ],
      "venue" : "Advances in Neural Information Processing Systems (NIPS),",
      "citeRegEx" : "7",
      "shortCiteRegEx" : null,
      "year" : 2009
    }, {
      "title" : "Parseval networks: Improving robustness to adversarial examples",
      "author" : [ "M. Cisse", "P. Bojanowski", "E. Grave", "Y. Dauphin", "N. Usunier" ],
      "venue" : "International Conference on Machine Learning (ICML),",
      "citeRegEx" : "8",
      "shortCiteRegEx" : null,
      "year" : 2017
    }, {
      "title" : "Group equivariant convolutional networks",
      "author" : [ "T. Cohen", "M. Welling" ],
      "venue" : "International Conference on Machine Learning (ICML),",
      "citeRegEx" : "9",
      "shortCiteRegEx" : null,
      "year" : 2016
    }, {
      "title" : "Toward deeper understanding of neural networks: The power of initialization and a dual view on expressivity",
      "author" : [ "A. Daniely", "R. Frostig", "Y. Singer" ],
      "venue" : "Advances in Neural Information Processing Systems (NIPS),",
      "citeRegEx" : "10",
      "shortCiteRegEx" : null,
      "year" : 2016
    }, {
      "title" : "Vector Measures",
      "author" : [ "J. Diestel", "J.J. Uhl" ],
      "venue" : "American Mathematical Society,",
      "citeRegEx" : "11",
      "shortCiteRegEx" : null,
      "year" : 1977
    }, {
      "title" : "Efficient SVM training using low-rank kernel representations",
      "author" : [ "S. Fine", "K. Scheinberg" ],
      "venue" : "Journal of Machine Learning Research (JMLR), 2:243–264,",
      "citeRegEx" : "12",
      "shortCiteRegEx" : null,
      "year" : 2001
    }, {
      "title" : "Invariant kernel functions for pattern analysis and machine learning",
      "author" : [ "B. Haasdonk", "H. Burkhardt" ],
      "venue" : "Machine learning, 68(1):35–61,",
      "citeRegEx" : "13",
      "shortCiteRegEx" : null,
      "year" : 2007
    }, {
      "title" : "Backpropagation applied to handwritten zip code recognition",
      "author" : [ "Y. LeCun", "B. Boser", "J.S. Denker", "D. Henderson", "R.E. Howard", "W. Hubbard", "L.D. Jackel" ],
      "venue" : "Neural computation, 1(4):541–551,",
      "citeRegEx" : "14",
      "shortCiteRegEx" : null,
      "year" : 1989
    }, {
      "title" : "End-to-End Kernel Learning with Supervised Convolutional Kernel Networks",
      "author" : [ "J. Mairal" ],
      "venue" : "Advances in Neural Information Processing Systems (NIPS),",
      "citeRegEx" : "15",
      "shortCiteRegEx" : null,
      "year" : 2016
    }, {
      "title" : "Convolutional kernel networks",
      "author" : [ "J. Mairal", "P. Koniusz", "Z. Harchaoui", "C. Schmid" ],
      "venue" : "Advances in Neural Information Processing Systems (NIPS),",
      "citeRegEx" : "16",
      "shortCiteRegEx" : null,
      "year" : 2014
    }, {
      "title" : "Group invariant scattering",
      "author" : [ "S. Mallat" ],
      "venue" : "Communications on Pure and Applied Mathematics, 65(10):1331–1398,",
      "citeRegEx" : "17",
      "shortCiteRegEx" : null,
      "year" : 2012
    }, {
      "title" : "Kernel analysis of deep networks",
      "author" : [ "G. Montavon", "M.L. Braun", "K.-R. Müller" ],
      "venue" : "Journal of Machine Learning Research (JMLR), 12:2563–2581,",
      "citeRegEx" : "18",
      "shortCiteRegEx" : null,
      "year" : 2011
    }, {
      "title" : "Learning with group invariant features: A kernel perspective",
      "author" : [ "Y. Mroueh", "S. Voinea", "T.A. Poggio" ],
      "venue" : "Advances in Neural Information Processing Systems (NIPS),",
      "citeRegEx" : "19",
      "shortCiteRegEx" : null,
      "year" : 2015
    }, {
      "title" : "Kernel mean embedding of distributions: A review and beyond",
      "author" : [ "K. Muandet", "K. Fukumizu", "B. Sriperumbudur", "B. Schölkopf" ],
      "venue" : "Foundations and Trends R  © in Machine Learning,",
      "citeRegEx" : "20",
      "shortCiteRegEx" : "20",
      "year" : 2017
    }, {
      "title" : "Deep roto-translation scattering for object classification",
      "author" : [ "E. Oyallon", "S. Mallat" ],
      "venue" : "Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition (CVPR),",
      "citeRegEx" : "21",
      "shortCiteRegEx" : null,
      "year" : 2015
    }, {
      "title" : "Local group invariant representations via orbit embeddings",
      "author" : [ "A. Raj", "A. Kumar", "Y. Mroueh", "T. Fletcher", "B. Schoelkopf" ],
      "venue" : "International Conference on Artificial Intelligence and Statistics (AISTATS),",
      "citeRegEx" : "22",
      "shortCiteRegEx" : null,
      "year" : 2017
    }, {
      "title" : "Integral transforms, reproducing kernels and their applications, volume 369",
      "author" : [ "S. Saitoh" ],
      "venue" : "CRC Press,",
      "citeRegEx" : "23",
      "shortCiteRegEx" : null,
      "year" : 1997
    }, {
      "title" : "Positive definite functions on spheres",
      "author" : [ "I.J. Schoenberg" ],
      "venue" : "Duke Mathematical Journal, 9(1):96– 108,",
      "citeRegEx" : "24",
      "shortCiteRegEx" : null,
      "year" : 1942
    }, {
      "title" : "Support Vector Learning",
      "author" : [ "B. Schölkopf" ],
      "venue" : "PhD thesis, Technischen Universität Berlin,",
      "citeRegEx" : "25",
      "shortCiteRegEx" : null,
      "year" : 1997
    }, {
      "title" : "Nonlinear component analysis as a kernel eigenvalue problem",
      "author" : [ "B. Schölkopf", "A. Smola", "K.-R. Müller" ],
      "venue" : "Neural Computation, 10(5):1299–1319,",
      "citeRegEx" : "26",
      "shortCiteRegEx" : null,
      "year" : 1998
    }, {
      "title" : "Learning with kernels: support vector machines, regularization, optimization, and beyond",
      "author" : [ "B. Schölkopf", "A.J. Smola" ],
      "venue" : null,
      "citeRegEx" : "27",
      "shortCiteRegEx" : "27",
      "year" : 2001
    }, {
      "title" : "Understanding machine learning: From theory to algorithms",
      "author" : [ "S. Shalev-Shwartz", "S. Ben-David" ],
      "venue" : "Cambridge university press,",
      "citeRegEx" : "28",
      "shortCiteRegEx" : null,
      "year" : 2014
    }, {
      "title" : "Rotation, scaling and deformation invariant scattering for texture discrimination",
      "author" : [ "L. Sifre", "S. Mallat" ],
      "venue" : "Proceedings of the IEEE conference on computer vision and pattern recognition (CVPR),",
      "citeRegEx" : "29",
      "shortCiteRegEx" : null,
      "year" : 2013
    }, {
      "title" : "Very deep convolutional networks for large-scale image recognition",
      "author" : [ "K. Simonyan", "A. Zisserman" ],
      "venue" : "International Conference on Learning Representations (ICLR),",
      "citeRegEx" : "30",
      "shortCiteRegEx" : null,
      "year" : 2014
    }, {
      "title" : "Sparse greedy matrix approximation for machine learning",
      "author" : [ "A.J. Smola", "B. Schölkopf" ],
      "venue" : "Proceedings of the International Conference on Machine Learning (ICML),",
      "citeRegEx" : "31",
      "shortCiteRegEx" : null,
      "year" : 2000
    }, {
      "title" : "Harmonic Analysis: Real-variable Methods, Orthogonality, and Oscillatory Integrals",
      "author" : [ "E.M. Stein" ],
      "venue" : "Princeton University Press,",
      "citeRegEx" : "32",
      "shortCiteRegEx" : null,
      "year" : 1993
    }, {
      "title" : "Statistics of natural image categories",
      "author" : [ "A. Torralba", "A. Oliva" ],
      "venue" : "Network: computation in neural systems, 14(3):391–412,",
      "citeRegEx" : "33",
      "shortCiteRegEx" : null,
      "year" : 2003
    }, {
      "title" : "Using the Nyström method to speed up kernel machines",
      "author" : [ "C. Williams", "M. Seeger" ],
      "venue" : "Advances in Neural Information Processing Systems (NIPS),",
      "citeRegEx" : "34",
      "shortCiteRegEx" : null,
      "year" : 2001
    }, {
      "title" : "l1-regularized neural networks are improperly learnable in polynomial time",
      "author" : [ "Y. Zhang", "J.D. Lee", "M.I. Jordan" ],
      "venue" : "International Conference on Machine Learning (ICML),",
      "citeRegEx" : "35",
      "shortCiteRegEx" : null,
      "year" : 2016
    }, {
      "title" : "Convexified convolutional neural networks",
      "author" : [ "Y. Zhang", "P. Liang", "M.J. Wainwright" ],
      "venue" : "International Conference on Machine Learning (ICML),",
      "citeRegEx" : "36",
      "shortCiteRegEx" : null,
      "year" : 2017
    } ],
    "referenceMentions" : [ {
      "referenceID" : 13,
      "context" : "In particular, convolutional neural networks (CNNs) [14] have shown to model well the local appearance of natural images at multiple scales, while also representing images with some invariance through pooling operations.",
      "startOffset" : 52,
      "endOffset" : 56
    }, {
      "referenceID" : 4,
      "context" : "The scattering transform [5, 17] is a recent attempt to characterize convolutional multilayer architectures based on wavelets.",
      "startOffset" : 25,
      "endOffset" : 32
    }, {
      "referenceID" : 16,
      "context" : "The scattering transform [5, 17] is a recent attempt to characterize convolutional multilayer architectures based on wavelets.",
      "startOffset" : 25,
      "endOffset" : 32
    }, {
      "referenceID" : 26,
      "context" : "In this work, we study these theoretical properties for more standard convolutional architectures from the point of view of positive definite kernels [27].",
      "startOffset" : 150,
      "endOffset" : 154
    }, {
      "referenceID" : 14,
      "context" : "Specifically, we consider a functional space derived from a kernel for multi-dimensional signals, which admits a multilayer and convolutional structure that generalizes the construction of convolutional kernel networks (CKNs) [15, 16].",
      "startOffset" : 226,
      "endOffset" : 234
    }, {
      "referenceID" : 15,
      "context" : "Specifically, we consider a functional space derived from a kernel for multi-dimensional signals, which admits a multilayer and convolutional structure that generalizes the construction of convolutional kernel networks (CKNs) [15, 16].",
      "startOffset" : 226,
      "endOffset" : 234
    }, {
      "referenceID" : 14,
      "context" : "We show that this functional space contains a large class of CNNs with smooth homogeneous activation functions in addition to CKNs [15], allowing us to obtain theoretical results for both classes of models.",
      "startOffset" : 131,
      "endOffset" : 135
    }, {
      "referenceID" : 16,
      "context" : "On the one hand, we study the translation-invariance properties of the kernel representation and its stability to the action of diffeomorphisms, obtaining similar guarantees as the scattering transform [17], while preserving signal information.",
      "startOffset" : 202,
      "endOffset" : 206
    }, {
      "referenceID" : 14,
      "context" : "Our work relies on image representations introduced in the context of convolutional kernel networks [15, 16], which yield a sequence of spatial maps similar to traditional CNNs, but each point on the maps is possibly infinite-dimensional and lives in a reproducing kernel Hilbert space (RKHS).",
      "startOffset" : 100,
      "endOffset" : 108
    }, {
      "referenceID" : 15,
      "context" : "Our work relies on image representations introduced in the context of convolutional kernel networks [15, 16], which yield a sequence of spatial maps similar to traditional CNNs, but each point on the maps is possibly infinite-dimensional and lives in a reproducing kernel Hilbert space (RKHS).",
      "startOffset" : 100,
      "endOffset" : 108
    }, {
      "referenceID" : 14,
      "context" : "Since computing the corresponding Gram matrix as in classical kernel machines is computationally impractical, CKNs provide an approximation scheme consisting of learning finite-dimensional subspaces of each RKHS’s layer, where the data is projected, see [15].",
      "startOffset" : 254,
      "endOffset" : 258
    }, {
      "referenceID" : 16,
      "context" : "Another major source of inspiration is the study of group-invariance and stability to the action of diffeomorphisms of scattering networks [17], which introduced the main formalism and several proof techniques from harmonic analysis that were keys to our results.",
      "startOffset" : 139,
      "endOffset" : 143
    }, {
      "referenceID" : 5,
      "context" : "Invariance to groups of transformations was also studied for more classical convolutional neural networks from methodological and empirical points of view [6, 9], and for shallow learned representations [1] or kernel methods [13, 19, 22].",
      "startOffset" : 155,
      "endOffset" : 161
    }, {
      "referenceID" : 8,
      "context" : "Invariance to groups of transformations was also studied for more classical convolutional neural networks from methodological and empirical points of view [6, 9], and for shallow learned representations [1] or kernel methods [13, 19, 22].",
      "startOffset" : 155,
      "endOffset" : 161
    }, {
      "referenceID" : 0,
      "context" : "Invariance to groups of transformations was also studied for more classical convolutional neural networks from methodological and empirical points of view [6, 9], and for shallow learned representations [1] or kernel methods [13, 19, 22].",
      "startOffset" : 203,
      "endOffset" : 206
    }, {
      "referenceID" : 12,
      "context" : "Invariance to groups of transformations was also studied for more classical convolutional neural networks from methodological and empirical points of view [6, 9], and for shallow learned representations [1] or kernel methods [13, 19, 22].",
      "startOffset" : 225,
      "endOffset" : 237
    }, {
      "referenceID" : 18,
      "context" : "Invariance to groups of transformations was also studied for more classical convolutional neural networks from methodological and empirical points of view [6, 9], and for shallow learned representations [1] or kernel methods [13, 19, 22].",
      "startOffset" : 225,
      "endOffset" : 237
    }, {
      "referenceID" : 21,
      "context" : "Invariance to groups of transformations was also studied for more classical convolutional neural networks from methodological and empirical points of view [6, 9], and for shallow learned representations [1] or kernel methods [13, 19, 22].",
      "startOffset" : 225,
      "endOffset" : 237
    }, {
      "referenceID" : 6,
      "context" : "Early multilayer kernel machines appear for instance in [7, 26].",
      "startOffset" : 56,
      "endOffset" : 63
    }, {
      "referenceID" : 25,
      "context" : "Early multilayer kernel machines appear for instance in [7, 26].",
      "startOffset" : 56,
      "endOffset" : 63
    }, {
      "referenceID" : 24,
      "context" : "Shallow kernels for images modelling local regions were also proposed in [25], and a multilayer construction was proposed in [4].",
      "startOffset" : 73,
      "endOffset" : 77
    }, {
      "referenceID" : 3,
      "context" : "Shallow kernels for images modelling local regions were also proposed in [25], and a multilayer construction was proposed in [4].",
      "startOffset" : 125,
      "endOffset" : 128
    }, {
      "referenceID" : 1,
      "context" : "More recently, different models based on kernels are introduced in [2, 10, 18] to gain some theoretical insight about classical multilayer neural networks, while kernels are used to define convex models for two-layer neural networks in [36].",
      "startOffset" : 67,
      "endOffset" : 78
    }, {
      "referenceID" : 9,
      "context" : "More recently, different models based on kernels are introduced in [2, 10, 18] to gain some theoretical insight about classical multilayer neural networks, while kernels are used to define convex models for two-layer neural networks in [36].",
      "startOffset" : 67,
      "endOffset" : 78
    }, {
      "referenceID" : 17,
      "context" : "More recently, different models based on kernels are introduced in [2, 10, 18] to gain some theoretical insight about classical multilayer neural networks, while kernels are used to define convex models for two-layer neural networks in [36].",
      "startOffset" : 67,
      "endOffset" : 78
    }, {
      "referenceID" : 35,
      "context" : "More recently, different models based on kernels are introduced in [2, 10, 18] to gain some theoretical insight about classical multilayer neural networks, while kernels are used to define convex models for two-layer neural networks in [36].",
      "startOffset" : 236,
      "endOffset" : 240
    }, {
      "referenceID" : 7,
      "context" : "Finally, we note that Lipschitz stability of deep models to additive perturbations was found to be important to get robustness to adversarial examples [8].",
      "startOffset" : 151,
      "endOffset" : 154
    }, {
      "referenceID" : 16,
      "context" : "Then, we consider notation from signal processing similar to [17].",
      "startOffset" : 61,
      "endOffset" : 65
    }, {
      "referenceID" : 14,
      "context" : "The construction follows closely that of convolutional kernel networks [15] but generalizes it to input signals defined on the continuous domain Ω = R (which does not prevent signals to have compact support), as done by Mallat [17] for analyzing the properties of the scattering transform; the issue of discretization where Ω is a discrete grid is addressed in Section 2.",
      "startOffset" : 71,
      "endOffset" : 75
    }, {
      "referenceID" : 16,
      "context" : "The construction follows closely that of convolutional kernel networks [15] but generalizes it to input signals defined on the continuous domain Ω = R (which does not prevent signals to have compact support), as done by Mallat [17] for analyzing the properties of the scattering transform; the issue of discretization where Ω is a discrete grid is addressed in Section 2.",
      "startOffset" : 227,
      "endOffset" : 231
    }, {
      "referenceID" : 14,
      "context" : "As in [15], we use homogeneous dot-product kernels of the form",
      "startOffset" : 6,
      "endOffset" : 10
    }, {
      "referenceID" : 14,
      "context" : "As in [15], we apply a linear convolution operator Ak with a Gaussian kernel at scale σk, hσk(u) := σ −d k h(u/σk), where h(u) = (2π) −d/2 exp(−|u|(2)/2).",
      "startOffset" : 6,
      "endOffset" : 10
    }, {
      "referenceID" : 4,
      "context" : "Note that a similar pooling operator is used in the scattering representation [5, 17], though in a different way which does not affect subsequent layers.",
      "startOffset" : 78,
      "endOffset" : 85
    }, {
      "referenceID" : 16,
      "context" : "Note that a similar pooling operator is used in the scattering representation [5, 17], though in a different way which does not affect subsequent layers.",
      "startOffset" : 78,
      "endOffset" : 85
    }, {
      "referenceID" : 16,
      "context" : "The previous construction defines a kernel representation for general signals in L(2)(Ω,H0), which is an abstract object defined for theoretical purposes, as often done in signal processing [17].",
      "startOffset" : 190,
      "endOffset" : 194
    }, {
      "referenceID" : 14,
      "context" : "In practice, signals are discrete, and it is thus important to discuss the problem of discretization, as done in [15].",
      "startOffset" : 113,
      "endOffset" : 117
    }, {
      "referenceID" : 29,
      "context" : "This suggests using small values for ek, sk, as in typical recent convolutional architectures [30].",
      "startOffset" : 94,
      "endOffset" : 98
    }, {
      "referenceID" : 14,
      "context" : "The second one requires finite-dimensional approximation of the kernel maps, leading to the convolutional kernel network model of [15].",
      "startOffset" : 130,
      "endOffset" : 134
    }, {
      "referenceID" : 11,
      "context" : "Typically, each RKHS’s mapping is approximated by performing a projection onto a subspace of finite dimension, a classical approach to make kernel methods work at large scale [12, 31, 34].",
      "startOffset" : 175,
      "endOffset" : 187
    }, {
      "referenceID" : 30,
      "context" : "Typically, each RKHS’s mapping is approximated by performing a projection onto a subspace of finite dimension, a classical approach to make kernel methods work at large scale [12, 31, 34].",
      "startOffset" : 175,
      "endOffset" : 187
    }, {
      "referenceID" : 33,
      "context" : "Typically, each RKHS’s mapping is approximated by performing a projection onto a subspace of finite dimension, a classical approach to make kernel methods work at large scale [12, 31, 34].",
      "startOffset" : 175,
      "endOffset" : 187
    }, {
      "referenceID" : 16,
      "context" : "We use a similar characterization of stability to the one introduced by Mallat [17]: for a C(1)-diffeomorphism τ : Ω → Ω, let Lτ denote the linear operator defined by Lτx(u) = x(u− τ(u)), the representation Φ(·) is stable under the action of diffeomorphisms if there exist two constants C1 and C2 such that ‖Φ(Lτx)− Φ(x)‖ ≤ (C1‖∇τ‖∞ + C2‖τ‖∞)‖x‖, (4) where ∇τ is the Jacobian of τ , ‖∇τ‖∞ := supu∈Ω ‖∇τ(u)‖, and ‖τ‖∞ := supu∈Ω |τ(u)|.",
      "startOffset" : 79,
      "endOffset" : 83
    }, {
      "referenceID" : 16,
      "context" : "As in [17], our results will assume the regularity condition ‖∇τ‖∞ < 1/2.",
      "startOffset" : 6,
      "endOffset" : 10
    }, {
      "referenceID" : 16,
      "context" : "Note that unlike the scattering transform [17], we do not have a representation that preserves the norm, i.",
      "startOffset" : 42,
      "endOffset" : 46
    }, {
      "referenceID" : 32,
      "context" : "Yet, natural signals such as natural images often have high energy in the low-frequency domain (the power spectra of natural images is often considered to have a polynomial decay in 1/f(2), where f is the signal frequency [33]).",
      "startOffset" : 222,
      "endOffset" : 226
    }, {
      "referenceID" : 2,
      "context" : "In particular, with some additional assumptions on the kernels Kk, it is possible to show [3]: ‖Φ(x)‖ ≥ ‖An · · ·A0x‖.",
      "startOffset" : 90,
      "endOffset" : 93
    }, {
      "referenceID" : 2,
      "context" : "Additionally, when using a Gaussian kernel mapping φn+1 on top of the last feature map as a prediction layer instead of a linear layer, the final representation Φf (x) := φn+1(Φn(A0x)) preserves stability and always has unit norm (see the extended version of the paper [3] for details).",
      "startOffset" : 269,
      "endOffset" : 272
    }, {
      "referenceID" : 16,
      "context" : "The dependence on a notion of depth (the number of layers n here) also appears in [17], with a factor equal to the maximal length of scattering paths, and with the same condition ‖∇τ‖∞ ≤ 1/2.",
      "startOffset" : 82,
      "endOffset" : 86
    }, {
      "referenceID" : 2,
      "context" : "However, while the norm of the scattering representation is preserved as the length of these paths goes to infinity, the norm of Φ(x) can decrease with depth due to pooling layers, though this concern may be alleviated by using an additional non-linear prediction layer, as discussed previously (see also [3]).",
      "startOffset" : 305,
      "endOffset" : 308
    }, {
      "referenceID" : 16,
      "context" : "As in the analysis of the scattering transform of [17], we have characterized the stability and shiftinvariance of the data representation for continuous signals, in order to give some intuition about the properties of the corresponding discrete representation, which we have described in Section 2.",
      "startOffset" : 50,
      "endOffset" : 54
    }, {
      "referenceID" : 14,
      "context" : "Another approximation performed in the CKN model of [15] consists of adding projection steps on finite-dimensional subspaces of the RKHS’s layers, as discusssed in Section 2.",
      "startOffset" : 52,
      "endOffset" : 56
    }, {
      "referenceID" : 14,
      "context" : "The stability of the predictions can then be controlled through the norm of the last (linear) layer, which is typically used as a regularizer [15].",
      "startOffset" : 142,
      "endOffset" : 146
    }, {
      "referenceID" : 21,
      "context" : "The pooling operator on the group G is defined in a similar fashion as [22] by",
      "startOffset" : 71,
      "endOffset" : 75
    }, {
      "referenceID" : 20,
      "context" : ", in the roto-translation group [21], one might want invariance to a global rotation but stability to local translations.",
      "startOffset" : 32,
      "endOffset" : 36
    }, {
      "referenceID" : 34,
      "context" : "As noticed in [35, 36], this is for instance the case for the inverse polynomial kernel described in Appendix B, In Figure 2, we plot and compare these different variants of relu.",
      "startOffset" : 14,
      "endOffset" : 22
    }, {
      "referenceID" : 35,
      "context" : "As noticed in [35, 36], this is for instance the case for the inverse polynomial kernel described in Appendix B, In Figure 2, we plot and compare these different variants of relu.",
      "startOffset" : 14,
      "endOffset" : 22
    }, {
      "referenceID" : 34,
      "context" : "We note that a similar construction for fully connected networks with constraints on weights and inputs was given in [35].",
      "startOffset" : 117,
      "endOffset" : 121
    }, {
      "referenceID" : 34,
      "context" : "(Left) non-homogeneous setting of [35, 36].",
      "startOffset" : 34,
      "endOffset" : 42
    }, {
      "referenceID" : 35,
      "context" : "(Left) non-homogeneous setting of [35, 36].",
      "startOffset" : 34,
      "endOffset" : 42
    }, {
      "referenceID" : 26,
      "context" : ", the notion of margin bounds for SVMs [27, 28]).",
      "startOffset" : 39,
      "endOffset" : 47
    }, {
      "referenceID" : 27,
      "context" : ", the notion of margin bounds for SVMs [27, 28]).",
      "startOffset" : 39,
      "endOffset" : 47
    } ],
    "year" : 2017,
    "abstractText" : "In this paper, we study deep signal representations that are near-invariant to groups of transformations and stable to the action of diffeomorphisms without losing signal information. This is achieved by generalizing the multilayer kernel introduced in the context of convolutional kernel networks and by studying the geometry of the corresponding reproducing kernel Hilbert space. We show that the signal representation is stable, and that models from this functional space, such as a large class of convolutional neural networks, may enjoy the same stability.",
    "creator" : null
  }
}