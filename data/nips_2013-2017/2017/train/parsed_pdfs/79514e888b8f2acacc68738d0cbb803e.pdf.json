{
  "name" : "79514e888b8f2acacc68738d0cbb803e.pdf",
  "metadata" : {
    "source" : "META",
    "title" : "Good Semi-supervised Learning That Requires a Bad GAN",
    "authors" : [ "Zihang Dai", "Zhilin Yang", "Fan Yang", "William W. Cohen", "Ruslan Salakhutdinov" ],
    "emails" : [ "dzihang@cs.cmu.edu", "zhiliny@cs.cmu.edu", "fanyang1@cs.cmu.edu", "wcohen@cs.cmu.edu", "rsalakhu@cs.cmu.edu" ],
    "sections" : [ {
      "heading" : "1 Introduction",
      "text" : "Deep neural networks are usually trained on a large amount of labeled data, and it has been a challenge to apply deep models to datasets with limited labels. Semi-supervised learning (SSL) aims to leverage the large amount of unlabeled data to boost the model performance, particularly focusing on the setting where the amount of available labeled data is limited. Traditional graph-based methods [2, 26] were extended to deep neural networks [22, 23, 8], which involves applying convolutional neural networks [10] and feature learning techniques to graphs so that the underlying manifold structure can be exploited. [15] employs a Ladder network to minimize the layerwise reconstruction loss in addition to the standard classification loss. Variational auto-encoders have also been used for semi-supervised learning [7, 12] by maximizing the variational lower bound of the unlabeled data log-likelihood.\nRecently, generative adversarial networks (GANs) [6] were demonstrated to be able to generate visually realistic images. GANs set up an adversarial game between a discriminator and a generator. The goal of the discriminator is to tell whether a sample is drawn from true data or generated by the generator, while the generator is optimized to generate samples that are not distinguishable by the discriminator. Feature matching (FM) GANs [16] apply GANs to semi-supervised learning on Kclass classification. The objective of the generator is to match the first-order feature statistics between the generator distribution and the true distribution. Instead of binary classification, the discriminator employs a (K + 1)-class objective, where true samples are classified into the first K classes and generated samples are classified into the (K+ 1)-th class. This (K+ 1)-class discriminator objective leads to strong empirical results, and was later widely used to evaluate the effectiveness of generative models [5, 21].\nThough empirically feature matching improves semi-supervised classification performance, the following questions still remain open. First, it is not clear why the formulation of the discriminator ∗Equal contribution. Ordering determined by dice rolling. 2Code is available at https://github.com/kimiyoung/ssl_bad_gan.\n31st Conference on Neural Information Processing Systems (NIPS 2017), Long Beach, CA, USA.\ncan improve the performance when combined with a generator. Second, it seems that good semisupervised learning and a good generator cannot be obtained at the same time. For example, [16] observed that mini-batch discrimination generates better images than feature matching, but feature matching obtains a much better semi-supervised learning performance. The same phenomenon was also observed in [21], where the model generated better images but failed to improve the performance on semi-supervised learning.\nIn this work, we take a step towards addressing these questions. First, we show that given the current (K + 1)-class discriminator formulation of GAN-based SSL, good semi-supervised learning requires a “bad” generator. Here by bad we mean the generator distribution should not match the true data distribution. Then, we give the definition of a preferred generator, which is to generate complement samples in the feature space. Theoretically, under mild assumptions, we show that a properly optimized discriminator obtains correct decision boundaries in high-density areas in the feature space if the generator is a complement generator.\nBased on our theoretical insights, we analyze why feature matching works on 2-dimensional toy datasets. It turns out that our practical observations align well with our theory. However, we also find that the feature matching objective has several drawbacks. Therefore, we develop a novel formulation of the discriminator and generator objectives to address these drawbacks. In our approach, the generator minimizes the KL divergence between the generator distribution and a target distribution that assigns high densities for data points with low densities in the true distribution, which corresponds to the idea of a complement generator. Furthermore, to enforce our assumptions in the theoretical analysis, we add the conditional entropy term to the discriminator objective.\nEmpirically, our approach substantially improves over vanilla feature matching GANs, and obtains new state-of-the-art results on MNIST, SVHN, and CIFAR-10 when all methods are compared under the same discriminator architecture. Our results on MNIST and SVHN also represent state-of-the-art amongst all single-model results."
    }, {
      "heading" : "2 Related Work",
      "text" : "Besides the adversarial feature matching approach [16], several previous works have incorporated the idea of adversarial training in semi-supervised learning. Notably, [19] proposes categorical generative adversarial networks (CatGAN), which substitutes the binary discriminator in standard GAN with a multi-class classifier, and trains both the generator and the discriminator using information theoretical criteria on unlabeled data. From the perspective of regularization, [14, 13] propose virtual adversarial training (VAT), which effectively smooths the output distribution of the classifier by seeking virtually adversarial samples. It is worth noting that VAT bears a similar merit to our approach, which is to learn from auxiliary non-realistic samples rather than realistic data samples. Despite the similarity, the principles of VAT and our approach are orthogonal, where VAT aims to enforce a smooth function while we aim to leverage a generator to better detect the low-density boundaries. Different from aforementioned approaches, [24] proposes to train conditional generators with adversarial training to obtain complete sample pairs, which can be directly used as additional training cases. Recently, Triple GAN [11] also employs the idea of conditional generator, but uses adversarial cost to match the two model-defined factorizations of the joint distribution with the one defined by paired data.\nApart from adversarial training, there has been other efforts in semi-supervised learning using deep generative models recently. As an early work, [7] adapts the original Variational Auto-Encoder (VAE) to a semi-supervised learning setting by treating the classification label as an additional latent variable in the directed generative model. [12] adds auxiliary variables to the deep VAE structure to make variational distribution more expressive. With the boosted model expressiveness, auxiliary deep generative models (ADGM) improve the semi-supervised learning performance upon the semi-supervised VAE. Different from the explicit usage of deep generative models, the Ladder networks [15] take advantage of the local (layerwise) denoising auto-encoding criterion, and create a more informative unsupervised signal through lateral connection."
    }, {
      "heading" : "3 Theoretical Analysis",
      "text" : "Given a labeled set L = {(x, y)}, let {1, 2, · · · ,K} be the label space for classification. Let D and G denote the discriminator and generator, and PD and pG denote the corresponding distributions.\nConsider the discriminator objective function of GAN-based semi-supervised learning [16]:\nmax D Ex,y∼L logPD(y|x, y ≤ K) + Ex∼p logPD(y ≤ K|x) + Ex∼pG logPD(K + 1|x), (1)\nwhere p is the true data distribution. The probability distribution PD is over K + 1 classes where the first K classes are true classes and the (K + 1)-th class is the fake class. The objective function consists of three terms. The first term is to maximize the log conditional probability for labeled data, which is the standard cost as in supervised learning setting. The second term is to maximize the log probability of the first K classes for unlabeled data. The third term is to maximize the log probability of the (K + 1)-th class for generated data. Note that the above objective function bears a similar merit to the original GAN formulation if we treat P (K + 1|x) to be the probability of fake samples, while the only difference is that we split the probability of true samples into K sub-classes.\nLet f(x) be a nonlinear vector-valued function, and wk be the weight vector for class k. As a standard setting in previous work [16, 5], the discriminator D is defined as PD(k|x) = exp(w > k f(x))∑K+1\nk′=1 exp(w > k′f(x))\n.\nSince this is a form of over-parameterization, wK+1 is fixed as a zero vector [16]. We next discuss the choices of different possible G’s."
    }, {
      "heading" : "3.1 Perfect Generator",
      "text" : "Here, by perfect generator we mean that the generator distribution pG exactly matches the true data distribution p, i.e., pG = p. We now show that when the generator is perfect, it does not improve the generalization over the supervised learning setting.\nProposition 1. If pG = p, and D has infinite capacity, then for any optimal solution D = (w, f) of the following supervised objective,\nmax D\nEx,y∼L logPD(y|x, y ≤ K), (2)\nthere exists D∗ = (w∗, f∗) such that D∗ maximizes Eq. (1) and that for all x, PD(y|x, y ≤ K) = PD∗(y|x, y ≤ K).\nThe proof is provided in the supplementary material. Proposition 1 states that for any optimal solution D of the supervised objective, there exists an optimal solution D∗ of the (K+ 1)-class objective such that D and D∗ share the same generalization error. In other words, using the (K + 1)-class objective does not prevent the model from experiencing any arbitrarily high generalization error that it could suffer from under the supervised objective. Moreover, since all the optimal solutions are equivalent w.r.t. the (K + 1)-class objective, it is the optimization algorithm that really decides which specific solution the model will reach, and thus what generalization performance it will achieve. This implies that when the generator is perfect, the (K + 1)-class objective by itself is not able to improve the generalization performance. In fact, in many applications, an almost infinite amount of unlabeled data is available, so learning a perfect generator for purely sampling purposes should not be useful. In this case, our theory suggests that not only the generator does not help, but also unlabeled data is not effectively utilized when the generator is perfect."
    }, {
      "heading" : "3.2 Complement Generator",
      "text" : "The function f maps data points in the input space to the feature space. Let pk(f) be the density of the data points of class k in the feature space. Given a threshold k, let Fk be a subset of the data support where pk(f) > k, i.e., Fk = {f : pk(f) > k}. We assume that given { k}Kk=1, the Fk’s are disjoint with a margin. More formally, for any fj ∈ Fj , fk ∈ Fk, and j 6= k, we assume that there exists a real number 0 < α < 1 such that αfj + (1− α)fk /∈ Fj ∪ Fk. As long as the probability densities of different classes do not share any mode, i.e., ∀i 6= j, argmaxfpi(f) ∩ argmaxfpj(f) = ∅, this assumption can always be satisfied by tuning the thresholds k’s. With the assumption held, we will show that the model performance would be better if the thresholds could be set to smaller values (ideally zero). We also assume that each Fk contains at least one labeled data point.\nSuppose ∪Kk=1Fk is bounded by a convex set B. If the support FG of a generator G in the feature space is a relative complement set in B, i.e., FG = B − ∪Kk=1Fk, we call G a complement generator. The reason why we utilize a bounded B to define the complement is presented in the supplementary\nmaterial. Note that the definition of complement generator implies that G is a function of f . By treating G as function of f , theoretically D can optimize the original objective function in Eq. (1).\nNow we present the assumption on the convergence conditions of the discriminator. Let U and G be the sets of unlabeled data and generated data.\nAssumption 1. Convergence conditions. When D converges on a finite training set {L,U ,G}, D learns a (strongly) correct decision boundary for all training data points. More specifically, (1) for any (x, y) ∈ L, we have w>y f(x) > w>k f(x) for any other class k 6= y; (2) for any x ∈ G, we have 0 > maxKk=1 w > k f(x); (3) for any x ∈ U , we have maxKk=1 w>k f(x) > 0.\nIn Assumption 1, conditions (1) and (2) assume classification correctness on labeled data and true-fake correctness on generated data respectively, which is directly induced by the objective function. Likewise, it is also reasonable to assume true-fake correctness on unlabeled data, i.e., log ∑\nk expw > k f(x) > 0 for x ∈ U . However, condition (3) goes beyond this and assumes\nmaxk w > k f(x) > 0. We discuss this issue in detail in the supplementary material and argue that these assumptions are reasonable. Moreover, in Section 5, our approach addresses this issue explicitly by adding a conditional entropy term to the discriminator objective to enforce condition (3).\nLemma 1. Suppose for all k, the L2-norms of weights wk are bounded by ‖wk‖2 ≤ C. Suppose that there exists > 0 such that for any fG ∈ FG, there exists f ′G ∈ G such that ‖fG − f ′G‖2 ≤ . With the conditions in Assumption 1, for all k ≤ K, we have w>k fG < C . Corollary 1. When unlimited generated data samples are available, with the conditions in Lemma 1, we have lim|G|→∞ w>k fG ≤ 0.\nSee the supplementary material for the proof.\nProposition 2. Given the conditions in Corollary 1, for all class k ≤ K, for all feature space points fk ∈ Fk, we have w>k fk > w>j fk for any j 6= k.\nProof. Without loss of generality, suppose j = arg maxj 6=k w>j fk. Now we prove it by contradiction. Suppose w>k fk ≤ w>j fk. Since Fk’s are disjoint with a margin, B is a convex set and FG = B − ∪kFk, there exists 0 < α < 1 such that fG = αfk + (1 − α)fj with fG ∈ FG and fj being the feature of a labeled data point in Fj . By Corollary 1, it follows that w>j fG ≤ 0. Thus, w>j fG = αw > j fk + (1 − α)w>j fj ≤ 0. By Assumption 1, w>j fk > 0 and w>j fj > 0, leading to contradiction. It follows that w>k fk > w > j fk for any j 6= k.\nProposition 2 guarantees that when G is a complement generator, under mild assumptions, a nearoptimal D learns correct decision boundaries in each high-density subset Fk (defined by k) of the data support in the feature space. Intuitively, the generator generates complement samples so the logits of the true classes are forced to be low in the complement. As a result, the discriminator obtains class boundaries in low-density areas. This builds a connection between our approach with manifold-based methods [2, 26] which also leverage the low-density boundary assumption.\nWith our theoretical analysis, we can now answer the questions raised in Section 1. First, the (K+ 1)- class formulation is effective because the generated complement samples encourage the discriminator to place the class boundaries in low-density areas (Proposition 2). Second, good semi-supervised learning indeed requires a bad generator because a perfect generator is not able to improve the generalization performance (Proposition 1)."
    }, {
      "heading" : "4 Case Study on Synthetic Data",
      "text" : "In the previous section, we have established the fact a complement generator, instead of a perfect generator, is what makes a good semi-supervised learning algorithm. Now, to get a more intuitive understanding, we conduct a case study based on two 2D synthetic datasets, where we can easily verify our theoretical analysis by visualizing the model behaviors. In addition, by analyzing how feature matching (FM) [16] works in 2D space, we identify some potential problems of it, which motivates our approach to be introduced in the next section. Specifically, two synthetic datasets are four spins and two circles, as shown in Fig. 1.\nSoundness of complement generator Firstly, to verify that the complement generator is a preferred choice, we construct the complement generator by uniformly sampling from the a bounded 2D box that contains all unlabeled data, and removing those on the manifold. Based on the complement generator, the result on four spins is visualized in Fig. 2. As expected, both the classification and true-fake decision boundaries are almost perfect. More importantly, the classification decision boundary always lies in the fake data area (left panel), which well matches our theoretical analysis.\nVisualization of feature space Next, to verify our analysis about the feature space, we choose the feature dimension to be 2, apply the FM to the simpler dataset of two circles, and visualize the feature space in Fig. 3. As we can see, most of the generated features (blue points) resides in between the features of two classes (green and orange crosses), although there exists some overlap. As a result, the discriminator can almost perfectly distinguish between true and generated samples as indicated by the black decision boundary, satisfying the our required Assumption 1. Meanwhile, the model obtains a perfect classification boundary (blue line) as our analysis suggests.\nPros and cons of feature matching Finally, to further understand the strength and weakness of FM, we analyze the solution FM reaches on four spins shown in Fig. 4. From the left panel, we can see many of the generated samples actually fall into the data manifold, while the rest scatters around in the nearby surroundings of data manifold. It suggests that by matching the first-order moment by SGD, FM is performing some kind of distribution matching, though in a rather weak manner. Loosely speaking, FM has the effect of generating samples close to the manifold. But due to its weak power in distribution matching, FM will inevitably generate samples outside of the manifold, especially when the data complexity increases. Consequently, the generator density pG is usually lower than the true data density p within the manifold and higher outside. Hence, an optimal discriminator PD∗(K + 1 | x) = p(x)/(p(x) + pG(x)) could still distinguish between true and generated samples in many cases. However, there are two types of mistakes the discriminator can still make\n1. Higher density mistake inside manifold: Since the FM generator still assigns a significant amount of probability mass inside the support, wherever pG > p > 0, an optimal discriminator will incorrectly predict samples in that region as “fake”. Actually, this problem has already shown up when we examine the feature space (Fig. 3).\n2. Collapsing with missing coverage outside manifold: As the feature matching objective for the generator only requires matching the first-order statistics, there exists many trivial solutions the generator can end up with. For example, it can simply collapse to mean of unlabeled features, or a few surrounding modes as along as the feature mean matches. Actually, we do see such\ncollapsing phenomenon in high-dimensional experiments when FM is used (see Fig. 5a and Fig. 5c) As a result, a collapsed generator will fail to cover some gap areas between manifolds. Since the discriminator is only well-defined on the union of the data supports of p and pG, the prediction result in such missing area is under-determined and fully relies on the smoothness of the parametric model. In this case, significant mistakes can also occur."
    }, {
      "heading" : "5 Approach",
      "text" : "As discussed in previous sections, feature matching GANs suffer from the following drawbacks: 1) the first-order moment matching objective does not prevent the generator from collapsing (missing coverage); 2) feature matching can generate high-density samples inside manifold; 3) the discriminator objective does not encourage realization of condition (3) in Assumption 1 as discussed in Section 3.2. Our approach aims to explicitly address the above drawbacks.\nFollowing prior work [16, 6], we employ a GAN-like implicit generator. We first sample a latent variable z from a uniform distribution U(0, 1) for each dimension, and then apply a deep convolutional network to transform z to a sample x."
    }, {
      "heading" : "5.1 Generator Entropy",
      "text" : "Fundamentally, the first drawback concerns the entropy of the distribution of generated features, H(pG(f)). This connection is rather intuitive, as the collapsing issue is a clear sign of low entropy. Therefore, to avoid collapsing and increase coverage, we consider explicitly increasing the entropy.\nAlthough the idea sounds simple and straightforward, there are two practical challenges. Firstly, as implicit generative models, GANs only provide samples rather than an analytic density form. As a result, we cannot evaluate the entropy exactly, which rules out the possibility of naive optimization. More problematically, the entropy is defined in a high-dimensional feature space, which is changing dynamically throughout the training process. Consequently, it is difficult to estimate and optimize the generator entropy in the feature space in a stable and reliable way. Faced with these difficulties, we consider two practical solutions.\nThe first method is inspired by the fact that input space is essentially static, where estimating and optimizing the counterpart quantities would be much more feasible. Hence, we instead increase the generator entropy in the input space, i.e.,H(pG(x)), using a technique derived from an information theoretical perspective and relies on variational inference (VI). Specially, let Z be the latent variable space, and X be the input space. We introduce an additional encoder, q : X 7→ Z , to define a variational upper bound of the negative entropy [3], −H(pG(x)) ≤ −Ex,z∼pG log q(z|x) = LVI. Hence, minimizing the upper bound LVI effectively increases the generator entropy. In our implementation, we formulate q as a diagonal Gaussian with bounded variance, i.e. q(z|x) = N (µ(x), σ2(x)), with 0 < σ(x) < θ, where µ(·) and σ(·) are neural networks, and θ is the threshold to prevent arbitrarily large variance.\nAlternatively, the second method aims at increasing the generator entropy in the feature space by optimizing an auxiliary objective. Concretely, we adapt the pull-away term (PT) [25] as the auxiliary\ncost, LPT = 1N(N−1) ∑N i=1 ∑ j 6=i ( f(xi) >f(xj) ‖f(xi)‖‖f(xj)‖ )2 , where N is the size of a mini-batch and x are samples. Intuitively, the pull-away term tries to orthogonalize the features in each mini-batch by minimizing the squared cosine similarity. Hence, it has the effect of increasing the diversity of generated features and thus the generator entropy."
    }, {
      "heading" : "5.2 Generating Low-Density Samples",
      "text" : "The second drawback of feature matching GANs is that high-density samples can be generated in the feature space, which is not desirable according to our analysis. Similar to the argument in Section 5.1, it is infeasible to directly minimize the density of generated features. Instead, we enforce the generation of samples with low density in the input space. Specifically, given a threshold , we minimize the following term as part of our objective:\nEx∼pG log p(x)I[p(x) > ] (3)\nwhere I[·] is an indicator function. Using a threshold , we ensure that only high-density samples are penalized while low-density samples are unaffected. Intuitively, this objective pushes the generated samples to “move” towards low-density regions defined by p(x). To model the probability distribution over images, we simply adapt the state-of-the-art density estimation model for natural images, namely the PixelCNN++ [17] model. The PixelCNN++ model is used to estimate the density p(x) in Eq. (3). The model is pretrained on the training set, and fixed during semi-supervised training."
    }, {
      "heading" : "5.3 Generator Objective and Interpretation",
      "text" : "Combining our solutions to the first two drawbacks of feature matching GANs, we have the following objective function of the generator:\nmin G\n−H(pG) + Ex∼pG log p(x)I[p(x) > ] + ‖Ex∼pGf(x)− Ex∼Uf(x)‖2. (4)\nThis objective is closely related to the idea of complement generator discussed in Section 3. To see that, let’s first define a target complement distribution in the input space as follows\np∗(x) =\n{ 1 Z 1 p(x) if p(x) > and x ∈ Bx\nC if p(x) ≤ and x ∈ Bx, where Z is a normalizer, C is a constant, and Bx is the set defined by mapping B from the feature space to the input space. With the definition, the KL divergence (KLD) between pG(x) and p∗(x) is\nKL(pG‖p∗) = −H(pG)+Ex∼pG log p(x)I[p(x) > ]+Ex∼pG ( I[p(x) > ] logZ−I[p(x) ≤ ] logC ) .\nThe form of the KLD immediately reveals the aforementioned connection. Firstly, the KLD shares two exactly the same terms with the generator objective (4). Secondly, while p∗(x) is only defined in Bx, there is not such a hard constraint on pG(x). However, the feature matching term in Eq. (4) can be seen as softly enforcing this constraint by bringing generated samples “close” to the true data (Cf. Section 4). Moreover, because the identity function I[·] has zero gradient almost everywhere, the last term in KLD would not contribute any informative gradient to the generator. In summary, optimizing our proposed objective (4) can be understood as minimizing the KL divergence between the generator distribution and a desired complement distribution, which connects our practical solution to our theoretical analysis."
    }, {
      "heading" : "5.4 Conditional Entropy",
      "text" : "In order for the complement generator to work, according to condition (3) in Assumption 1, the discriminator needs to have strong true-fake belief on unlabeled data, i.e., maxKk=1 w > k f(x) > 0. However, the objective function of the discriminator in [16] does not enforce a dominant class. Instead, it only needs ∑K k=1 PD(k|x) > PD(K + 1|x) to obtain a correct decision boundary, while the probabilities PD(k|x) for k ≤ K can possibly be uniformly distributed. To guarantee the strong true-fake belief in the optimal conditions, we add a conditional entropy term to the discriminator objective and it becomes,\nmax D\nEx,y∼L log pD(y|x, y ≤ K) + Ex∼U log pD(y ≤ K|x)+ Ex∼pG log pD(K + 1|x) + Ex∼U K∑\nk=1\npD(k|x) log pD(k|x). (5)\nBy optimizing Eq. (5), the discriminator is encouraged to satisfy condition (3) in Assumption 1. Note that the same conditional entropy term has been used in other semi-supervised learning methods [19, 13] as well, but here we motivate the minimization of conditional entropy based on our theoretical analysis of GAN-based semi-supervised learning.\nTo train the networks, we alternatively update the generator and the discriminator to optimize Eq. (4) and Eq. (5) based on mini-batches. If an encoder is used to maximizeH(pG), the encoder and the generator are updated at the same time."
    }, {
      "heading" : "6 Experiments",
      "text" : "We mainly consider three widely used benchmark datasets, namely MNIST, SVHN, and CIFAR-10. As in previous work, we randomly sample 100, 1,000, and 4,000 labeled samples for MNIST, SVHN,\nand CIFAR-10 respectively during training, and use the standard data split for testing. We use the 10-quantile log probability to define the threshold in Eq. (4). We add instance noise to the input of the discriminator [1, 18], and use spatial dropout [20] to obtain faster convergence. Except for these two modifications, we use the same neural network architecture as in [16]. For fair comparison, we also report the performance of our FM implementation with the aforementioned differences."
    }, {
      "heading" : "6.1 Main Results",
      "text" : "We compare the the results of our best model with state-of-the-art methods on the benchmarks in Table 1. Our proposed methods consistently improve the performance upon feature matching. We achieve new state-of-the-art results on all the datasets when only small discriminator architecture is considered. Our results are also state-of-the-art on MNIST and SVHN among all single-model results, even when compared with methods using self-ensembling and large discriminator architectures. Finally, note that because our method is actually orthogonal to VAT [13], combining VAT with our presented approach should yield further performance improvement in practice."
    }, {
      "heading" : "6.2 Ablation Study",
      "text" : "We report the results of ablation study in Table 2. In the following, we analyze the effects of several components in our model, subject to the intrinsic features of different datasets.\nFirst, the generator entropy terms (VI and PT) (Section 5.1) improve the performance on SVHN and CIFAR by up to 2.2 points in terms of error rate. Moreover, as shown in Fig 5, our model significantly reduces the collapsing effects present in the samples generated by FM, which also indicates that maximizing the generator entropy is beneficial. On MNIST, probably due to its simplicity, no collapsing phenomenon was observed with vanilla FM training [16] or in our setting. Under such circumstances, maximizing the generator entropy seems to be unnecessary, and the estimation bias introduced by approximation techniques can even hurt the performance.\nSecond, the low-density (LD) term is useful when FM indeed generates samples in high-density areas. MNIST is a typical example in this case. When trained with FM, most of the generated hand written digits are highly realistic and have high log probabilities according to the density model (Cf. max log-p in Table 2). Hence, when applied to MNIST, LD improves the performance by a clear margin. By contrast, few of the generated SVHN images are realistic (Cf. Fig. 5a). Quantitatively, SVHN samples are assigned very low log probabilities (Cf. Table 2). As expected, LD has a negligible effect on the performance for SVHN. Moreover, the “max log-p” column in Table 2 shows that while LD can reduce the maximum log probability of the generated MNIST samples by a large margin, it does not yield noticeable difference on SVHN. This further justifies our analysis. Based on the above conclusion, we conjecture LD would not help on CIFAR where sample quality is even lower. Thus, we did not train a density model on CIFAR due to the limit of computational resources.\nThird, adding the conditional entropy term has mixed effects on different datasets. While the conditional entropy (Ent) is an important factor of achieving the best performance on SVHN, it hurts the performance on MNIST and CIFAR. One possible explanation relates to the classic exploitationexploration tradeoff, where minimizing Ent favors exploitation and minimizing the classification loss favors exploration. During the initial phase of training, the discriminator is relatively uncertain and thus the gradient of the Ent term might dominate. As a result, the discriminator learns to be more confident even on incorrect predictions, and thus gets trapped in local minima.\nLastly, we vary the values of the hyper-parameter in Eq. (4). As shown at the bottom of Table 2, reducing clearly leads to better performance, which further justifies our analysis in Sections 4 and 3 that off-manifold samples are favorable."
    }, {
      "heading" : "6.3 Generated Samples",
      "text" : "We compare the generated samples of FM and our approach in Fig. 5. The FM images in Fig. 5c are extracted from previous work [16]. While collapsing is widely observed in FM samples, our model generates diverse “bad” images, which is consistent with our analysis."
    }, {
      "heading" : "7 Conclusions",
      "text" : "In this work, we present a semi-supervised learning framework that uses generated data to boost task performance. Under this framework, we characterize the properties of various generators and theoretically prove that a complementary (i.e. bad) generator improves generalization. Empirically our proposed method improves the performance of image classification on several benchmark datasets."
    }, {
      "heading" : "Acknowledgement",
      "text" : "This work was supported by the DARPA award D17AP00001, the Google focused award, and the Nvidia NVAIL award. The authors would also like to thank Han Zhao for his insightful feedback."
    } ],
    "references" : [ {
      "title" : "Towards principled methods for training generative adversarial networks",
      "author" : [ "Martin Arjovsky", "Léon Bottou" ],
      "venue" : "In NIPS 2016 Workshop on Adversarial Training. In review for ICLR,",
      "citeRegEx" : "1",
      "shortCiteRegEx" : "1",
      "year" : 2017
    }, {
      "title" : "Manifold regularization: A geometric framework for learning from labeled and unlabeled examples",
      "author" : [ "Mikhail Belkin", "Partha Niyogi", "Vikas Sindhwani" ],
      "venue" : "Journal of machine learning research,",
      "citeRegEx" : "2",
      "shortCiteRegEx" : "2",
      "year" : 2006
    }, {
      "title" : "Calibrating energy-based generative adversarial networks",
      "author" : [ "Zihang Dai", "Amjad Almahairi", "Philip Bachman", "Eduard Hovy", "Aaron Courville" ],
      "venue" : "arXiv preprint arXiv:1702.01691,",
      "citeRegEx" : "3",
      "shortCiteRegEx" : "3",
      "year" : 2017
    }, {
      "title" : "Adversarial feature learning",
      "author" : [ "Jeff Donahue", "Philipp Krähenbühl", "Trevor Darrell" ],
      "venue" : "arXiv preprint arXiv:1605.09782,",
      "citeRegEx" : "4",
      "shortCiteRegEx" : "4",
      "year" : 2016
    }, {
      "title" : "Adversarially learned inference",
      "author" : [ "Vincent Dumoulin", "Ishmael Belghazi", "Ben Poole", "Alex Lamb", "Martin Arjovsky", "Olivier Mastropietro", "Aaron Courville" ],
      "venue" : "arXiv preprint arXiv:1606.00704,",
      "citeRegEx" : "5",
      "shortCiteRegEx" : "5",
      "year" : 2016
    }, {
      "title" : "Generative adversarial nets",
      "author" : [ "Ian Goodfellow", "Jean Pouget-Abadie", "Mehdi Mirza", "Bing Xu", "David Warde-Farley", "Sherjil Ozair", "Aaron Courville", "Yoshua Bengio" ],
      "venue" : "In Advances in neural information processing systems,",
      "citeRegEx" : "6",
      "shortCiteRegEx" : "6",
      "year" : 2014
    }, {
      "title" : "Semisupervised learning with deep generative models",
      "author" : [ "Diederik P Kingma", "Shakir Mohamed", "Danilo Jimenez Rezende", "Max Welling" ],
      "venue" : "In Advances in Neural Information Processing Systems,",
      "citeRegEx" : "7",
      "shortCiteRegEx" : "7",
      "year" : 2014
    }, {
      "title" : "Semi-supervised classification with graph convolutional networks",
      "author" : [ "Thomas N Kipf", "Max Welling" ],
      "venue" : "arXiv preprint arXiv:1609.02907,",
      "citeRegEx" : "8",
      "shortCiteRegEx" : "8",
      "year" : 2016
    }, {
      "title" : "Temporal ensembling for semi-supervised learning",
      "author" : [ "Samuli Laine", "Timo Aila" ],
      "venue" : "arXiv preprint arXiv:1610.02242,",
      "citeRegEx" : "9",
      "shortCiteRegEx" : "9",
      "year" : 2016
    }, {
      "title" : "Gradient-based learning applied to document recognition",
      "author" : [ "Yann LeCun", "Léon Bottou", "Yoshua Bengio", "Patrick Haffner" ],
      "venue" : "Proceedings of the IEEE,",
      "citeRegEx" : "10",
      "shortCiteRegEx" : "10",
      "year" : 1998
    }, {
      "title" : "Triple generative adversarial nets",
      "author" : [ "Chongxuan Li", "Kun Xu", "Jun Zhu", "Bo Zhang" ],
      "venue" : "arXiv preprint arXiv:1703.02291,",
      "citeRegEx" : "11",
      "shortCiteRegEx" : "11",
      "year" : 2017
    }, {
      "title" : "Auxiliary deep generative models",
      "author" : [ "Lars Maaløe", "Casper Kaae Sønderby", "Søren Kaae Sønderby", "Ole Winther" ],
      "venue" : "arXiv preprint arXiv:1602.05473,",
      "citeRegEx" : "12",
      "shortCiteRegEx" : "12",
      "year" : 2016
    }, {
      "title" : "Virtual adversarial training: a regularization method for supervised and semi-supervised learning",
      "author" : [ "Takeru Miyato", "Shin-ichi Maeda", "Masanori Koyama", "Shin Ishii" ],
      "venue" : "arXiv preprint arXiv:1704.03976,",
      "citeRegEx" : "13",
      "shortCiteRegEx" : "13",
      "year" : 2017
    }, {
      "title" : "Distributional smoothing with virtual adversarial training",
      "author" : [ "Takeru Miyato", "Shin-ichi Maeda", "Masanori Koyama", "Ken Nakae", "Shin Ishii" ],
      "venue" : "arXiv preprint arXiv:1507.00677,",
      "citeRegEx" : "14",
      "shortCiteRegEx" : "14",
      "year" : 2015
    }, {
      "title" : "Semisupervised learning with ladder networks",
      "author" : [ "Antti Rasmus", "Mathias Berglund", "Mikko Honkala", "Harri Valpola", "Tapani Raiko" ],
      "venue" : "In Advances in Neural Information Processing Systems,",
      "citeRegEx" : "15",
      "shortCiteRegEx" : "15",
      "year" : 2015
    }, {
      "title" : "Improved techniques for training gans",
      "author" : [ "Tim Salimans", "Ian Goodfellow", "Wojciech Zaremba", "Vicki Cheung", "Alec Radford", "Xi Chen" ],
      "venue" : "In NIPS,",
      "citeRegEx" : "16",
      "shortCiteRegEx" : "16",
      "year" : 2016
    }, {
      "title" : "Pixelcnn++: Improving the pixelcnn with discretized logistic mixture likelihood and other modifications",
      "author" : [ "Tim Salimans", "Andrej Karpathy", "Xi Chen", "Diederik P Kingma" ],
      "venue" : "arXiv preprint arXiv:1701.05517,",
      "citeRegEx" : "17",
      "shortCiteRegEx" : "17",
      "year" : 2017
    }, {
      "title" : "Amortised map inference for image super-resolution",
      "author" : [ "Casper Kaae Sønderby", "Jose Caballero", "Lucas Theis", "Wenzhe Shi", "Ferenc Huszár" ],
      "venue" : "arXiv preprint arXiv:1610.04490,",
      "citeRegEx" : "18",
      "shortCiteRegEx" : "18",
      "year" : 2016
    }, {
      "title" : "Unsupervised and semi-supervised learning with categorical generative adversarial networks",
      "author" : [ "Jost Tobias Springenberg" ],
      "venue" : "arXiv preprint arXiv:1511.06390,",
      "citeRegEx" : "19",
      "shortCiteRegEx" : "19",
      "year" : 2015
    }, {
      "title" : "Efficient object localization using convolutional networks",
      "author" : [ "Jonathan Tompson", "Ross Goroshin", "Arjun Jain", "Yann LeCun", "Christoph Bregler" ],
      "venue" : "In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition,",
      "citeRegEx" : "20",
      "shortCiteRegEx" : "20",
      "year" : 2015
    }, {
      "title" : "Adversarial generator-encoder networks",
      "author" : [ "Dmitry Ulyanov", "Andrea Vedaldi", "Victor Lempitsky" ],
      "venue" : "arXiv preprint arXiv:1704.02304,",
      "citeRegEx" : "21",
      "shortCiteRegEx" : "21",
      "year" : 2017
    }, {
      "title" : "Deep learning via semisupervised embedding",
      "author" : [ "Jason Weston", "Frédéric Ratle", "Hossein Mobahi", "Ronan Collobert" ],
      "venue" : "In Neural Networks: Tricks of the Trade,",
      "citeRegEx" : "22",
      "shortCiteRegEx" : "22",
      "year" : 2012
    }, {
      "title" : "Revisiting semi-supervised learning with graph embeddings",
      "author" : [ "Zhilin Yang", "William W Cohen", "Ruslan Salakhutdinov" ],
      "venue" : "arXiv preprint arXiv:1603.08861,",
      "citeRegEx" : "23",
      "shortCiteRegEx" : "23",
      "year" : 2016
    }, {
      "title" : "Semi-supervised qa with generative domain-adaptive nets",
      "author" : [ "Zhilin Yang", "Junjie Hu", "Ruslan Salakhutdinov", "William W Cohen" ],
      "venue" : "arXiv preprint arXiv:1702.02206,",
      "citeRegEx" : "24",
      "shortCiteRegEx" : "24",
      "year" : 2017
    }, {
      "title" : "Energy-based generative adversarial network",
      "author" : [ "Junbo Zhao", "Michael Mathieu", "Yann LeCun" ],
      "venue" : "arXiv preprint arXiv:1609.03126,",
      "citeRegEx" : "25",
      "shortCiteRegEx" : "25",
      "year" : 2016
    }, {
      "title" : "Semi-supervised learning using gaussian fields and harmonic functions",
      "author" : [ "Xiaojin Zhu", "Zoubin Ghahramani", "John D Lafferty" ],
      "venue" : "In Proceedings of the 20th International conference on Machine learning",
      "citeRegEx" : "26",
      "shortCiteRegEx" : "26",
      "year" : 2003
    } ],
    "referenceMentions" : [ {
      "referenceID" : 1,
      "context" : "Traditional graph-based methods [2, 26] were extended to deep neural networks [22, 23, 8], which involves applying convolutional neural networks [10] and feature learning techniques to graphs so that the underlying manifold structure can be exploited.",
      "startOffset" : 32,
      "endOffset" : 39
    }, {
      "referenceID" : 25,
      "context" : "Traditional graph-based methods [2, 26] were extended to deep neural networks [22, 23, 8], which involves applying convolutional neural networks [10] and feature learning techniques to graphs so that the underlying manifold structure can be exploited.",
      "startOffset" : 32,
      "endOffset" : 39
    }, {
      "referenceID" : 21,
      "context" : "Traditional graph-based methods [2, 26] were extended to deep neural networks [22, 23, 8], which involves applying convolutional neural networks [10] and feature learning techniques to graphs so that the underlying manifold structure can be exploited.",
      "startOffset" : 78,
      "endOffset" : 89
    }, {
      "referenceID" : 22,
      "context" : "Traditional graph-based methods [2, 26] were extended to deep neural networks [22, 23, 8], which involves applying convolutional neural networks [10] and feature learning techniques to graphs so that the underlying manifold structure can be exploited.",
      "startOffset" : 78,
      "endOffset" : 89
    }, {
      "referenceID" : 7,
      "context" : "Traditional graph-based methods [2, 26] were extended to deep neural networks [22, 23, 8], which involves applying convolutional neural networks [10] and feature learning techniques to graphs so that the underlying manifold structure can be exploited.",
      "startOffset" : 78,
      "endOffset" : 89
    }, {
      "referenceID" : 9,
      "context" : "Traditional graph-based methods [2, 26] were extended to deep neural networks [22, 23, 8], which involves applying convolutional neural networks [10] and feature learning techniques to graphs so that the underlying manifold structure can be exploited.",
      "startOffset" : 145,
      "endOffset" : 149
    }, {
      "referenceID" : 14,
      "context" : "[15] employs a Ladder network to minimize the layerwise reconstruction loss in addition to the standard classification loss.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 6,
      "context" : "Variational auto-encoders have also been used for semi-supervised learning [7, 12] by maximizing the variational lower bound of the unlabeled data log-likelihood.",
      "startOffset" : 75,
      "endOffset" : 82
    }, {
      "referenceID" : 11,
      "context" : "Variational auto-encoders have also been used for semi-supervised learning [7, 12] by maximizing the variational lower bound of the unlabeled data log-likelihood.",
      "startOffset" : 75,
      "endOffset" : 82
    }, {
      "referenceID" : 5,
      "context" : "Recently, generative adversarial networks (GANs) [6] were demonstrated to be able to generate visually realistic images.",
      "startOffset" : 49,
      "endOffset" : 52
    }, {
      "referenceID" : 15,
      "context" : "Feature matching (FM) GANs [16] apply GANs to semi-supervised learning on Kclass classification.",
      "startOffset" : 27,
      "endOffset" : 31
    }, {
      "referenceID" : 4,
      "context" : "This (K+ 1)-class discriminator objective leads to strong empirical results, and was later widely used to evaluate the effectiveness of generative models [5, 21].",
      "startOffset" : 154,
      "endOffset" : 161
    }, {
      "referenceID" : 20,
      "context" : "This (K+ 1)-class discriminator objective leads to strong empirical results, and was later widely used to evaluate the effectiveness of generative models [5, 21].",
      "startOffset" : 154,
      "endOffset" : 161
    }, {
      "referenceID" : 15,
      "context" : "For example, [16] observed that mini-batch discrimination generates better images than feature matching, but feature matching obtains a much better semi-supervised learning performance.",
      "startOffset" : 13,
      "endOffset" : 17
    }, {
      "referenceID" : 20,
      "context" : "The same phenomenon was also observed in [21], where the model generated better images but failed to improve the performance on semi-supervised learning.",
      "startOffset" : 41,
      "endOffset" : 45
    }, {
      "referenceID" : 15,
      "context" : "Besides the adversarial feature matching approach [16], several previous works have incorporated the idea of adversarial training in semi-supervised learning.",
      "startOffset" : 50,
      "endOffset" : 54
    }, {
      "referenceID" : 18,
      "context" : "Notably, [19] proposes categorical generative adversarial networks (CatGAN), which substitutes the binary discriminator in standard GAN with a multi-class classifier, and trains both the generator and the discriminator using information theoretical criteria on unlabeled data.",
      "startOffset" : 9,
      "endOffset" : 13
    }, {
      "referenceID" : 13,
      "context" : "From the perspective of regularization, [14, 13] propose virtual adversarial training (VAT), which effectively smooths the output distribution of the classifier by seeking virtually adversarial samples.",
      "startOffset" : 40,
      "endOffset" : 48
    }, {
      "referenceID" : 12,
      "context" : "From the perspective of regularization, [14, 13] propose virtual adversarial training (VAT), which effectively smooths the output distribution of the classifier by seeking virtually adversarial samples.",
      "startOffset" : 40,
      "endOffset" : 48
    }, {
      "referenceID" : 23,
      "context" : "Different from aforementioned approaches, [24] proposes to train conditional generators with adversarial training to obtain complete sample pairs, which can be directly used as additional training cases.",
      "startOffset" : 42,
      "endOffset" : 46
    }, {
      "referenceID" : 10,
      "context" : "Recently, Triple GAN [11] also employs the idea of conditional generator, but uses adversarial cost to match the two model-defined factorizations of the joint distribution with the one defined by paired data.",
      "startOffset" : 21,
      "endOffset" : 25
    }, {
      "referenceID" : 6,
      "context" : "As an early work, [7] adapts the original Variational Auto-Encoder (VAE) to a semi-supervised learning setting by treating the classification label as an additional latent variable in the directed generative model.",
      "startOffset" : 18,
      "endOffset" : 21
    }, {
      "referenceID" : 11,
      "context" : "[12] adds auxiliary variables to the deep VAE structure to make variational distribution more expressive.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 14,
      "context" : "Different from the explicit usage of deep generative models, the Ladder networks [15] take advantage of the local (layerwise) denoising auto-encoding criterion, and create a more informative unsupervised signal through lateral connection.",
      "startOffset" : 81,
      "endOffset" : 85
    }, {
      "referenceID" : 15,
      "context" : "Consider the discriminator objective function of GAN-based semi-supervised learning [16]:",
      "startOffset" : 84,
      "endOffset" : 88
    }, {
      "referenceID" : 15,
      "context" : "As a standard setting in previous work [16, 5], the discriminator D is defined as PD(k|x) = exp(w > k f(x)) ∑K+1 k′=1 exp(w > k′f(x)) .",
      "startOffset" : 39,
      "endOffset" : 46
    }, {
      "referenceID" : 4,
      "context" : "As a standard setting in previous work [16, 5], the discriminator D is defined as PD(k|x) = exp(w > k f(x)) ∑K+1 k′=1 exp(w > k′f(x)) .",
      "startOffset" : 39,
      "endOffset" : 46
    }, {
      "referenceID" : 15,
      "context" : "Since this is a form of over-parameterization, wK+1 is fixed as a zero vector [16].",
      "startOffset" : 78,
      "endOffset" : 82
    }, {
      "referenceID" : 1,
      "context" : "This builds a connection between our approach with manifold-based methods [2, 26] which also leverage the low-density boundary assumption.",
      "startOffset" : 74,
      "endOffset" : 81
    }, {
      "referenceID" : 25,
      "context" : "This builds a connection between our approach with manifold-based methods [2, 26] which also leverage the low-density boundary assumption.",
      "startOffset" : 74,
      "endOffset" : 81
    }, {
      "referenceID" : 15,
      "context" : "In addition, by analyzing how feature matching (FM) [16] works in 2D space, we identify some potential problems of it, which motivates our approach to be introduced in the next section.",
      "startOffset" : 52,
      "endOffset" : 56
    }, {
      "referenceID" : 15,
      "context" : "Following prior work [16, 6], we employ a GAN-like implicit generator.",
      "startOffset" : 21,
      "endOffset" : 28
    }, {
      "referenceID" : 5,
      "context" : "Following prior work [16, 6], we employ a GAN-like implicit generator.",
      "startOffset" : 21,
      "endOffset" : 28
    }, {
      "referenceID" : 2,
      "context" : "We introduce an additional encoder, q : X 7→ Z , to define a variational upper bound of the negative entropy [3], −H(pG(x)) ≤ −Ex,z∼pG log q(z|x) = LVI.",
      "startOffset" : 109,
      "endOffset" : 112
    }, {
      "referenceID" : 24,
      "context" : "Concretely, we adapt the pull-away term (PT) [25] as the auxiliary cost, LPT = 1 N(N−1) ∑N i=1 ∑ j 6=i ( f(xi) f(xj) ‖f(xi)‖‖f(xj)‖ )2 , where N is the size of a mini-batch and x are samples.",
      "startOffset" : 45,
      "endOffset" : 49
    }, {
      "referenceID" : 16,
      "context" : "To model the probability distribution over images, we simply adapt the state-of-the-art density estimation model for natural images, namely the PixelCNN++ [17] model.",
      "startOffset" : 155,
      "endOffset" : 159
    }, {
      "referenceID" : 15,
      "context" : "However, the objective function of the discriminator in [16] does not enforce a dominant class.",
      "startOffset" : 56,
      "endOffset" : 60
    }, {
      "referenceID" : 18,
      "context" : "Note that the same conditional entropy term has been used in other semi-supervised learning methods [19, 13] as well, but here we motivate the minimization of conditional entropy based on our theoretical analysis of GAN-based semi-supervised learning.",
      "startOffset" : 100,
      "endOffset" : 108
    }, {
      "referenceID" : 12,
      "context" : "Note that the same conditional entropy term has been used in other semi-supervised learning methods [19, 13] as well, but here we motivate the minimization of conditional entropy based on our theoretical analysis of GAN-based semi-supervised learning.",
      "startOffset" : 100,
      "endOffset" : 108
    }, {
      "referenceID" : 0,
      "context" : "We add instance noise to the input of the discriminator [1, 18], and use spatial dropout [20] to obtain faster convergence.",
      "startOffset" : 56,
      "endOffset" : 63
    }, {
      "referenceID" : 17,
      "context" : "We add instance noise to the input of the discriminator [1, 18], and use spatial dropout [20] to obtain faster convergence.",
      "startOffset" : 56,
      "endOffset" : 63
    }, {
      "referenceID" : 19,
      "context" : "We add instance noise to the input of the discriminator [1, 18], and use spatial dropout [20] to obtain faster convergence.",
      "startOffset" : 89,
      "endOffset" : 93
    }, {
      "referenceID" : 15,
      "context" : "Except for these two modifications, we use the same neural network architecture as in [16].",
      "startOffset" : 86,
      "endOffset" : 90
    }, {
      "referenceID" : 12,
      "context" : "Finally, note that because our method is actually orthogonal to VAT [13], combining VAT with our presented approach should yield further performance improvement in practice.",
      "startOffset" : 68,
      "endOffset" : 72
    }, {
      "referenceID" : 15,
      "context" : "On MNIST, probably due to its simplicity, no collapsing phenomenon was observed with vanilla FM training [16] or in our setting.",
      "startOffset" : 105,
      "endOffset" : 109
    }, {
      "referenceID" : 15,
      "context" : "5c are extracted from previous work [16].",
      "startOffset" : 36,
      "endOffset" : 40
    } ],
    "year" : 2017,
    "abstractText" : "Semi-supervised learning methods based on generative adversarial networks (GANs) obtained strong empirical results, but it is not clear 1) how the discriminator benefits from joint training with a generator, and 2) why good semi-supervised classification performance and a good generator cannot be obtained at the same time. Theoretically we show that given the discriminator objective, good semisupervised learning indeed requires a bad generator, and propose the definition of a preferred generator. Empirically, we derive a novel formulation based on our analysis that substantially improves over feature matching GANs, obtaining state-of-the-art results on multiple benchmark datasets2.",
    "creator" : null
  }
}