{
  "name" : "a6db4ed04f1621a119799fd3d7545d3d.pdf",
  "metadata" : {
    "source" : "META",
    "title" : "Deep Learning for Precipitation Nowcasting: A Benchmark and A New Model",
    "authors" : [ "Xingjian Shi", "Zhihan Gao", "Leonard Lausen", "Hao Wang", "Dit-Yan Yeung", "Wai-kin Wong", "Wang-chun Woo" ],
    "emails" : [ "xshiab@cse.ust.hk", "zgaoag@cse.ust.hk", "lelausen@cse.ust.hk", "hwangaz@cse.ust.hk", "dyyeung@cse.ust.hk", "wkwong@hko.gov.hk", "wcwoo@hko.gov.hk" ],
    "sections" : [ {
      "heading" : "1 Introduction",
      "text" : "Precipitation nowcasting refers to the problem of providing very short range (e.g., 0-6 hours) forecast of the rainfall intensity in a local region based on radar echo maps1, rain gauge and other observation data as well as the Numerical Weather Prediction (NWP) models. It significantly impacts the daily lives of many and plays a vital role in many real-world applications. Among other possibilities, it helps to facilitate drivers by predicting road conditions, enhances flight safety by providing weather guidance for regional aviation, and avoids casualties by issuing citywide rainfall alerts. In addition to the inherent complexities of the atmosphere and relevant dynamical processes, the ever-growing need for real-time, large-scale, and fine-grained precipitation nowcasting poses extra challenges to the meteorological community and has aroused research interest in the machine learning community [23, 25].\n1The radar echo maps are Constant Altitude Plan Position Indicator (CAPPI) images which can be converted to rainfall intensity maps using the Marshall-Palmer relationship or Z-R relationship [19].\n31st Conference on Neural Information Processing Systems (NIPS 2017), Long Beach, CA, USA.\nThe conventional approaches to precipitation nowcasting used by existing operational systems rely on optical flow [28]. In a modern day nowcasting system, the convective cloud movements are first estimated from the observed radar echo maps by optical flow and are then used to predict the future radar echo maps using semi-Lagrangian advection. However, these methods are unsupervised from the machine learning point of view in that they do not take advantage of the vast amount of existing radar echo data. Recently, progress has been made by utilizing supervised deep learning [15] techniques for precipitation nowcasting. Shi et al. [23] formulated precipitation nowcasting as a spatiotemporal sequence forecasting problem and proposed the Convolutional Long Short-Term Memory (ConvLSTM) model, which extends the LSTM [7] by having convolutional structures in both the input-to-state and state-to-state transitions, to solve the problem. Using the radar echo sequences for model training, the authors showed that ConvLSTM is better at capturing the spatiotemporal correlations than the fully-connected LSTM and gives more accurate predictions than the Real-time Optical flow by Variational methods for Echoes of Radar (ROVER) algorithm [28] currently used by the Hong Kong Observatory (HKO).\nHowever, despite their pioneering effort in this interesting direction, the paper has some deficiencies. First, the deep learning model is only evaluated on a relatively small dataset containing 97 rainy days and only the nowcasting skill score at the 0.5mm/h rain-rate threshold is compared. As real-world precipitation nowcasting systems need to pay additional attention to heavier rainfall events such as rainstorms which cause more threat to the society, the performance at the 0.5mm/h threshold (indicating raining or not) alone is not sufficient for demonstrating the algorithm’s overall performance [28]. In fact, as the area Deep Learning for Precipitation Nowcasting is still in its early stage, it is not clear how models should be evaluated to meet the need of real-world applications. Second, although the convolutional recurrence structure used in ConvLSTM is better than the fullyconnected recurrent structure in capturing spatiotemporal correlations, it is not optimal and leaves room for improvement. For motion patterns like rotation and scaling, the local correlation structure of consecutive frames will be different for different spatial locations and timestamps. It is thus inefficient to use convolution which uses a location-invariant filter to represent such location-variant relationship. Previous attempts have tried to solve the problem by revising the output of a recurrent neural network (RNN) from the raw prediction to be some location-variant transformation of the input, like optical flow or dynamic local filter [5, 3]. However, not much research has been conducted to address the problem by revising the recurrent structure itself.\nIn this paper, we aim to address these two problems by proposing both a benchmark and a new model for precipitation nowcasting. For the new benchmark, we build the HKO-7 dataset which contains radar echo data from 2009 to 2015 near Hong Kong. Since the radar echo maps arrive in a stream in the real-world scenario, the nowcasting algorithms can adopt online learning to adapt to the newly emerging patterns dynamically. To take into account this setting, we use two testing protocols in our benchmark: the offline setting in which the algorithm can only use a fixed window of the previous radar echo maps and the online setting in which the algorithm is free to use all the historical data and any online learning algorithm. Another issue for the precipitation nowcasting task is that the proportions of rainfall events at different rain-rate thresholds are highly imbalanced. Heavier rainfall occurs less often but has a higher real-world impact. We thus propose the Balanced Mean Squared Error (B-MSE) and Balanced Mean Absolute Error (B-MAE) measures for training and evaluation, which assign more weights to heavier rainfalls in the calculation of MSE and MAE. We empirically find that the balanced variants of the loss functions are more consistent with the overall nowcasting performance at multiple rain-rate thresholds than the original loss functions. Moreover, our experiments show that training with the balanced loss functions is essential for deep learning models to achieve good performance at higher rain-rate thresholds. For the new model, we propose the Trajectory Gated Recurrent Unit (TrajGRU) model which uses a subnetwork to output the state-to-state connection structures before state transitions. TrajGRU allows the state to be aggregated along some learned trajectories and thus is more flexible than the Convolutional GRU (ConvGRU) [2] whose connection structure is fixed. We show that TrajGRU outperforms ConvGRU, Dynamic Filter Network (DFN) [3] as well as 2D and 3D Convolutional Neural Networks (CNNs) [20, 27] in both a synthetic MovingMNIST++ dataset and the HKO-7 dataset.\nUsing the new dataset, testing protocols, training loss and model, we provide extensive empirical evaluation of seven models, including a simple baseline model which always predicts the last frame, two optical flow based models (ROVER and its nonlinear variant), and four representative deep learning models (TrajGRU, ConvGRU, 2D CNN, and 3D CNN). We also provide a large-scale\nbenchmark for precipitation nowcasting. Our experimental validation shows that (1) all the deep learning models outperform the optical flow based models, (2) TrajGRU attains the best overall performance among all the deep learning models, and (3) after applying online fine-tuning, the models tested in the online setting consistently outperform those in the offline setting. To the best of our knowledge, this is the first comprehensive benchmark of deep learning models for the precipitation nowcasting problem. Besides, since precipitation nowcasting can be viewed as a video prediction problem [22, 27], our work is the first to provide evidence and justification that online learning could potentially be helpful for video prediction in general."
    }, {
      "heading" : "2 Related Work",
      "text" : "Deep learning for precipitation nowcasting and video prediction For the precipitation nowcasting problem, the reflectivity factors in radar echo maps are first transformed to grayscale images before being fed into the prediction algorithm [23]. Thus, precipitation nowcasting can be viewed as a type of video prediction problem with a fixed “camera”, which is the weather radar. Therefore, methods proposed for predicting future frames in natural videos are also applicable to precipitation nowcasting and are related to our paper. There are three types of general architecture for video prediction: RNN based models, 2D CNN based models, and 3D CNN based models. Ranzato et al. [22] proposed the first RNN based model for video prediction, which uses a convolutional RNN with 1× 1 state-state kernel to encode the observed frames. Srivastava et al. [24] proposed the LSTM encoder-decoder network which uses one LSTM to encode the input frames and another LSTM to predict multiple frames ahead. The model was generalized in [23] by replacing the fully-connected LSTM with ConvLSTM to capture the spatiotemporal correlations better. Later, Finn et al. [5] and De Brabandere et al. [3] extended the model in [23] by making the network predict the transformation of the input frame instead of directly predicting the raw pixels. Ruben et al. [26] proposed to use both an RNN that captures the motion and a CNN that captures the content to generate the prediction. Along with RNN based models, 2D and 3D CNN based models were proposed in [20] and [27] respectively. Mathieu et al. [20] treated the frame sequence as multiple channels and applied 2D CNN to generate the prediction while [27] treated them as the depth and applied 3D CNN. Both papers show that Generative Adversarial Network (GAN) [6] is helpful for generating sharp predictions.\nStructured recurrent connection for spatiotemporal modeling From a higher-level perspective, precipitation nowcasting and video prediction are intrinsically spatiotemporal sequence forecasting problems in which both the input and output are spatiotemporal sequences [23]. Recently, there is a trend of replacing the fully-connected structure in the recurrent connections of RNN with other topologies to enhance the network’s ability to model the spatiotemporal relationship. Other than the ConvLSTM which replaces the full-connection with convolution and is designed for dense videos, the SocialLSTM [1] and the Structural-RNN (S-RNN) [11] have been proposed sharing a similar notion. SocialLSTM defines the topology based on the distance between different people and is designed for human trajectory prediction while S-RNN defines the structure based on the given spatiotemporal graph. All these models are different from our TrajGRU in that our model actively learns the recurrent connection structure. Liang et al. [17] have proposed the Structure-evolving LSTM, which also has the ability to learn the connection structure of RNNs. However, their model is designed for the semantic object parsing task and learns how to merge the graph nodes automatically. It is thus different from TrajGRU which aims at learning the local correlation structure for spatiotemporal data.\nBenchmark for video tasks There exist benchmarks for several video tasks like online object tracking [29] and video object segmentation [21]. However, there is no benchmark for the precipitation nowcasting problem, which is also a video task but has its unique properties since radar echo map is a completely different type of data and the data is highly imbalanced (as mentioned in Section 1). The large-scale benchmark created as part of this work could help fill the gap."
    }, {
      "heading" : "3 Model",
      "text" : "In this section, we present our new model for precipitation nowcasting. We first introduce the general encoding-forecasting structure used in this paper. Then we review the ConvGRU model and present our new TrajGRU model."
    }, {
      "heading" : "3.1 Encoding-forecasting Structure",
      "text" : "We adopt a similar formulation of the precipitation nowcasting problem as in [23]. Assume that the radar echo maps form a spatiotemporal sequence 〈I1, I2, . . .〉. At a given timestamp t, our model generates the most likelyK-step predictions, Ît+1, Ît+2, . . . , Ît+K , based on the previous J observations including the current one: It−J+1, It−J+2, . . . , It. Our encoding-forecasting network first encodes the observations into n layers of RNN states: H1t ,H2t , . . . ,Hnt = h(It−J+1, It−J+2, . . . , It), and then uses another n layers of RNNs to generate the predictions based on these encoded states: Ît+1, Ît+2, . . . , Ît+K = g(H1t ,H2t , . . . ,Hnt ). Figure 1 illustrates our encoding-forecasting structure for n = 3, J = 2,K = 2. We insert downsampling and upsampling layers between the RNNs, which are implemented by convolution and deconvolution with stride. The reason to reverse the order of the forecasting network is that the high-level states, which have captured the global spatiotemporal representation, could guide the update of the low-level states. Moreover, the low-level states could further influence the prediction. This structure is more reasonable than the previous structure [23] which does not reverse the link of the forecasting network because we are free to plug in additional RNN layers on top and no skip-connection is required to aggregate the low-level information. One can choose any type of RNNs like ConvGRU or our newly proposed TrajGRU in this general encoding-forecasting structure as long as their states correspond to tensors."
    }, {
      "heading" : "3.2 Convolutional GRU",
      "text" : "The main formulas of the ConvGRU used in this paper are given as follows: Zt = σ(Wxz ∗ Xt +Whz ∗ Ht−1), Rt = σ(Wxr ∗ Xt +Whr ∗ Ht−1), H′t = f(Wxh ∗ Xt +Rt ◦ (Whh ∗ Ht−1)), Ht = (1−Zt) ◦ H′t + Zt ◦ Ht−1.\n(1)\nThe bias terms are omitted for notational simplicity. ‘∗’ is the convolution operation and ‘◦’ is the Hadamard product. Here,Ht,Rt,Zt,H′t ∈ RCh×H×W are the memory state, reset gate, update gate, and new information, respectively. Xt ∈ RCi×H×W is the input and f is the activation, which is chosen to be leaky ReLU with negative slope equals to 0.2 [18] througout the paper. H,W are the height and width of the state and input tensors and Ch, Ci are the channel sizes of the state and input tensors, respectively. Every time a new input arrives, the reset gate will control whether to clear the previous state and the update gate will control how much the new information will be written to the state."
    }, {
      "heading" : "3.3 Trajectory GRU",
      "text" : "When used for capturing spatiotemporal correlations, the deficiency of ConvGRU and other ConvRNNs is that the connection structure and weights are fixed for all the locations. The convolution operation basically applies a location-invariant filter to the input. If the inputs are all zero and the reset gates are all one, we could rewrite the computation process of the new information at a specific location (i, j) at timestamp t, i.e,H′t,:,i,j , as follows:\nH′t,:,i,j = f(Whhconcat(〈Ht−1,:,p,q | (p, q) ∈ N hi,j〉)) = f( |Nhi,j |∑ l=1 WlhhHt−1,:,pl,i,j ,ql,i,j ). (2)\nHere, N hi,j is the ordered neighborhood set at location (i, j) defined by the hyperparameters of the state-to-state convolution such as kernel size, dilation and padding [30]. (pl,i,j , ql,i,j) is the lth neighborhood location of position (i, j). The concat(·) function concatenates the inner vectors in the set and Whh is the matrix representation of the state-to-state convolution weights.\nAs the hyperparameter of convolution is fixed, the neighborhood set N hi,j stays the same for all locations. However, most motion patterns have different neighborhood sets for different locations. For example, rotation and scaling generate flow fields with different angles pointing to different directions. It would thus be more reasonable to have a location-variant connection structure as\nH′t,:,i,j = f( L∑ l=1 WlhhHt−1,:,pl,i,j(θ),ql,i,j(θ)), (3)\nwhere L is the total number of local links, (pl,i,j(θ), ql,i,j(θ)) is the lth neighborhood parameterized by θ.\nBased on this observation, we propose the TrajGRU, which uses the current input and previous state to generate the local neighborhood set for each location at each timestamp. Since the location indices are discrete and non-differentiable, we use a set of continuous optical flows to represent these “indices”. The main formulas of TrajGRU are given as follows:\nUt,Vt = γ(Xt,Ht−1),\nZt = σ(Wxz ∗ Xt + L∑ l=1 W lhz ∗ warp(Ht−1,Ut,l,Vt,l)),\nRt = σ(Wxr ∗ Xt + L∑ l=1 W lhr ∗ warp(Ht−1,Ut,l,Vt,l)),\nH′t = f(Wxh ∗ Xt +Rt ◦ ( L∑ l=1 W lhh ∗ warp(Ht−1,Ut,l,Vt,l))), Ht = (1−Zt) ◦ H′t + Zt ◦ Ht−1.\n(4)\nHere, L is the total number of allowed links. Ut,Vt ∈ RL×H×W are the flow fields that store the local connection structure generated by the structure generating network γ. TheW lhz,W lhr,W lhh are the weights for projecting the channels, which are implemented by 1 × 1 convolutions. The warp(Ht−1,Ut,l,Vt,l) function selects the positions pointed out by Ut,l,Vt,l from Ht−1 via the bilinear sampling kernel [10, 9]. If we denoteM = warp(I,U,V) whereM, I ∈ RC×H×W and U,V ∈ RH×W , we have:\nMc,i,j = H∑ m=1 W∑ n=1 Ic,m,nmax(0, 1− |i+Vi,j −m|)max(0, 1− |j +Ui,j − n|). (5)\nThe advantage of such a structure is that we could learn the connection topology by learning the parameters of the subnetwork γ. In our experiments, γ takes the concatenation of Xt and Ht−1 as the input and is fixed to be a one-hidden-layer convolutional neural network with 5× 5 kernel size and 32 feature maps. Thus, γ has only a small number of parameters and adds nearly no cost to the overall computation. Compared to a ConvGRU with K ×K state-to-state convolution, TrajGRU is able to learn a more efficient connection structure with L < K2. For ConvGRU and TrajGRU, the number of model parameters is dominated by the size of the state-to-state weights, which is O(L× C2h) for TrajGRU and O(K2 × C2h) for ConvGRU. If L is chosen to be smaller than K2, the\nnumber of parameters of TrajGRU can also be smaller than the ConvGRU and the TrajGRU model is able to use the parameters more efficiently. Illustration of the recurrent connection structures of ConvGRU and TrajGRU is given in Figure 2. Recently, Jeon & Kim [12] has used similar ideas to extend the convolution operations in CNN. However, their proposed Active Convolution Unit (ACU) focuses on the images where the need for location-variant filters is limited. Our TrajGRU focuses on videos where location-variant filters are crucial for handling motion patterns like rotations. Moreover, we are revising the structure of the recurrent connection and have tested different number of links while [12] fixes the link number to 9."
    }, {
      "heading" : "4 Experiments on MovingMNIST++",
      "text" : "Before evaluating our model on the more challenging precipitation nowcasting task, we first compare TrajGRU with ConvGRU, DFN and 2D/3D CNNs on a synthetic video prediction dataset to justify its effectiveness.\nThe previous MovingMNIST dataset [24, 23] only moves the digits with a constant speed and is not suitable for evaluating different models’ ability in capturing more complicated motion patterns. We thus design the MovingMNIST++ dataset by extending MovingMNIST to allow random rotations, scale changes, and illumination changes. Each frame is of size 64× 64 and contains three moving digits. We use 10 frames as input to predict the next 10 frames. As the frames have illumination changes, we use MSE instead of cross-entropy for training and evaluation 2. We train all models using the Adam optimizer [14] with learning rate equal to 10−4 and momentum equal to 0.5. For the RNN models, we use the encoding-forecasting structure introduced previously with three RNN layers. All RNNs are either ConvGRU or TrajGRU and all use the same set of hyperparameters. For TrajGRU, we initialize the weight of the output layer of the structure generating network to zero. The strides of the middle downsampling and upsampling layers are chosen to be 2. The numbers of filters for the three RNNs are 64, 96, 96 respectively. For the DFN model, we replace the output layer of ConvGRU with a 11× 11 local filter and transform the previous frame to get the prediction. For the RNN models, we train them for 200,000 iterations with norm clipping threshold equal to 1 and batch size equal to 4. For the CNN models, we train them for 100,000 iterations with norm clipping threshold equal to 50 and batch size equal to 32. The detailed experimental configuration of the models for the MovingMNIST++ experiment can be found in the appendix. We have also tried to use conditional GAN for the 2D and 3D models but have failed to get reasonable results.\nTable 1 gives the results of different models on the same test set that contains 10,000 sequences. We train all models using three different seeds to report the standard deviation. We can find that TrajGRU with only 5 links outperforms ConvGRU with state-to-state kernel size 3× 3 and dilation 2× 2 (9 links). Also, the performance of TrajGRU improves as the number of links increases. TrajGRU with L = 13 outperforms ConvGRU with 7× 7 state-to-state kernel and yet has fewer parameters. Another observation from the table is that DFN does not perform well in this synthetic dataset. This is because DFN uses softmax to enhance the sparsity of the learned local filters, which fails to model illumination change because the maximum value always gets smaller after convolving with a positive kernel whose weights sum up to 1. For DFN, when the pixel values get smaller, it is impossible for them to increase again. Figure 3 visualizes the learned structures of TrajGRU. We can see that the network has learned reasonable local link patterns.\n2The MSE for the MovingMNIST++ experiment is averaged by both the frame size and the length of the predicted sequence."
    }, {
      "heading" : "5 Benchmark for Precipitation Nowcasting",
      "text" : ""
    }, {
      "heading" : "5.1 HKO-7 Dataset",
      "text" : "The HKO-7 dataset used in the benchmark contains radar echo data from 2009 to 2015 collected by HKO. The radar CAPPI reflectivity images, which have resolution of 480×480 pixels, are taken from an altitude of 2km and cover a 512km× 512km area centered in Hong Kong. The data are recorded every 6 minutes and hence there are 240 frames per day. The raw logarithmic radar reflectivity factors are linearly transformed to pixel values via pixel = b255 × dBZ+1070 + 0.5c and are clipped to be between 0 and 255. The raw radar echo images generated by Doppler weather radar are noisy due to factors like ground clutter, sea clutter, anomalous propagation and electromagnetic interference [16]. To alleviate the impact of noise in training and evaluation, we filter the noisy pixels in the dataset and generate the noise masks by a two-stage process described in the appendix.\nAs rainfall events occur sparsely, we select the rainy days based on the rain barrel information to form our final dataset, which has 812 days for training, 50 days for validation and 131 days for testing. Our current treatment is close to the real-life scenario as we are able to train an additional model that classifies whether or not it will rain on the next day and applies our precipitation nowcasting model if this coarser-level model predicts that it will be rainy. The radar reflectivity values are converted to rainfall intensity values (mm/h) using the Z-R relationship: dBZ = 10 log a+ 10b logR where R is the rain-rate level, a = 58.53 and b = 1.56. The overall statistics and the average monthly rainfall distribution of the HKO-7 dataset are given in the appendix."
    }, {
      "heading" : "5.2 Evaluation Methodology",
      "text" : "As the radar echo maps arrive in a stream, nowcasting algorithms can apply online learning to adapt to the newly emerging spatiotemporal patterns. We propose two settings in our evaluation protocol: (1) the offline setting in which the algorithm always receives 5 frames as input and predicts 20 frames ahead, and (2) the online setting in which the algorithm receives segments of length 5 sequentially and predicts 20 frames ahead for each new segment received. The evaluation protocol is described more systematically in the appendix. The testing environment guarantees that the same set of sequences is tested in both the offline and online settings for fair comparison.\nFor both settings, we evaluate the skill scores for multiple thresholds that correspond to different rainfall levels to give an all-round evaluation of the algorithms’ nowcasting performance. Table 2 shows the distribution of different rainfall levels in our dataset. We choose to use the thresholds 0.5, 2, 5, 10, 30 to calculate the CSI and Heidke Skill Score (HSS) [8]. For calculating the skill score at a specific threshold τ , which is 0.5, 2, 5, 10 or 30, we first convert the pixel values in prediction and ground-truth to 0/1 by thresholding with τ . We then calculate the TP (prediction=1, truth=1), FN (prediction=0, truth=1), FP (prediction=1, truth=0), and TN (prediction=0, truth=0). The CSI score is calculated as TPTP+FN+FP and the HSS score is calculated as TP×TN−FN×FP (TP+FN)(FN+TN)+(TP+FP)(FP+TN) . During the computation, the masked points are ignored.\nAs shown in Table 2, the frequencies of different rainfall levels are highly imbalanced. We propose to use the weighted loss function to help solve this problem. Specifically, we assign a weight\nw(x) to each pixel according to its rainfall intensity x: w(x) =  1, x < 2 2, 2 ≤ x < 5 5, 5 ≤ x < 10 10, 10 ≤ x < 30 30, x ≥ 30 . Also, the\nmasked pixels have weight 0. The resulting B-MSE and B-MAE scores are computed as B-MSE = 1 N ∑N n=1 ∑480 i=1 ∑480 j=1 wn,i,j(xn,i,j − x̂n,i,j)2 and B-MAE = 1 N ∑N n=1 ∑480 i=1 ∑480 j=1 wn,i,j |xn,i,j − x̂n,i,j |, where N is the total number of frames and wn,i,j is the weight corresponding to the (i, j)th pixel in the nth frame. For the conventional MSE and MAE measures, we simply set all the weights to 1 except the masked points."
    }, {
      "heading" : "5.3 Evaluated Algorithms",
      "text" : "We have evaluated seven nowcasting algorithms, including the simplest model which always predicts the last frame, two optical flow based methods (ROVER and its nonlinear variant), and four deep learning methods (TrajGRU, ConvGRU, 2D CNN, and 3D CNN). Specifically, we have evaluated the performance of deep learning models in the online setting by fine-tuning the algorithms using AdaGrad [4] with learning rate equal to 10−4. We optimize the sum of B-MSE and B-MAE during offline training and online fine-tuning. During the offline training process, all models are optimized by the Adam optimizer with learning rate equal to 10−4 and momentum equal to 0.5 and we train these models with early-stopping on the sum of B-MSE and B-MAE. For RNN models, the training batch size is set to 4. For the CNN models, the training batch size is set to 8. For TrajGRU and ConvGRU models, we use a 3-layer encoding-forecasting structure with the number of filters for the RNNs set to 64, 192, 192. We use kernel size equal to 5× 5, 5× 5, 3× 3 for the ConvGRU models while the number of links is set to 13, 13, 9 for the TrajGRU model. We also train the ConvGRU model with the original MSE and MAE loss, which is named “ConvGRU-nobal”, to evaluate the improvement by training with the B-MSE and B-MAE loss. The other model configurations including ROVER, ROVER-nonlinear and deep models are included in the appendix."
    }, {
      "heading" : "5.4 Evaluation Results",
      "text" : "The overall evaluation results are summarized in Table 3. In order to analyze the confidence interval of the results, we train 2D CNN, 3D CNN, ConvGRU and TrajGRU models using three different random seeds and report the standard deviation in Table 4. We find that training with balanced loss functions is essential for good nowcasting performance of heavier rainfall. The ConvGRU model that is trained without balanced loss, which best represents the model in [23], has worse nowcasting score than the optical flow based methods at the 10mm/h and 30mm/h thresholds. Also, we find that all the deep learning models that are trained with the balanced loss outperform the optical flow based models. Among the deep learning models, TrajGRU performs the best and 3D CNN outperforms 2D CNN, which shows that an appropriate network structure is crucial to achieving good performance. The improvement of TrajGRU over the other models is statistically significant because the differences in B-MSE and B-MAE are larger than three times their standard deviation. Moreover, the performance with online fine-tuning enabled is consistently better than that without online fine-tuning, which verifies the effectiveness of online learning at least for this task.\nBased on the evaluation results, we also compute the Kendall’s τ coefficients [13] between the MSE, MAE, B-MSE, B-MAE and the CSI, HSS at different thresholds. As shown in Table 5, B-MSE and B-MAE have stronger correlation with the CSI and HSS in most cases."
    }, {
      "heading" : "6 Conclusion and Future Work",
      "text" : "In this paper, we have provided the first large-scale benchmark for precipitation nowcasting and have proposed a new TrajGRU model with the ability of learning the recurrent connection structure. We have shown TrajGRU is more efficient in capturing the spatiotemporal correlations than ConvGRU. For future work, we plan to test if TrajGRU helps improve other spatiotemporal learning tasks like visual object tracking and video segmentation. We will also try to build an operational nowcasting system using the proposed algorithm."
    }, {
      "heading" : "Acknowledgments",
      "text" : "This research has been supported by General Research Fund 16207316 from the Research Grants Council and Innovation and Technology Fund ITS/205/15FP from the Innovation and Technology Commission in Hong Kong. The first author has also been supported by the Hong Kong PhD Fellowship."
    } ],
    "references" : [ {
      "title" : "Social LSTM: Human trajectory prediction in crowded spaces",
      "author" : [ "Alexandre Alahi", "Kratarth Goel", "Vignesh Ramanathan", "Alexandre Robicquet", "Li Fei-Fei", "Silvio Savarese" ],
      "venue" : null,
      "citeRegEx" : "1",
      "shortCiteRegEx" : "1",
      "year" : 2016
    }, {
      "title" : "Delving deeper into convolutional networks for learning video representations",
      "author" : [ "Nicolas Ballas", "Li Yao", "Chris Pal", "Aaron Courville" ],
      "venue" : "In ICLR,",
      "citeRegEx" : "2",
      "shortCiteRegEx" : "2",
      "year" : 2016
    }, {
      "title" : "Dynamic filter networks",
      "author" : [ "Bert De Brabandere", "Xu Jia", "Tinne Tuytelaars", "Luc Van Gool" ],
      "venue" : "In NIPS,",
      "citeRegEx" : "3",
      "shortCiteRegEx" : "3",
      "year" : 2016
    }, {
      "title" : "Adaptive subgradient methods for online learning and stochastic optimization",
      "author" : [ "John Duchi", "Elad Hazan", "Yoram Singer" ],
      "venue" : "Journal of Machine Learning Research,",
      "citeRegEx" : "4",
      "shortCiteRegEx" : "4",
      "year" : 2011
    }, {
      "title" : "Unsupervised learning for physical interaction through video prediction",
      "author" : [ "Chelsea Finn", "Ian Goodfellow", "Sergey Levine" ],
      "venue" : "In NIPS,",
      "citeRegEx" : "5",
      "shortCiteRegEx" : "5",
      "year" : 2016
    }, {
      "title" : "Generative adversarial nets",
      "author" : [ "Ian Goodfellow", "Jean Pouget-Abadie", "Mehdi Mirza", "Bing Xu", "David Warde-Farley", "Sherjil Ozair", "Aaron Courville", "Yoshua Bengio" ],
      "venue" : "In NIPS,",
      "citeRegEx" : "6",
      "shortCiteRegEx" : "6",
      "year" : 2014
    }, {
      "title" : "Long short-term memory",
      "author" : [ "Sepp Hochreiter", "Jürgen Schmidhuber" ],
      "venue" : "Neural Computation,",
      "citeRegEx" : "7",
      "shortCiteRegEx" : "7",
      "year" : 1997
    }, {
      "title" : "Equitability revisited: Why the “equitable threat score” is not equitable",
      "author" : [ "Robin J Hogan", "Christopher AT Ferro", "Ian T Jolliffe", "David B Stephenson" ],
      "venue" : "Weather and Forecasting,",
      "citeRegEx" : "8",
      "shortCiteRegEx" : "8",
      "year" : 2010
    }, {
      "title" : "Flownet 2.0: Evolution of optical flow estimation with deep networks",
      "author" : [ "Eddy Ilg", "Nikolaus Mayer", "Tonmoy Saikia", "Margret Keuper", "Alexey Dosovitskiy", "Thomas Brox" ],
      "venue" : null,
      "citeRegEx" : "9",
      "shortCiteRegEx" : "9",
      "year" : 2017
    }, {
      "title" : "Spatial transformer networks",
      "author" : [ "Max Jaderberg", "Karen Simonyan", "Andrew Zisserman" ],
      "venue" : "In NIPS,",
      "citeRegEx" : "10",
      "shortCiteRegEx" : "10",
      "year" : 2015
    }, {
      "title" : "Structural-RNN: Deep learning on spatio-temporal graphs",
      "author" : [ "Ashesh Jain", "Amir R Zamir", "Silvio Savarese", "Ashutosh Saxena" ],
      "venue" : null,
      "citeRegEx" : "11",
      "shortCiteRegEx" : "11",
      "year" : 2016
    }, {
      "title" : "Active convolution: Learning the shape of convolution for image classification",
      "author" : [ "Yunho Jeon", "Junmo Kim" ],
      "venue" : null,
      "citeRegEx" : "12",
      "shortCiteRegEx" : "12",
      "year" : 2017
    }, {
      "title" : "A new measure of rank correlation",
      "author" : [ "Maurice G Kendall" ],
      "venue" : "Biometrika, 30(1/2):81–93,",
      "citeRegEx" : "13",
      "shortCiteRegEx" : "13",
      "year" : 1938
    }, {
      "title" : "Adam: A method for stochastic optimization",
      "author" : [ "Diederik Kingma", "Jimmy Ba" ],
      "venue" : "In ICLR,",
      "citeRegEx" : "14",
      "shortCiteRegEx" : "14",
      "year" : 2015
    }, {
      "title" : "Ensemble classification for anomalous propagation echo detection with clustering-based subset-selection",
      "author" : [ "Hansoo Lee", "Sungshin Kim" ],
      "venue" : "method. Atmosphere,",
      "citeRegEx" : "16",
      "shortCiteRegEx" : "16",
      "year" : 2017
    }, {
      "title" : "Interpretable structure-evolving LSTM",
      "author" : [ "Xiaodan Liang", "Liang Lin", "Xiaohui Shen", "Jiashi Feng", "Shuicheng Yan", "Eric P Xing" ],
      "venue" : null,
      "citeRegEx" : "17",
      "shortCiteRegEx" : "17",
      "year" : 2017
    }, {
      "title" : "Rectifier nonlinearities improve neural network acoustic models",
      "author" : [ "Andrew L Maas", "Awni Y Hannun", "Andrew Y Ng" ],
      "venue" : "In ICML,",
      "citeRegEx" : "18",
      "shortCiteRegEx" : "18",
      "year" : 2013
    }, {
      "title" : "The distribution of raindrops with size",
      "author" : [ "John S Marshall", "W Mc K Palmer" ],
      "venue" : "Journal of Meteorology,",
      "citeRegEx" : "19",
      "shortCiteRegEx" : "19",
      "year" : 1948
    }, {
      "title" : "Deep multi-scale video prediction beyond mean square error",
      "author" : [ "Michael Mathieu", "Camille Couprie", "Yann LeCun" ],
      "venue" : "In ICLR,",
      "citeRegEx" : "20",
      "shortCiteRegEx" : "20",
      "year" : 2016
    }, {
      "title" : "A benchmark dataset and evaluation methodology for video object segmentation",
      "author" : [ "Federico Perazzi", "Jordi Pont-Tuset", "Brian McWilliams", "Luc Van Gool", "Markus Gross", "Alexander Sorkine-Hornung" ],
      "venue" : null,
      "citeRegEx" : "21",
      "shortCiteRegEx" : "21",
      "year" : 2016
    }, {
      "title" : "Video (language) modeling: a baseline for generative models of natural videos",
      "author" : [ "MarcAurelio Ranzato", "Arthur Szlam", "Joan Bruna", "Michael Mathieu", "Ronan Collobert", "Sumit Chopra" ],
      "venue" : "arXiv preprint arXiv:1412.6604,",
      "citeRegEx" : "22",
      "shortCiteRegEx" : "22",
      "year" : 2014
    }, {
      "title" : "Convolutional LSTM network: A machine learning approach for precipitation nowcasting",
      "author" : [ "Xingjian Shi", "Zhourong Chen", "Hao Wang", "Dit-Yan Yeung", "Wai-kin Wong", "Wang-chun Woo" ],
      "venue" : "In NIPS,",
      "citeRegEx" : "23",
      "shortCiteRegEx" : "23",
      "year" : 2015
    }, {
      "title" : "Unsupervised learning of video representations using LSTMs",
      "author" : [ "Nitish Srivastava", "Elman Mansimov", "Ruslan Salakhutdinov" ],
      "venue" : "In ICML,",
      "citeRegEx" : "24",
      "shortCiteRegEx" : "24",
      "year" : 2015
    }, {
      "title" : "Use of NWP for nowcasting convective 10  precipitation: Recent progress and challenges",
      "author" : [ "Juanzhen Sun", "Ming Xue", "James W Wilson", "Isztar Zawadzki", "Sue P Ballard", "Jeanette Onvlee-Hooimeyer", "Paul Joe", "Dale M Barker", "Ping-Wah Li", "Brian Golding" ],
      "venue" : "Bulletin of the American Meteorological Society,",
      "citeRegEx" : "25",
      "shortCiteRegEx" : "25",
      "year" : 2014
    }, {
      "title" : "Decomposing motion and content for natural video sequence prediction",
      "author" : [ "Ruben Villegas", "Jimei Yang", "Seunghoon Hong", "Xunyu Lin", "Honglak Lee" ],
      "venue" : "In ICLR,",
      "citeRegEx" : "26",
      "shortCiteRegEx" : "26",
      "year" : 2017
    }, {
      "title" : "Generating videos with scene dynamics",
      "author" : [ "Carl Vondrick", "Hamed Pirsiavash", "Antonio Torralba" ],
      "venue" : "In NIPS,",
      "citeRegEx" : "27",
      "shortCiteRegEx" : "27",
      "year" : 2016
    }, {
      "title" : "Operational application of optical flow techniques to radar-based rainfall nowcasting",
      "author" : [ "Wang-chun Woo", "Wai-kin Wong" ],
      "venue" : "Atmosphere,",
      "citeRegEx" : "28",
      "shortCiteRegEx" : "28",
      "year" : 2017
    }, {
      "title" : "Online object tracking: A benchmark",
      "author" : [ "Yi Wu", "Jongwoo Lim", "Ming-Hsuan Yang" ],
      "venue" : "In CVPR,",
      "citeRegEx" : "29",
      "shortCiteRegEx" : "29",
      "year" : 2013
    }, {
      "title" : "Multi-scale context aggregation by dilated convolutions",
      "author" : [ "Fisher Yu", "Vladlen Koltun" ],
      "venue" : "In ICLR,",
      "citeRegEx" : "30",
      "shortCiteRegEx" : "30",
      "year" : 2016
    } ],
    "referenceMentions" : [ {
      "referenceID" : 21,
      "context" : "In addition to the inherent complexities of the atmosphere and relevant dynamical processes, the ever-growing need for real-time, large-scale, and fine-grained precipitation nowcasting poses extra challenges to the meteorological community and has aroused research interest in the machine learning community [23, 25].",
      "startOffset" : 308,
      "endOffset" : 316
    }, {
      "referenceID" : 23,
      "context" : "In addition to the inherent complexities of the atmosphere and relevant dynamical processes, the ever-growing need for real-time, large-scale, and fine-grained precipitation nowcasting poses extra challenges to the meteorological community and has aroused research interest in the machine learning community [23, 25].",
      "startOffset" : 308,
      "endOffset" : 316
    }, {
      "referenceID" : 17,
      "context" : "The radar echo maps are Constant Altitude Plan Position Indicator (CAPPI) images which can be converted to rainfall intensity maps using the Marshall-Palmer relationship or Z-R relationship [19].",
      "startOffset" : 190,
      "endOffset" : 194
    }, {
      "referenceID" : 26,
      "context" : "The conventional approaches to precipitation nowcasting used by existing operational systems rely on optical flow [28].",
      "startOffset" : 114,
      "endOffset" : 118
    }, {
      "referenceID" : 21,
      "context" : "[23] formulated precipitation nowcasting as a spatiotemporal sequence forecasting problem and proposed the Convolutional Long Short-Term Memory (ConvLSTM) model, which extends the LSTM [7] by having convolutional structures in both the input-to-state and state-to-state transitions, to solve the problem.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 6,
      "context" : "[23] formulated precipitation nowcasting as a spatiotemporal sequence forecasting problem and proposed the Convolutional Long Short-Term Memory (ConvLSTM) model, which extends the LSTM [7] by having convolutional structures in both the input-to-state and state-to-state transitions, to solve the problem.",
      "startOffset" : 185,
      "endOffset" : 188
    }, {
      "referenceID" : 26,
      "context" : "Using the radar echo sequences for model training, the authors showed that ConvLSTM is better at capturing the spatiotemporal correlations than the fully-connected LSTM and gives more accurate predictions than the Real-time Optical flow by Variational methods for Echoes of Radar (ROVER) algorithm [28] currently used by the Hong Kong Observatory (HKO).",
      "startOffset" : 298,
      "endOffset" : 302
    }, {
      "referenceID" : 26,
      "context" : "5mm/h threshold (indicating raining or not) alone is not sufficient for demonstrating the algorithm’s overall performance [28].",
      "startOffset" : 122,
      "endOffset" : 126
    }, {
      "referenceID" : 4,
      "context" : "Previous attempts have tried to solve the problem by revising the output of a recurrent neural network (RNN) from the raw prediction to be some location-variant transformation of the input, like optical flow or dynamic local filter [5, 3].",
      "startOffset" : 232,
      "endOffset" : 238
    }, {
      "referenceID" : 2,
      "context" : "Previous attempts have tried to solve the problem by revising the output of a recurrent neural network (RNN) from the raw prediction to be some location-variant transformation of the input, like optical flow or dynamic local filter [5, 3].",
      "startOffset" : 232,
      "endOffset" : 238
    }, {
      "referenceID" : 1,
      "context" : "TrajGRU allows the state to be aggregated along some learned trajectories and thus is more flexible than the Convolutional GRU (ConvGRU) [2] whose connection structure is fixed.",
      "startOffset" : 137,
      "endOffset" : 140
    }, {
      "referenceID" : 2,
      "context" : "We show that TrajGRU outperforms ConvGRU, Dynamic Filter Network (DFN) [3] as well as 2D and 3D Convolutional Neural Networks (CNNs) [20, 27] in both a synthetic MovingMNIST++ dataset and the HKO-7 dataset.",
      "startOffset" : 71,
      "endOffset" : 74
    }, {
      "referenceID" : 18,
      "context" : "We show that TrajGRU outperforms ConvGRU, Dynamic Filter Network (DFN) [3] as well as 2D and 3D Convolutional Neural Networks (CNNs) [20, 27] in both a synthetic MovingMNIST++ dataset and the HKO-7 dataset.",
      "startOffset" : 133,
      "endOffset" : 141
    }, {
      "referenceID" : 25,
      "context" : "We show that TrajGRU outperforms ConvGRU, Dynamic Filter Network (DFN) [3] as well as 2D and 3D Convolutional Neural Networks (CNNs) [20, 27] in both a synthetic MovingMNIST++ dataset and the HKO-7 dataset.",
      "startOffset" : 133,
      "endOffset" : 141
    }, {
      "referenceID" : 20,
      "context" : "Besides, since precipitation nowcasting can be viewed as a video prediction problem [22, 27], our work is the first to provide evidence and justification that online learning could potentially be helpful for video prediction in general.",
      "startOffset" : 84,
      "endOffset" : 92
    }, {
      "referenceID" : 25,
      "context" : "Besides, since precipitation nowcasting can be viewed as a video prediction problem [22, 27], our work is the first to provide evidence and justification that online learning could potentially be helpful for video prediction in general.",
      "startOffset" : 84,
      "endOffset" : 92
    }, {
      "referenceID" : 21,
      "context" : "Deep learning for precipitation nowcasting and video prediction For the precipitation nowcasting problem, the reflectivity factors in radar echo maps are first transformed to grayscale images before being fed into the prediction algorithm [23].",
      "startOffset" : 239,
      "endOffset" : 243
    }, {
      "referenceID" : 20,
      "context" : "[22] proposed the first RNN based model for video prediction, which uses a convolutional RNN with 1× 1 state-state kernel to encode the observed frames.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 22,
      "context" : "[24] proposed the LSTM encoder-decoder network which uses one LSTM to encode the input frames and another LSTM to predict multiple frames ahead.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 21,
      "context" : "The model was generalized in [23] by replacing the fully-connected LSTM with ConvLSTM to capture the spatiotemporal correlations better.",
      "startOffset" : 29,
      "endOffset" : 33
    }, {
      "referenceID" : 2,
      "context" : "[3] extended the model in [23] by making the network predict the transformation of the input frame instead of directly predicting the raw pixels.",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 21,
      "context" : "[3] extended the model in [23] by making the network predict the transformation of the input frame instead of directly predicting the raw pixels.",
      "startOffset" : 26,
      "endOffset" : 30
    }, {
      "referenceID" : 24,
      "context" : "[26] proposed to use both an RNN that captures the motion and a CNN that captures the content to generate the prediction.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 18,
      "context" : "Along with RNN based models, 2D and 3D CNN based models were proposed in [20] and [27] respectively.",
      "startOffset" : 73,
      "endOffset" : 77
    }, {
      "referenceID" : 25,
      "context" : "Along with RNN based models, 2D and 3D CNN based models were proposed in [20] and [27] respectively.",
      "startOffset" : 82,
      "endOffset" : 86
    }, {
      "referenceID" : 18,
      "context" : "[20] treated the frame sequence as multiple channels and applied 2D CNN to generate the prediction while [27] treated them as the depth and applied 3D CNN.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 25,
      "context" : "[20] treated the frame sequence as multiple channels and applied 2D CNN to generate the prediction while [27] treated them as the depth and applied 3D CNN.",
      "startOffset" : 105,
      "endOffset" : 109
    }, {
      "referenceID" : 5,
      "context" : "Both papers show that Generative Adversarial Network (GAN) [6] is helpful for generating sharp predictions.",
      "startOffset" : 59,
      "endOffset" : 62
    }, {
      "referenceID" : 21,
      "context" : "Structured recurrent connection for spatiotemporal modeling From a higher-level perspective, precipitation nowcasting and video prediction are intrinsically spatiotemporal sequence forecasting problems in which both the input and output are spatiotemporal sequences [23].",
      "startOffset" : 266,
      "endOffset" : 270
    }, {
      "referenceID" : 0,
      "context" : "Other than the ConvLSTM which replaces the full-connection with convolution and is designed for dense videos, the SocialLSTM [1] and the Structural-RNN (S-RNN) [11] have been proposed sharing a similar notion.",
      "startOffset" : 125,
      "endOffset" : 128
    }, {
      "referenceID" : 10,
      "context" : "Other than the ConvLSTM which replaces the full-connection with convolution and is designed for dense videos, the SocialLSTM [1] and the Structural-RNN (S-RNN) [11] have been proposed sharing a similar notion.",
      "startOffset" : 160,
      "endOffset" : 164
    }, {
      "referenceID" : 15,
      "context" : "[17] have proposed the Structure-evolving LSTM, which also has the ability to learn the connection structure of RNNs.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 27,
      "context" : "Benchmark for video tasks There exist benchmarks for several video tasks like online object tracking [29] and video object segmentation [21].",
      "startOffset" : 101,
      "endOffset" : 105
    }, {
      "referenceID" : 19,
      "context" : "Benchmark for video tasks There exist benchmarks for several video tasks like online object tracking [29] and video object segmentation [21].",
      "startOffset" : 136,
      "endOffset" : 140
    }, {
      "referenceID" : 21,
      "context" : "We adopt a similar formulation of the precipitation nowcasting problem as in [23].",
      "startOffset" : 77,
      "endOffset" : 81
    }, {
      "referenceID" : 21,
      "context" : "This structure is more reasonable than the previous structure [23] which does not reverse the link of the forecasting network because we are free to plug in additional RNN layers on top and no skip-connection is required to aggregate the low-level information.",
      "startOffset" : 62,
      "endOffset" : 66
    }, {
      "referenceID" : 28,
      "context" : "Here, N h i,j is the ordered neighborhood set at location (i, j) defined by the hyperparameters of the state-to-state convolution such as kernel size, dilation and padding [30].",
      "startOffset" : 172,
      "endOffset" : 176
    }, {
      "referenceID" : 9,
      "context" : "The warp(Ht−1,Ut,l,Vt,l) function selects the positions pointed out by Ut,l,Vt,l from Ht−1 via the bilinear sampling kernel [10, 9].",
      "startOffset" : 124,
      "endOffset" : 131
    }, {
      "referenceID" : 8,
      "context" : "The warp(Ht−1,Ut,l,Vt,l) function selects the positions pointed out by Ut,l,Vt,l from Ht−1 via the bilinear sampling kernel [10, 9].",
      "startOffset" : 124,
      "endOffset" : 131
    }, {
      "referenceID" : 11,
      "context" : "Recently, Jeon & Kim [12] has used similar ideas to extend the convolution operations in CNN.",
      "startOffset" : 21,
      "endOffset" : 25
    }, {
      "referenceID" : 11,
      "context" : "Moreover, we are revising the structure of the recurrent connection and have tested different number of links while [12] fixes the link number to 9.",
      "startOffset" : 116,
      "endOffset" : 120
    }, {
      "referenceID" : 22,
      "context" : "The previous MovingMNIST dataset [24, 23] only moves the digits with a constant speed and is not suitable for evaluating different models’ ability in capturing more complicated motion patterns.",
      "startOffset" : 33,
      "endOffset" : 41
    }, {
      "referenceID" : 21,
      "context" : "The previous MovingMNIST dataset [24, 23] only moves the digits with a constant speed and is not suitable for evaluating different models’ ability in capturing more complicated motion patterns.",
      "startOffset" : 33,
      "endOffset" : 41
    }, {
      "referenceID" : 13,
      "context" : "We train all models using the Adam optimizer [14] with learning rate equal to 10−4 and momentum equal to 0.",
      "startOffset" : 45,
      "endOffset" : 49
    }, {
      "referenceID" : 14,
      "context" : "The raw radar echo images generated by Doppler weather radar are noisy due to factors like ground clutter, sea clutter, anomalous propagation and electromagnetic interference [16].",
      "startOffset" : 175,
      "endOffset" : 179
    }, {
      "referenceID" : 7,
      "context" : "5, 2, 5, 10, 30 to calculate the CSI and Heidke Skill Score (HSS) [8].",
      "startOffset" : 66,
      "endOffset" : 69
    }, {
      "referenceID" : 3,
      "context" : "Specifically, we have evaluated the performance of deep learning models in the online setting by fine-tuning the algorithms using AdaGrad [4] with learning rate equal to 10−4.",
      "startOffset" : 138,
      "endOffset" : 141
    }, {
      "referenceID" : 21,
      "context" : "The ConvGRU model that is trained without balanced loss, which best represents the model in [23], has worse nowcasting score than the optical flow based methods at the 10mm/h and 30mm/h thresholds.",
      "startOffset" : 92,
      "endOffset" : 96
    }, {
      "referenceID" : 12,
      "context" : "Based on the evaluation results, we also compute the Kendall’s τ coefficients [13] between the MSE, MAE, B-MSE, B-MAE and the CSI, HSS at different thresholds.",
      "startOffset" : 78,
      "endOffset" : 82
    } ],
    "year" : 2017,
    "abstractText" : "With the goal of making high-resolution forecasts of regional rainfall, precipitation nowcasting has become an important and fundamental technology underlying various public services ranging from rainstorm warnings to flight safety. Recently, the Convolutional LSTM (ConvLSTM) model has been shown to outperform traditional optical flow based methods for precipitation nowcasting, suggesting that deep learning models have a huge potential for solving the problem. However, the convolutional recurrence structure in ConvLSTM-based models is location-invariant while natural motion and transformation (e.g., rotation) are location-variant in general. Furthermore, since deep-learning-based precipitation nowcasting is a newly emerging area, clear evaluation protocols have not yet been established. To address these problems, we propose both a new model and a benchmark for precipitation nowcasting. Specifically, we go beyond ConvLSTM and propose the Trajectory GRU (TrajGRU) model that can actively learn the location-variant structure for recurrent connections. Besides, we provide a benchmark that includes a real-world large-scale dataset from the Hong Kong Observatory, a new training loss, and a comprehensive evaluation protocol to facilitate future research and gauge the state of the art.",
    "creator" : null
  }
}