This paper proposes an unsupervised dependency parser, UDP, for Universal Dependencies (UD) that utilizes personalized PageRank and a small set of head-dependent rules. The parser requires no training data and estimates adposition direction directly from test data. The authors evaluate UDP on 32 languages and compare its performance to a multi-source delexicalized parser (MSD). The results show that UDP achieves competitive performance on all but two UD languages and is less affected by deteriorating POS tags and domain changes compared to MSD.
The main contributions of this work are:
1. The development of an unsupervised dependency parser that requires no training data and achieves competitive performance on UD languages.
2. The use of personalized PageRank to score content words and estimate adposition direction directly from test data.
3. The evaluation of UDP on three POS setups (gold, predicted, and naive) and across domains, demonstrating its robustness and resilience to domain changes.
The strengths of this paper are:
1. The proposal of a novel unsupervised dependency parser that achieves competitive performance on UD languages without requiring training data.
2. The use of personalized PageRank, which allows for effective scoring of content words and estimation of adposition direction.
3. The thorough evaluation of UDP on various POS setups and domains, providing insights into its robustness and limitations.
The weaknesses of this paper are:
1. The lack of comparison with other unsupervised dependency parsers, making it difficult to assess the novelty and impact of UDP.
2. The limited analysis of the parser's performance on specific languages and domains, which could provide valuable insights into its strengths and weaknesses.
3. The absence of a detailed discussion on the potential applications and future directions of UDP, which could help to contextualize its significance and relevance to the field.
Questions to the authors:
1. How does UDP compare to other unsupervised dependency parsers in terms of performance and novelty?
2. Can the authors provide more detailed analysis and insights into the parser's performance on specific languages and domains?
3. What are the potential applications and future directions of UDP, and how can it be improved and extended to address current challenges in dependency parsing?