This paper proposes a model for event linking using convolutional neural networks (CNNs). The authors generate vector representations for event mentions by passing word embeddings through a CNN, followed by max-pooling. These representations are concatenated with word embeddings from the surrounding context. Combined with pairwise features, the model uses a single-layer neural network to compute a similarity vector and derive a coreference score. 
The approach is evaluated on the ACE dataset and an expanded version, achieving performance comparable to prior feature-rich systems. The primary contribution of this work lies in introducing a neural method for event linking that integrates word embeddings with linguistic features. Notably, the study highlights that word embeddings alone are insufficient for strong performance, but the linguistic features employed are minimal and do not rely on manually-crafted external resources.
Experimental Setting
- The authors rely on gold trigger words rather than predicted ones, which they justify as reasonable. However, I would have preferred to see results using predicted triggers, especially since one of the baseline systems uses predicted triggers, making the comparison less equitable.
- The use of different train/test splits across papers is concerning. I encourage the authors to adhere to established splits wherever possible for consistency.
Unclear Points
- The claim that cross-sentential information is necessary is supported by the numbers, but the final statement in the second paragraph (lines 65-70) is unclear.
- The embeddings for positions are described as being generated "in a way similar to word embeddings," but the exact method is not specified. Are they randomly initialized or lexicalized? It is unclear why the same relative position next to different words should share an embedding.
- The process for incorporating left and right neighbors into the representation (lines 307-311) is unclear. Does this only influence the max-pooling step?
- The decision to append word embeddings for one word before and one word after the trigger seems somewhat arbitrary. Why this specific choice and not others?
- The role of the event-mention representation \(ve\) (line 330) is unclear. Subsequent sections seem to focus on \(v{sent+lex}\), with no mention of \(v_e\).
- The use of pairwise features in Section 3.2 requires clarification. Are binary features encoded as a binary vector? How is the distance feature handled? Are these features fixed during training?
Other Issues and Suggestions
- Could the proposed approach be extended to entity coreference resolution? This would enable comparisons with additional prior work and datasets like OntoNotes.
- The use of a square function as a nonlinearity is intriguing. Is this a novel contribution? Do you see potential applications for this function in other tasks?
- Regarding datasets, while one dataset is publicly available, the ACE++ dataset is not. Are there plans to release ACE++? Making it available would facilitate comparisons with future methods. Additionally, it would have been helpful to compare feature-rich systems on this dataset as well.
- Some reported results are very close. Statistical significance testing would strengthen the claims made in the paper.
- In the related work section, it might be worth mentioning the neural coreference resolution approach by Wiseman et al. (2015).
Minor Issues
- Line 143: The word "that" is redundant.
- In Table 6, one baseline is labeled "same type," but in the text (line 670), it is referred to as "same event." This inconsistency should be addressed.
References
- Learning Anaphoricity and Antecedent Ranking Features for Coreference Resolution. Sam Wiseman, Alexander M. Rush, Jason Weston, and Stuart M. Shieber. ACL 2015.