This paper presents a transition-based graph parser able to cope with the rich
representations of a semantico-cognitive annotation scheme, instantiated in the
UCCA corpora. The authors start first by exposing what, according to them,
should cover a semantic-based annotation scheme: (i) being graph-based
(possibility for a token/node of having multiple governors) (2) having
non-terminal nodes (representing complex structures â€“ syntactic -: coordinate
phrases, lexical: multiword expression) and (3) allowing discontinuous elements
(eg. Verbs+particules). Interestingly, none of these principles is tied to a
semantic framework, they could also work for syntax or other representation
layers. The authors quickly position their work by first introducing the larger
context of broad-coverage semantic parsing then their annotation scheme of
choice (UCCA).              They then present 3 sets of parsing experiments: (i) one
devoted to phrase-based parsing using the Stanford parser and an UCCA to
constituency conversion, (ii) one devoted to dependency parsing using an UCCA
to dependency conversion and finally (iii) the core of their proposal, a  set
of experiments showing that their transition-based graph parser is suitable for
direct parsing of UCCA graphs.
I found this work interesting but before considering a publication, I have
several concerns with regards to the methodology and the empirical
justifications:
The authors claimed that there are the first to propose a parser for a
semantically-oriented scheme such as theirs. Of course, they are. But with all
due respect to the work behind this scheme, it is made of graphs with a various
level of under-specified structural arguments and semantically oriented label
(Process, state) and nothing in their transition sets treats the specificities
of such a graph. Even the transitions related to the remote edges could have
been handled by the other ones assuming a difference in the label set itself
(like adding an affix for example). If we restrict the problem to graph
parsing, many works post the 2014-2015 semeval shared tasks (Almeda and
Martins, 2014,2015 ; Ribeyre et al, 2014-2015) proposed an extension to
transition-based graph parser or an adaptation of a higher-model one, and
nothing precludes their use on this data set.  It's mostly the use of a
specific feature template that anchors this model to this scheme (even though
it's less influencial than the count features and the unigram one). Anyway,
because the above-mentioned graph-parsers are available [1,2] I don't
understand why they couldn't be used as a baseline or source of comparisons.
Regarding the phrase-based  experiments using uparse, it could have been also
validated by another parser from Fernandez-Gonzales and Martins (2015) which
can produce LCFRS-like parsing as good as Uparse (ref missing when you first
introduced uparse).  
Because this scheme supports a more abstract view of syntaxico-semantic
structures than most of the SDP treebanks, it would have been important to use
the same metrics as in the related shared task. At this point in the field,
many systems, models and data set are competing and I think that the lack of
comparison points with other models and parsers is detrimental to this work as
whole. Yet I found it interesting and because we're at crossing time in term
of where to go next, I think that this paper should be discussed at a
conference such as ConLL.
Note in random order
-         please introduce the "grounded semantic" before page 2, you use
that phrase before
-         why haven't you try to stick to constituent-tree with rich node
labels and propagater traces and then train/parse with the Berkeley parser? It
could have been a good baseline. 
-         The conversion to surface dependency trees is in my mind useless: you
loose too many information, here a  richer conversion such as the one from
'Schluter et al, 2014, Semeval SDP) should have been used.
-         Can you expand on "UCCA graphs may contains implicit unit that have
no correspondent in the text"  or provide a ref or an example.
-         You mentioned other representations such as MRS and DRT, this raises
the fact that your scheme doesn't seem to allow for a modelling of quantifier
scope information. It's thus fully comparable to other more syntax-oriented
scheme. It's indeed more abstract than DM for example and probably more
underspecified than the semantic level of the PCEDT but how much? How really
informative is this scheme and how really "parsable" is it? According to
your scores, it seems "harder" but an  error analysis would have been
useful.
- As I said before, the 3 principles you devised could apply to a lot of
things,  they look a bit ad-hoc to me and would probably need to take place in
a much wider (and a bit clearer) introduction. What are you trying to argue
for: a parser that can parse UCCA? a model suitable for semantic analysis ? or
a semantic oriented scheme that can actually be parsable?  you're trying to say
all of those in a very dense way and it's borderline to be be confusing.
[1] http://www.corentinribeyre.fr/projects/view/DAGParser
[2] https://github.com/andre-martins/TurboParser and
https://github.com/andre-martins/TurboParser/tree/master/semeval2014_data