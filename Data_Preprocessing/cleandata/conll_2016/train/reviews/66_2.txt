General comments
================
The paper presents a joint syntactic and semantic transition-based dependency
parser,
inspired from the joint parser of Henderson et al. (2008).
The authors claim two main differences:
- vectorial representations are used for the whole parser's state, instead of
the top elements of the stack / the last parser's configurations
- the algorithm is a plain greedy search
The key idea is to take advantage of stack LSTMs so that the vector
representing the state of the parser
keeps memory of potentially large scoped syntactic features, which
are known to be decisive features for semantic role labeling
(such as the path between the predicate and the candidate role filler head).
The system is tested on the CoNLL 2008 data set (English) and on the
multilingual CoNLL 2009 data set.
The authors compare their system's performance to previously reported
performances,
showing their system does well compared to the 2008 / 2009 systems, 
but less compared to more recent proposals (cf. bottom of table 3).
They emphasized though that the proposed system does not require any hand-craft
features,
and is fast due to the simple greedy algorithm.
The paper is well written and describes a substantial amount of work,
building on the recently popular LSTMs, applied to the Henderson et al.
algorithm
which appears now to have been somewhat visionary.
I have reservations concerning the choice of the simple greedy algorithm:
it renders results not comparable to some of the cited works.
It would not have been too much additional work nor space to provide for
instance beam-searched performance.
More detailed comments / questions
==================================
Section 2:
A comment on the presence of both A1 and C-A1 links would help understanding
better the target task of the paper.
A summary of the differences between the set of transitions used in this work
and that of Henderson et al. should be provided. In its current form, it is
difficult to 
tell what is directly reused from Henderson et al. and what is new / slightly
modified.
Section 3.3
Why do you need representations concatenating the word predicate and its
disambiguated sense,
this seems redundant since the disambiguated sense are specific to a predicate
?
Section 4
The organization if the 4.1 / 4.2 sections is confusing concerning
multilinguality.
Conll 2008 focused on English, and CoNLL 2009 shared task extended it to a few
other languages.