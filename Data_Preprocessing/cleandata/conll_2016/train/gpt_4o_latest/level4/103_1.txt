This paper introduces a novel approach for assessing topic quality by leveraging word embeddings to compute similarity, either directly or through matrix factorization. The method demonstrates strong performance across standard datasets, achieving notable results.
The proposed approach represents a logical and significant progression in the research trajectory of topic evaluation. However, a key concern with the results lies in the inconsistencies observed across datasets. While state-of-the-art performance is achieved for all three datasets, the methods vary considerably in effectiveness, with some performing below the state of the art. Specifically, none of the proposed methods consistently outperforms the state of the art across all datasets, and the SVD-based methods perform particularly poorly on the genomics dataset. This inconsistency raises concerns for practitioners seeking to adopt the method for arbitrary datasets. It seems plausible that the lower performance of SVD on the genomics dataset is linked to the proportion of out-of-vocabulary (OOV) terms (see further comments below). It might be possible to predict which method would perform best based on vocabulary overlap with GloVe embeddings or similar metrics, but this issue is not addressed in the paper.
Additional points of concern:
- The proposed method bears significant resemblance to techniques discussed in the lexical chaining literature. The authors are encouraged to explore this body of work and incorporate relevant insights in future iterations of the paper.
- While the authors emphasize that their method is parameter-free, it should be noted that the word embedding models employed inherently involve a substantial number of parameters. Although this is not a critical issue, it is worth acknowledging explicitly.
- The paper does not clarify how the method handles OOV terms, such as those found in the genomics dataset (i.e., terms absent from the pretrained GloVe embeddings). Are these terms simply excluded? If so, what implications does this have for the method's performance?
Minor issues:
- In Section 2.1, the description of word embeddings implicitly assumes that vector length is irrelevant, as cosine similarity is used to measure similarity between vectors. While this is valid for unit-length vectors, it is worth noting that word2vec does not inherently produce unit-length vectors (pretrained vectors are normalized post hoc, but vectors generated independently may vary in length). This is a small but important detail.
- The graphs in Figure 1 are too small to be legible.