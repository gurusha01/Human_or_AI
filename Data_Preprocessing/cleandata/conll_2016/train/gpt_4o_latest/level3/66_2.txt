Review of the Submission
Summary and Contributions  
This paper introduces a joint syntactic and semantic transition-based dependency parser inspired by Henderson et al. (2008), with two key innovations: the use of vectorial state representations via stack LSTMs and a greedy search algorithm. The core idea is the use of stack LSTMs to capture large-scoped syntactic features, such as the path between predicates and role fillers, which are critical for semantic role labeling (SRL). The system is evaluated on the CoNLL 2008 (English) and CoNLL 2009 (multilingual) datasets, achieving competitive performance compared to older systems and demonstrating the feasibility of joint parsing without hand-crafted features. The parser's simplicity and speed, enabled by its greedy algorithm, make it a practical choice for real-world applications. The authors also promise an open-source implementation, which could benefit the research community.
The primary contributions of this work are:  
1. A novel application of stack LSTMs to joint syntactic and semantic dependency parsing, obviating the need for hand-crafted features.  
2. A fast, greedy parsing algorithm that achieves competitive results on benchmark datasets.  
3. A demonstration of the potential for joint parsing models to approach the performance of pipeline systems while maintaining simplicity and efficiency.
Strengths  
1. Innovative Use of Stack LSTMs: The paper effectively leverages stack LSTMs to represent the entire parser state, enabling the model to capture long-range syntactic and semantic dependencies without relying on expensive, hand-crafted features. This is a significant step forward in representation learning for joint parsing tasks.  
2. Practical Efficiency: The greedy algorithm ensures linear-time parsing, making the system highly efficient. The reported runtime (177.6 seconds for CoNLL 2009 English test data) is impressive and demonstrates the system's potential for real-world applications.  
3. Well-Written and Clear Presentation: The paper is well-structured and provides a clear explanation of the proposed approach, including detailed descriptions of the transitions, stack LSTMs, and experimental setup.  
4. Open-Source Commitment: The promise of releasing an open-source implementation is commendable and will likely encourage further research and adoption of the proposed method.
Weaknesses  
1. Greedy Algorithm Limitations: While the greedy algorithm ensures speed, it sacrifices accuracy compared to beam search or global optimization methods. This trade-off limits the system's comparability to state-of-the-art models and may hinder its adoption for tasks requiring higher accuracy.  
2. Evaluation Gaps: The system lags behind recent state-of-the-art SRL systems that use global optimization or additional annotated datasets. The authors acknowledge this but do not provide a clear roadmap for integrating such advances into their model.  
3. Clarity Issues in Section 2: The explanation of A1 and C-A1 links is unclear, and the differences between the proposed transitions and Henderson et al.'s work are not sufficiently summarized. This could confuse readers unfamiliar with the prior work.  
4. Redundancy in Section 3.3: The necessity of concatenating word predicates with their disambiguated senses is questionable, as it seems redundant and adds complexity without clear justification.  
5. Confusing Organization in Section 4: The separation of multilingual results into Sections 4.1 and 4.2 is unclear, making it difficult to follow the discussion of CoNLL 2008 and 2009 datasets.
Questions to Authors  
1. Could you clarify the specific advantages of using stack LSTMs over other neural architectures for joint parsing tasks?  
2. Why was a greedy algorithm chosen over beam search, and how do you plan to address its limitations in future work?  
3. Could you elaborate on the rationale for concatenating word predicates with their disambiguated senses in Section 3.3?  
4. How does the system handle cases where the oracle conversion of semantic parses into transitions fails (e.g., the 1.5% of sentences in CoNLL 2009)?  
Recommendation  
This paper presents a promising approach to joint syntactic and semantic dependency parsing, with notable contributions in efficiency and representation learning. However, the reliance on a greedy algorithm and the lack of clarity in certain sections slightly weaken its impact. I recommend acceptance with minor revisions to address the clarity issues and provide additional justification for design choices.