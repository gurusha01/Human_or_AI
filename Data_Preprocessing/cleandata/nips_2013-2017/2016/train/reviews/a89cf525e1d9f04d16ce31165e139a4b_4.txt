This paper develops a method to impose sparse prior to learn encoders and decoders in the information bottleneck framework. The authors show how one can use variational approximation to solve the optimization problem. The method is shown to learn Gabor-like filters on image patches, similar to those learned from traditional sparse coding. The authors further describe a kernel method extension which allows one to learn non-linear encoders. The effectiveness is demonstrated through an image inpainting task of occluded hand-written digits. This paper is well-written and the methods are sound. It is interesting to see how one can incorporate sparse prior in the information bottleneck framework, and yield visually similar results to conventional sparse coding. However, the effectiveness of the sparse prior is well-known and there already exist various formulations that use the idea of sparsity (e.g., LASSO, sparse autoencoder, etc). The paper will be much stronger if the authors can provide more insights and quantitative comparisons to justify the benefits from the IB method. The method seems particularly related to sparse auto-encoder in that both methods can yield linear encoder and decoder. The experiments reported seem a bit too simple to me, mostly performed on 9x9 image patches without further analyzing the results. Hence it is unclear in what circumstances one would consider the IB method. The example applications shown in this paper, image denoising and image inpainting, both can be solved with conventional sparse coding. Is the IB method better in these tasks? Overall, I think this is a sound paper, but more comparisons with existing methods are needed to justify its value. Detailed comments: 1. Line 32 mentions varying gamma to trade off between encoding quality and compression. This can be similar done in other sparse coding methods, for example, the strength of l1-norm regularization in LASSO. I don't see this as a unique quality of sparse IB. 2. The other difference to conventional sparse coding is that the IB method learns particular input-output relationship. How does one choose a proper output? 3. Line 73: Do you mean q(y|r) = N(y|Ur)?