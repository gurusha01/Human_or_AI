This manuscript presents a novel approach to estimating the J-S divergence between an MCMC sampler and its target distribution using bidirectional Monte Carlo, with a focus on debugging and evaluating MCMC implementations in probabilistic programming languages. The concept of leveraging BDMC to identify convergence issues in samplers is intriguing and potentially valuable, given the limitations of existing MCMC diagnostics. Relevant studies, such as [1,2], have also investigated the performance of MCMC samplers by applying them to data drawn from the prior. However, in Section 3.1, the derivation is obscure and difficult to follow, partly due to the premature introduction of q(.), which appears to represent the marginal distribution of the AIS sampler after T steps, but lacks explicit definition. Although the supplement provides some clarification, the main text should be self-contained and not require supplementary material for comprehension. A step-by-step guide on applying the method would be beneficial, as the reader currently needs to assemble the process from various parts of the manuscript. Some minor suggestions include simplifying the notation by consolidating unobserved variables z and theta, as they are always used together, and correcting the missing close parentheses on Line 165. The references [1] Geweke, J. (2004). Getting it right: Joint distribution tests of posterior simulators. Journal of the American Statistical Association, 99(467), 799–804. http://doi.org/10.1198/016214504000001132 and [2] Cook, S. R., Gelman, A., & Rubin, D. B. (2012). Validation of software for Bayesian models using posterior quantiles. Journal of Computational and Graphical Statistics, 15(3), 675–692. http://doi.org/10.1198/106186006X136976 are noteworthy in this context.