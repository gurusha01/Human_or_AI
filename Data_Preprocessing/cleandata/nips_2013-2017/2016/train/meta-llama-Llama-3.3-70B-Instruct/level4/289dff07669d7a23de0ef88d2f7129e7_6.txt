The paper presents a modified version of the CMA-ES algorithm, referred to as Cholesky-CMA-ES, which allegedly offers "Optimal Covariance Update and Storage Complexity" without altering the algorithm's behavior, instead reducing its computational cost. However, the naming convention used is problematic, as it was originally introduced by T. Suttorp et al. in 2009 for a similar algorithm, and this precedent is not acknowledged by the authors. The proposed method builds upon the work of Krause et al. from 2015, with the primary algorithmic innovation being the iterative application of the rankOneUpdate function for all individuals, a technique also present in Krause et al.'s work. Empirical results show a difference in the Cigar function, potentially due to the plotting of median results. A comparison with Suttorp's Cholesky-CMA-ES and Krause's variant is necessary to validate the claims. The assertion of "Optimal Covariance Update and Storage Complexity" is somewhat misleading, as optimality depends on the context, such as the Sphere function where a covariance matrix is unnecessary, or separable functions where only the diagonal is relevant. The proposed approach is only twice as efficient as Suttorp's Cholesky CMA-ES, which is claimed to be prone to numerical instabilities, contrary to the original paper's findings. The omission of Suttorp's method in Figure 3 may mislead readers about the paper's actual contribution. While the modification may offer some improvement in terms of time and memory when considering the full covariance matrix, its impact on large-scale optimization is limited due to the quadratic complexity. The work is largely incremental, with the main contribution being a single "for" loop. To strengthen the paper, the following modifications are suggested: resolve the naming issue, conduct experiments with variants from Suttorp et al. and Krause et al., and update the figures accordingly, and provide a clearer explanation of the algorithmic contribution. Additionally, minor corrections, such as the frequency of eigenvalue decomposition in proper implementations, should be addressed.