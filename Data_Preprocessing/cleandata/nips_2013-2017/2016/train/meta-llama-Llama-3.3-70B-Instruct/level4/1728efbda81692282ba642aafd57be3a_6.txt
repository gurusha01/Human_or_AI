This paper presents a spectral analysis of the Koopman operator within reproducing kernel Hilbert spaces, accompanied by an algorithm for performing this analysis using measurement data from dynamical systems. The Koopman operator, originating from fluid dynamics, is suggested to have implications for machine learning. The authors illustrate their algorithm and analysis through two simple dynamical systems: a damped linear 1D dynamics and a chaotic map. Additionally, they apply their method to real-world locomotion data, comparing its performance to standard dynamic mode decomposition, PCA, and kernel PCA, though the results are somewhat ambiguous. 
The paper offers an interesting extension of dynamic mode decomposition, aligning with previous work on "kernelizing" techniques framed in terms of linear operators, such as kernel PCA, kernel ICA, and others. Experimental results are provided for largely artificial problems. The paper is well-written and has educational value, particularly for those unfamiliar with fluid dynamics concepts. As someone who supports introducing machine learning practitioners to techniques from other disciplines, I find this work promising. 
However, the paper focuses on decomposition techniques for functions used to construct dynamical systems without stochastic components, a setup less common in machine learning where random effects are typically considered. To convince machine learning readers of the practical utility of these techniques, the authors should explore potential use cases and demonstrate competitiveness with state-of-the-art methods. For instance, in robotics, where inference and learning in dynamical systems are crucial, it would be beneficial to explain how Koopman analysis could contribute to this field or another relevant domain.
While the theoretical derivations are sound, they do not significantly surprise, given the foundation in kernel PCA, kernel ICA, or subsequent work on kernel independence tests. The approach involves a linear operator and functions within an RKHS, leading to algorithms that perform eigendecomposition on finite-D matrices. 
Some specifics require clarification: it is unclear whether the modal decomposition algorithm necessitates an explicit representation in feature space. If so, this is a limitation compared to kernel PCA, and the authors should highlight this. Furthermore, demonstrating the performance of standard dynamic mode decomposition on the toy example and the Henon map would help illustrate the differences in this simple setup.