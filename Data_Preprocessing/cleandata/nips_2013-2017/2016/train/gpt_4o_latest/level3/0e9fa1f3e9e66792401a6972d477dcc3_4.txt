The paper introduces AutoBDMC, a novel method for assessing MCMC convergence by extending Bidirectional Monte Carlo (BDMC) and leveraging annealed importance sampling (AIS). The method provides a scalar quantity to bound the Jensen-Shannon divergence between the true posterior and approximate samples, addressing a critical challenge in probabilistic inference. AutoBDMC is evaluated on synthetic data and further demonstrated for real-world applications, including model selection and debugging. The integration into WebPPL and Stan highlights its practical utility for probabilistic programming.
Strengths:  
The paper is well-motivated, addressing a significant gap in MCMC convergence diagnostics. By bounding the Jensen-Shannon divergence, AutoBDMC offers a rigorous and interpretable measure of convergence, which is a step forward compared to existing heuristics. The authors validate the method on synthetic data and propose a protocol for real-world data, ensuring practical relevance. The integration into widely-used probabilistic programming languages (WebPPL and Stan) demonstrates the method's applicability and potential impact on practitioners. Additionally, the use of AutoBDMC for debugging probabilistic programming implementations is a compelling contribution, as evidenced by its identification of a bug in WebPPL.
Weaknesses:  
While the paper is generally well-written, Section 3, particularly 3.1, is dense and challenging to follow. Clearer transitions and explicit novelty statements would improve readability and help situate the contribution relative to prior work. The definition of AutoBDMC is somewhat ambiguous, and the scope and approach should be explicitly clarified. Notational inconsistencies, such as switching between \(y\) and \(D\) for data, detract from the paper's clarity. Minor errors (e.g., Line 149) further disrupt the flow. Additionally, while the supplemental code is a valuable resource, its usability could be improved by including version compatibility, integration instructions, or releasing it as an npm package for WebPPL and similar enhancements for Stan.
Pro and Con Arguments for Acceptance:  
Pro:  
1. Addresses a critical problem in MCMC convergence diagnostics with a rigorous and interpretable approach.  
2. Demonstrates practical utility through integration into WebPPL and Stan, with real-world applications.  
3. Provides a debugging tool for probabilistic programming, showcasing its broader utility.  
Con:  
1. Section 3.1 is difficult to follow, and the novelty is not clearly articulated.  
2. Notational inconsistencies and minor errors detract from the paper's clarity.  
3. Supplemental materials could be more user-friendly to maximize impact.  
Evaluation:  
Quality: The method is technically sound, with claims supported by theoretical analysis and experimental validation. However, the clarity of Section 3.1 could be improved.  
Clarity: The paper is readable overall but suffers from dense sections, notational inconsistencies, and minor errors.  
Originality: The approach is novel, extending BDMC for MCMC diagnostics and integrating it into probabilistic programming frameworks.  
Significance: The results are important, offering a rigorous tool for convergence diagnostics with applications in model selection, debugging, and probabilistic programming.  
Recommendation: Accept with minor revisions. Addressing the clarity issues in Section 3.1, resolving notational inconsistencies, and improving the supplemental materials would significantly enhance the paper's impact.