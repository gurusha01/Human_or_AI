The authors introduce a general framework for evaluating MCMC transition operators, leveraging a recently proposed method called bidirectional Monte Carlo (BDMC). BDMC employs two annealed importance sampling (AIS) sweeps, akin to those in the Tempered Transitions (TT) method [Neal, Stat & Comp, 1996], but reinterprets the accumulated probabilities as bounds on the marginal likelihood. The proposed approach uses the gap between these bounds as a performance metric for MCMC transition operators. The technical contributions include implementations of BDMC for the Stan and WebPPL probabilistic programming systems and a protocol for assessing posterior inference quality. 
This paper has notable strengths and some areas for improvement. A key strength is the simplicity and practicality of using BDMC to evaluate MCMC convergence, which makes it a potentially impactful contribution. This is particularly relevant for probabilistic programming systems, the primary focus of this work, where such a method could become a standard feature. However, the novelty and depth of the technical contributions are somewhat limited. While the authors cite an arXiv submission on BDMC, they dedicate significant space to reiterating its description, resulting in a rushed presentation of the main technical contributions in Sections 3.1 and 3.2. The writing quality in these sections also declines, leading to some clarity issues (detailed below). Despite these issues, the observation that the gap between the bounds provides an upper bound on the Jensen-Shannon divergence is insightful, though not entirely novel.
A notable omission is the lack of citation of Radford Neal's work on Tempered Transitions [Statistics and Computing (1996) 6, 353-366], which is highly relevant. This omission is also present in the BDMC manuscript, raising questions about the authors' awareness of this connection. Neal's TT method performs similar reverse "heating" and forward "annealing" sweeps as BDMC, but with the goal of improving mixing in multimodal distributions. The acceptance ratio in TT corresponds to the ratio of the stochastic lower and upper bounds, as described in Section 3.3 of Neal's paper. This connection could have been explored further, particularly regarding the choice of β_t values. In TT, step size Δβ significantly impacts performance, with large steps reducing acceptance rates and small steps wasting computation. Similarly, the BDMC bounds' gap depends on Δβ, offering clear guidance: if the bounds are too far apart, Δβ should be reduced. This insight could improve comparisons between MCMC operators, especially when the log-bound gap exceeds 1 nat. The "auto" aspect of AutoBDMC is unclear, but it could involve iteratively adjusting Δβ until reliable results are achieved. A systematic study of how the bounds vary with step size would strengthen the experimental section.
Despite these criticisms, the proposed method is promising and potentially useful. If the authors address the clarity issues and improve the discussion of related work in the camera-ready version, I would consider supporting acceptance.
Clarity
- The definition of $\vec{v}$ as "all of the variables sampled in AIS before the final stage" is vague. Presumably, this refers to ${z{1:T-1}, \theta{1:T-1}}$, but this is unclear due to the two AIS sweeps.
- The inconsistent use of labels "rev"/"fwd" and "for"/"back" is confusing. Are these differences intentional or accidental?
- Equations (5-7) and (9-11) lack a clear definition of the estimator $\hat{p}(y)$ being used. Should these equations involve $E[\log \hat{R}{\text{rev}}]$ and $E[\log \hat{R}{\text{fwd}}]$?
- Equation (6) is nonsensical as written, as the distributions inside the KL divergence are identical. Based on Equations (4) and (10), the correct terms might involve $p(z, \theta | y)$ and $q_{\text{back}}(v | z, \theta, y)$.
- The term "AutoBDMC" is not clearly defined. Does it refer to (a) assessing convergence using the stochastic bounds' difference and (b) the fixed hyperparameter scheme in Section 3.2?
Experiments
- The choice of β_t is unclear. The appendix code suggests `var step = 1/options.steps`, implying AutoBDMC is parameterized by the number of steps T. This should be explicitly stated.
- Figures 2 and 3 lack clarity on whether "HMC / No-U-Turn steps" refers to the number of steps used in BDMC.
- The acronym RAIS (reverse AIS) is undefined, as are the variants (u)c(R)AIS, which likely refer to (un)collapsed versions.
- The axes and tick labels in the figures should be enlarged for readability.
Typos
- Missing closing parentheses in the DKL terms in the DJS expression.
- In the NUTS citation: "Homan" should be "Hoffman."