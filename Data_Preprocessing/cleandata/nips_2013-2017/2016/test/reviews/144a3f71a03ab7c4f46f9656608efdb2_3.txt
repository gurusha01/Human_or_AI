The paper describes an efficient means to incorporate ancestral constraints in finding optimal Bayesian networks from data. It does this by translating a set of ancestral constraints into a (maximal) set of ordering constraints that are subsequently used in a score-based learning algorithm based on the EC tree introduced by [Chen et al., 2015]. Results are evaluated against a straightforward modification of the ILP based Gobnilp algorithm and shown to outperform this significantly in the given setting. Overall reasonably well written and clearly explained, although the solution is indeed conceptually straightforward. Novel problem + solution, nice result, not spectacular, but definitely of interest to a specialist audience. The problem tackled in this paper is interesting and new in the sense that optimal BN learning in combination with ancestral constraints has no readily available 'standard solution' (novelty=3). However, part of the reason behind this apparent deficiency is that the situation is a somewhat artificial setting: once ancestral relations come into play it would make more sense to go for more general causal discovery algorithms that also allow for unobserved confounders. (hence impact=2) The approach taken is based on translating hard-to-use ancestral constraints, that do not fit well in decomposable-score-based algorithms, into sets of ordering constraints that are more easily expressed in terms of absence of edges, which do fit decomposable scores. The mapping is done through a MaxSAT solver which ensures that all implied ancestral constraints are made explicit. However, some of the rules in 257-261 seem strange or incomplete: for example the premiss in acyclicity rule 3 is symmetric ( (X < Y) and (Z < W) == (Z < W) and (X < Y)), but the conclusion is not (Y -/-> Z); also rule 4 seems to exclude ancestral constraints of the type 'X and Y do not cause each other'. Furthermore, one might expect that in practice only a few ancestral constraints are given, and these are unlikely to significantly reduce the search space. The resulting comparison against Gobnilp with added linear constraints looks impressive, but the latter is not developed to tackle this problem. A reasonable alternative to measure performance would be to assume that the ancestral constraints are in line with the optimal model, and compare against a greedy algorithm like GES which for oracle input should produce the same output. Of course greedy algorithms in general cannot guarantee optimality, but it would provide at least a more meaningful indication of the efficiency achieved by the method in the paper. Minor details: - 30: is there a difference between a (standard) oracle and an omniscient oracle? - 38: 'empower the oracle' = 'use in combination with the oracle' ? - 90: mention here optimizing = minimizing - 164: Theorem 1 should state more clearly that the indicated set of constraints A satisfied by CPDAG P on the EC tree is only a subset of the set of constraints A satisfied by the full DAG G (otherwise the iff does not apply) - 225-227: Theorem 3 seems unlikely to lead to many positive edge implications given sparse (small sets of) ancestral constraints. - 267: not easily recognisable as capturing 'acyclic' (see also above) - 310: for reasonable size graphs 10%-25% ancestral constraints would already imply extensive knowledge of the target graph (so not typical in practice)