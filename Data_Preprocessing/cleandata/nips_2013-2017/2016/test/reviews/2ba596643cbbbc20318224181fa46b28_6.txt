This paper studies a new multi-armed bandit setting. The setting is that there are $M$ fidelities at which the learner can choose to play an arm. Each successive fidelity provides a better approximation to the rewards but expends larger cost. If a strategy can use the lower and cheaper fidelities to eliminate several sub-optimal arms, while reserve higher and more expensive fidelities for a small subset of good arms, then it may outperform the standard UCB algorithm that neglects these characteristics of the fidelities. The setting could be applied to online advertising, where one may like to display ads for a few minutes to approximate the clicks in long run, for cost concern. For this problem, the authors consider a new regret definition, provide an algorithm with theoretical analysis (including regret lower bound), and conduct simulation. The analysis is novel. As each \varepsilon^{(m)}, the deviation of the mth fidelity mean from the one of the highest fidelity, is assumed to be known in advance, how do we know the values in practice (such as the application in online advertising)? Is it possible to relax the assumption? Minors: 1) line 326, 357, and 386: "... arm k \in H^{(m)}", 'H' should be 'K'. 2) line 343: For the last indicator term in the inequality, the argument "\Beta{k^\ast,t} \leq s", 's' should be \mu{\ast}. 3) line 345: \gamma ---> \gamma^{(m)} 4) line 346~347: "... and the last step uses \psi( \Deltak^{(m)} - \gamma^{(m)} ) \leq \psi( \gamma^{(m)} ) when \psi( \Deltak^{(m)} ) \leq 2 \gamma^{(m)}", the two '\leq's should be '\geq's. 5) line 384: For the inner summand on the left side of the first inequality, the summation over all k \in those "above" K^{(m)} should be over all k \in those "below" K^{(m)}. 6) line 407: On the right side of the last inequality, \delta^{(m)} should be \delta^{(M)}, and the last term \mu{\ast} \kappa \lambda^{(m) } should be \kappa \lambda^{(m)}. 7) line 431: "for l \ge m" ---> "for l \ge p" 8) line 440: in eq(17), "l \geq m" ---> "l \geq p" 9) line 450: P(A{n,3}) should be P(A{n,2}).