Review of "Homotopy smoothing for non-convex problems with lower complexity than O(1/e)" The paper explains a new homotopy smoothing algorithm for solving non-smooth optimization problems. The introduction and related work sections explain the problem setting and specific contribution. Whereas the Nestorov method uses a fixed smoothing parameter for all iterations, the proposed HOPS method changes the smoothing parameter to achieve speedups in early iterations, and better approximations of the non-smooth objective at later iterations. The paper provides the first theoretical guarantee of the complexity of the homotopy smoothing method. Sections 3 and 4 explain the homotopy smoothing method. The text in Section 4.2 is especially helpful for understanding the main idea of the homotopy method. Figure 1 is also helpful for understanding the local sharpness theta parameter which appears in the local error bounds. It is nice to see that in Section 4.4 the duality gap is used to monitor the accuracy of the solution. Section 5 gives some experimental results, and Section 6 is a brief conclusion. In general the paper is a nice contribution to the optimization literature, and gives insight into why the homotopy smoothing method works. The main weak point of the paper is the experimental section. Without some measure of error (standard deviation, confidence interval), it is difficult to believe statements about significant differences between the speed of the algorithms. Also, I was expecting to see some experiment/figure that shows how the speed of convergence is affected by the choice of homotopy smoothing parameter (b). One end with b=1 (no updates to the smoothing parameter) it should be relatively slow (same as APG), and then it should speed up as b increases. Right? Minor comments: - In the experiments, what did you use for the b parameter of the HOPS algorithm? Does it matter? - what does "the optimal value is obtained by running PD with a sufficiently large number of iterations such that the duality gap is very small" mean? Why do you need to know the optimal value? You should be able to compute the duality gap without having to know the optimal value.