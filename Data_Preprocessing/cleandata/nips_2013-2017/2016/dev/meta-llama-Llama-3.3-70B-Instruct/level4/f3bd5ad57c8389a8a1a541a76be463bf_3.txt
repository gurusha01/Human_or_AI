Given a single RGB image, the proposed method attempts to estimate its corresponding depth image by leveraging visual cues. The approach involves training a neural network to predict a distribution of high-order derivatives of the depth for each image patch, resulting in parametrized distributions (GMMs) that are subsequently utilized in a global optimization step to construct the depth map. Although the paper is well-organized and easy to follow up to Section 3.1, several technical questions and motivations behind the proposed methodology remain unclear.
Regarding motivation, the authors fail to provide a rationale for the multi-step process, despite presenting experimental results. It is unclear why a specific intermediate GMM representation is necessary, rather than relying on the neural network's ability to learn effective intermediate representations. Additionally, the decision to fix the derivative filters of the first network appears to be an unnecessary constraint, and it is unclear why these filters are not learned. The approach also bears similarities to methods using VLAD/FisherVector features or the NetVLAD neural network architecture, prompting questions about the differences between these approaches. Furthermore, if a distribution representation of intermediate values is used, it would be expected to see some estimate of variance for the depth map, which could provide a strong motivation for the intermediate distribution representation.
Several technical points require clarification, including:
- Line 123: What happens to the other clusters, and are standard techniques such as splitting highly populated clusters used to address negligible clusters? How many of the 64 clusters are effectively utilized?
- The impact of the number of clusters on the results is unclear.
- Line 116: The process appears to be equivalent to linear regression, as all variables except \hat{p} are fixed. This seems to be a normalization step, and it is unclear what would happen if w_i were used directly.
- Line 129: The choice of architecture is not justified.
- The total runtime during the inference phase is unknown, as the first part of the process only seems to handle patches.
- Visual comparisons to other methods are lacking, making it difficult to assess the algorithm's robustness.
- Line 227: It is inconvenient to require readers to refer to other papers to understand the notation used.
- The paper does not discuss any failure cases, prompting questions about whether the authors are aware of any such cases.
I appreciate the authors' response to these questions in the rebuttal, which has led me to revise my initial assessment and increase my voting score.