The authors introduce a novel neural network architecture tailored for prediction tasks on graphs, framing it as a generalization of convolution to non-grid structures. Their approach demonstrates superior performance compared to several kernel methods, particularly for vertex classification tasks, though it falls short for graph classification. While the experimental results are promising, I have several concerns regarding both the presentation and the experimental evaluation.
Presentation:
- The concept of diffusion, which is central to the proposed method, is not formally defined or accompanied by a citation to prior work. This omission is significant, as diffusion appears to be a foundational aspect of the approach. Despite searching for clarification, I could not find a clear definition. Even though I am not an expert in graph or social network analysis, I believe this is a critical gap. At the very least, the authors should provide a formal definition or reference standard practices for featurizing a node's neighbors.
- The authors emphasize that their work generalizes convolutions, but this claim seems to hold only within the graph setting. For edge or vertex prediction tasks, the spatial invariance characteristic of convolution is not evident. Since the primary contribution appears to be improved performance on vertex classification, I believe the emphasis on generalizing convolutions is overstated and potentially misleading.
Experiments:
- The authors claim their architecture supports vertex, edge, and graph prediction in a unified manner. However, there are no experiments demonstrating edge prediction. At a minimum, the paper should include a discussion addressing this omission. Additionally, can the proposed method be applied to structure learning? This is not explored or commented upon.
- For vertex prediction, the authors compare their method against baselines such as kernel methods, logistic regression (LR), and conditional random fields (CRFs). However, the comparison is flawed. Logistic regression is only provided features derived from the vertex itself, not its neighbors, which makes its underperformance unsurprising. A fair comparison would involve training a shallow model on features comparable to the diffusion-based features used in the proposed method. Similarly, for the CRF, the authors do not specify the features it uses. Even if edge features are included, the CRF should be evaluated on an equivalent featurization. Since the authors mention using up to 5 hops of diffusion (implying neighbors within 5 hops are considered), the CRF and LR baselines should also incorporate these features for a meaningful comparison.
- It is surprising that the authors do not compare their method against other neural network-based models for graphs. For instance, why is the approach not compared to methods like node2vec (https://cs.stanford.edu/people/jure/pubs/node2vec-kdd16.pdf)? This omission is notable and raises questions about the comprehensiveness of the experimental evaluation.
Conclusion:
The proposed architecture is elegant, and the paper is generally well-written, aside from the omission of a formal definition of diffusion. However, the experimental evaluation is not entirely convincing, which is a critical factor for assessing an applied paper. At this stage, I find the paper borderline but am open to revising my opinion if the authors address the concerns raised above.
Update:
After reviewing the authors' response and revisiting related literature, I am downgrading my evaluation. I strongly disagree with the authors' assertion that "many of [other] techniques were developed in parallel with our own and did not have readily available open-source implementations." For example, the node2vec paper, which was published concurrently, includes:
- A much more extensive experimental evaluation.
- Comparisons against prior neural network-based methods, such as LINE and DeepWalk.
- Methods from 2014 and 2015, which the authors neither compare against nor cite. This lack of citation is unacceptable.
The quality of this paper is significantly lower than that of LINE, DeepWalk, and node2vec. As such, I strongly recommend rejecting this submission.