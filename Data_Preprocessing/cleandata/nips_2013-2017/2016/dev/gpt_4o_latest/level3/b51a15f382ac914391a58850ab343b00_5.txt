The paper presents two novel algorithms, PEGE and PEGE2, for the combinatorial partial monitoring (CPM) setting, which combines finite partial monitoring and combinatorial multi-armed bandits. The authors target a stochastic adversary and provide both distribution-independent and dependent regret bounds. The first algorithm, PEGE, uses a phased exploration with greedy exploitation framework, achieving regret bounds of \(O(T^{2/3} \sqrt{\log T})\) (distribution-independent) and \(O(\log^2 T)\) (distribution-dependent) without requiring a unique optimal action or the computationally expensive "arg-secondmax" oracle. The second algorithm, PEGE2, incorporates gap estimation to achieve state-of-the-art \(O(\log T)\) regret bounds, matching the Global Confidence Bound (GCB) algorithm but with the advantage of independence from the size of the learner's action space.
Strengths:
1. Novelty and Contribution: The paper builds upon the CPM model introduced in prior work and addresses its limitations. Notably, PEGE eliminates the impractical assumption of a unique optimal action while maintaining competitive regret bounds. PEGE2 further improves on GCB by removing dependence on the size of the learner's action space.
2. Theoretical Rigor: The regret bounds are well-supported by detailed theoretical analysis, with explicit constants and conditions. The authors also provide a thorough comparison with the GCB algorithm, highlighting practical and theoretical advantages.
3. Practical Relevance: The application to online ranking with feedback demonstrates the real-world utility of the proposed algorithms. The discussion of scenarios with infinite learner action spaces is particularly insightful, as it showcases the flexibility of the proposed methods compared to GCB.
4. Algorithm Simplicity: The phased exploration framework in PEGE is conceptually straightforward and avoids reliance on computationally expensive oracles, making it more practical for large-scale problems.
Weaknesses:
1. Clarity of Intuition: While the theoretical results are strong, the intuition behind achieving \(O(\log T)\) regret for PEGE2 when \(T_0\) is set to \(O(T^{2/3})\) is not explicitly discussed. This could leave readers unclear about the underlying mechanisms driving the performance.
2. Dependence on Time Horizon: PEGE2 requires prior knowledge of the time horizon \(T\), which limits its applicability in settings where \(T\) is unknown. This contrasts with the GCB algorithm, which is an anytime algorithm.
3. Gap Estimation Challenges: The gap estimation in PEGE2 assumes the existence of a unique optimal action for \(O(\log T)\) regret. While this is a limitation shared with GCB, the authors could explore ways to mitigate this assumption further.
Arguments for Acceptance:
- The paper introduces significant advancements in the CPM setting, addressing key limitations of prior work.
- The algorithms are theoretically sound, with strong regret guarantees and practical advantages.
- The application to online ranking and the discussion of infinite action spaces demonstrate the broad applicability of the proposed methods.
Arguments Against Acceptance:
- The intuition behind certain theoretical results, such as the \(O(\log T)\) regret for PEGE2, could be clearer.
- The dependence of PEGE2 on the time horizon \(T\) is a practical limitation that could reduce its usability.
Suggestions for Improvement:
1. Provide a detailed explanation of the intuition behind the \(O(\log T)\) regret bound for PEGE2, especially in relation to the choice of \(T_0\).
2. Explore modifications to PEGE2 to make it an anytime algorithm, potentially combining its strengths with those of GCB.
3. Discuss the implications of the gap estimation assumption in more depth and propose potential workarounds.
Conclusion:
This paper makes a strong contribution to the CPM literature, addressing critical limitations of prior work and advancing the state of the art in both theory and practice. While there are areas for improvement, particularly in clarity and practical applicability, the strengths of the paper outweigh its weaknesses. I recommend acceptance.