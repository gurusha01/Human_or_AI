Use of matrix product states in classification of images. A very interesting and strong point of the paper is that it nicely bridges different fields. It proposes the use of tensor networks with matrix product states (also called tensor trains depending on the particular research area) for classification of images. On the other hand the presentation can be improved and clarified at some points: - section 5 "To approximate the weight tensor as an MPS": it is not clear in what sense a certain tensor is approximated or how. Do you mean that if we take all singular values in (11) then it corresponds to the tensor to be approximated? - in section 7 the authors mention some open problems about regularization. However, I think the answer is already (implicitly) present in eq (11) and (14): the eq (14) is closely related to the work of paper Signoretto M., Tran Dinh Q., De Lathauwer L., Suykens J.A.K., Learning with Tensors: a Framework Based on Convex Optimization and Spectral Regularization, Machine Learning, vol. 94, no. 3, Mar. 2014, pp. 303-351 where regularization is applied to learning of a tensor model, related to multilinear SVD, nuclear norm regularization, and singular value thresholding operations. Because in eq (11) only the m largest singular values are kept this is also influencing the rank of the tensor. In other words, the authors do not add a regularization to eq (6), but instead control the rank by the SVD truncation operations in (11). - in [15] Cichocki it is also explained how to solve a linear system by using MPS. In fact the eqs (6)(7) are also linear in the unknown tensor. Therefore it is unclear why the method proposed in [15] cannot be directly applied here. What is different from [15] or what is additionally complicating the problem in this paper? - please explain in more detail how \tilde{\Phi}_n is obtained from the given data. - eq (7)-(8): please explain what you mean by "leading-order update". - I would suggest to also add an algorithm to the paper in order to make step by step clear what needs to done to finally obtain the solution B, starting from the given training data. - eq (3): aren't these Fourier features? (note: random Fourier features are currently also used in large scale problems, not limited to images)