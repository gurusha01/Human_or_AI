The authors introduce a "safe" adaptive importance sampling approach tailored for coordinate descent and stochastic gradient methods. Leveraging lower and upper bounds on gradient values, they propose an efficient approximation for gradient-based sampling. The method is rigorously shown to be optimal within the bounds, outperforming uniform or fixed importance sampling, and can be implemented with negligible computational overhead. While adaptive importance sampling strategies have been explored previously, the authors present a novel framework that formulates the selection of the optimal sampling distribution as a convex optimization problem, accompanied by an efficient algorithm to solve it.
This paper is well-written and represents a valuable contribution to the field of importance sampling techniques.
Comments:  
- Proof of Lemma 2.1: It appears to be missing a factor of 2 in the expression for Î±*.  
- Example 3.1: In equation (7), the goal is to maximize. In Example 3.1, it seems that setting c to either the upper or lower bound might outperform uniform sampling. Is this the intended takeaway? This is unclear, especially given the preceding statement that the naive approach of setting c to the bounds can be suboptimal.  
- Line 4 of Algorithm 4: Since m = max(l^{sort}), will this condition ever be satisfied?  
- Line 7 of Algorithm 4: Should this be u^{sort} instead of c^{sort}?  
- Numerical results: The experimental section could be improved by including comparisons with other adaptive sampling strategies (e.g., [2], [5], [21]) and fixed importance sampling using a non-uniform distribution.  
- Timing results: Why are there no timing results provided for SGD?  
- Reference [14]: The title of the referenced paper is incorrect.  
- Missing reference: Please include Csiba and Richtarik's "Importance Sampling for Minibatches" (2016, arXiv).  
============
POST REBUTTAL  
============  
I have reviewed the authors' rebuttal and appreciate their efforts in addressing my questions and comments. I believe this paper is a clear accept.