This paper introduces a novel approach to estimating a point process using the Wasserstein-GAN (WGAN) framework. Specifically, the authors aim to model a point process on the real line based on observed data generated by such a process. Instead of employing the traditional maximum likelihood estimation, the paper proposes leveraging WGAN for this purpose.
To achieve this, the authors address the following key requirements:
- Define a suitable distance metric between two realizations of a point process.
- Specify a family of Lipschitz functions with respect to the chosen distance.
- Design a generative model that maps "noise" into realizations of a point process.
The main contribution of the paper lies in presenting a specific methodology to tackle these three challenges, thereby illustrating how WGAN can be adapted to this context. The proposed approach is evaluated on a range of point processes, including both synthetic and real-world examples, and is shown to perform favorably in comparison to maximum likelihood methods, particularly in scenarios where the underlying intensity model is unknown.
While I do not have extensive expertise in the estimation of point processes and their associated applications, I find the adaptation of WGAN—a method gaining significant traction across diverse fields—to this domain to be non-trivial. The originality of the work stems from devising a reasonable framework for this adaptation, as well as providing valuable insights into the practical implementation of the Lipschitz constraint, which I find noteworthy.
One aspect that could benefit from further clarification is the modeling of the generator function. Based on the definition in equation (7), there appears to be no explicit guarantee that the generated sequence \( t_i \) will be monotonically increasing. For instance, are the weights constrained to be positive to enforce this property? Alternatively, does the algorithm inherently handle non-increasing sequences by relying on the discriminator to penalize such outputs, thereby encouraging the generator to produce increasing sequences? Further elaboration on this point would enhance the clarity of the proposed approach.