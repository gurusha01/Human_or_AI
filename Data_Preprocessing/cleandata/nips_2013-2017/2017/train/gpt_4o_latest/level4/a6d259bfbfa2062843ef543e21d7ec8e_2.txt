This paper addresses the challenge of Monte Carlo Tree Search (MCTS) in depth-k game trees. While the problem was previously explored for depth-two trees in 'Optimal best arm identification with fixed confidence' (COLT 2016), this work significantly extends that prior research, which could not be directly generalized to trees of greater depth.
The authors introduce a novel class of algorithms that can be paired with various Best Arm Identification (BAI) algorithms, providing detailed analysis for LUCB and UGapE. The core idea is built on two key components: First, the BAI algorithm guides the learner's initial decision departing from the root of the tree. Subsequently, a 'representative leaf' is sampled by following a quasi-greedy path through the tree, where at each step, the action that maximizes (or minimizes) the expected value is selected.
This research brings fresh insights to MCTS problems by leveraging tools developed within the BAI framework. The proposed method exhibits several strengths:
1. It is intuitive and accessible for readers familiar with the BAI literature;
2. It is computationally efficient, enabling robust experimental validation;
3. It surpasses the performance of the existing FindTopWinner algorithm (see comment below).
Additionally, the authors derive a problem-dependent lower bound using established techniques from works such as (Garivier and Kaufmann, 2016) and (Kaufmann et al., 2015). While the final result in Lemma 7 is not fully explicit, the associated optimization problem can be solved numerically. This provides a valuable benchmark for the experimental section, alongside comparisons with existing algorithms. Furthermore, as noted in the discussion of Lemma 7, this lower bound result offers promise for developing an asymptotically optimal algorithm using the Track-And-Stop technique from (Garivier and Kaufmann, 2016). This is an exciting avenue for future exploration, accompanied by several new research questions introduced by this paper.
I have only minor comments:
- Lemmas 13 and 14 appear to be critical for controlling the algorithm's behavior regarding the selection of the 'representative leaf.' However, this intuition is not clearly conveyed in the proof of Theorem 3, which is only briefly outlined in the main paper. While space constraints are understandable, elaborating on this could enhance the clarity of the proof.
- The 'update information about the arms' step in Figure 2 is somewhat unclear. Specifically, the algorithm's exact operation is difficult to followâ€”whether it determines only the first action or the entire sequence of actions, and where the feedback is incorporated, is not immediately obvious. Clarifying this in the pseudo-code would be helpful.
- Line 255: 'uniformLY at random';
- In Lemma 11 (Appendix), please standardize the indexing notation (either i or k) for s.
In conclusion, I strongly recommend accepting this paper. It opens a promising new direction for understanding MCTS problems and has the potential to drive significant future advancements in the field.