Review
The paper introduces a novel approximation algorithm for k-mer string kernels with mismatches, addressing a significant computational bottleneck in sequence classification tasks. The key contribution is a closed-form expression for the intersection size of mismatching neighborhoods, which resolves a longstanding combinatorial problem. The authors also propose a statistical estimation technique for efficiently computing kernel values, enabling the use of larger k and m values for improved classification performance. The algorithm is evaluated on biological and music sequence datasets, demonstrating substantial runtime improvements and competitive predictive accuracy compared to exact methods.
Strengths:
1. Algorithm Contribution: The closed-form expression for the intersection size in mismatching neighborhoods is a major theoretical advancement. This, combined with the statistical estimation approach, allows the algorithm to scale to parameter settings previously infeasible for exact methods.
2. Evaluation Context: The paper provides both theoretical guarantees and empirical validation. The runtime improvements (up to an order of magnitude) and the ability to handle larger k and m values are well-demonstrated. The empirical results on real-world datasets are compelling, showing that the algorithm achieves competitive classification accuracy.
3. Significance: The work addresses a critical limitation in string kernel computation, advancing the state of the art in sequence classification. The algorithm has potential applications in bioinformatics, text mining, and other domains involving sequential data.
Weaknesses:
1. Clarity and Presentation: Section 3 is overly technical and dense, with excessive notation that hampers readability. The lack of high-level intuition makes it difficult for readers to grasp the core ideas. Restructuring this section and providing a more intuitive explanation would greatly improve accessibility.
2. Theorem 3.3: While central to the paper, Theorem 3.3 is not adequately explained. An intuitive description and a table summarizing key quantities (e.g., parameters and their roles) would make this result more comprehensible.
3. Algorithm 1: The algorithm is poorly integrated into the narrative. It should be placed centrally in Section 3 with clear parameter explanations and detailed annotations for subroutines like SORT-ENUMERATE.
4. Kernel Theory Relevance: The theoretical analysis does not sufficiently connect kernel approximation error to downstream generalization error. Referencing related work on kernel methods would strengthen the theoretical grounding.
5. Runtime Experiments: While runtime improvements are shown, experiments with varying m values and synthetic examples illustrating failure cases are missing. These would provide a more nuanced understanding of the algorithm's behavior.
6. Performance Claims: The claim about solving previously unsolvable (k, m) settings lacks sufficient evidence. Either stronger empirical support or a more cautious phrasing is needed.
Minor Issues:
- Figure 1 lacks axis units, which reduces interpretability.
- Typos on lines 95 ("theset") and 204 ("Generating these kernels days") should be corrected.
Arguments for Acceptance:
- The paper makes a significant theoretical and practical contribution to string kernel computation.
- The algorithm's scalability and empirical performance are well-demonstrated on real-world datasets.
- The closed-form expression for intersection size is a novel and impactful result.
Arguments for Rejection:
- The presentation is overly technical and lacks clarity in key sections.
- The connection between kernel approximation error and generalization error is underexplored.
- Some experimental evaluations (e.g., varying m values, failure cases) are incomplete.
Recommendation: Weak Accept. The paper makes a strong contribution to the field, but revisions are needed to improve clarity, provide better explanations, and address the experimental gaps.