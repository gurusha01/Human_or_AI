This study employs best arm identification (BAI) techniques to address the Monte Carlo tree search problem in a two-player, turn-based setting. The objective is to determine the optimal action for player A by meticulously considering subsequent actions that both player B and player A can take in subsequent rounds. With access to a stochastic oracle for evaluating leaf values, the goal is to approximate (with precision ε) the best action at the root with high confidence (at least 1-δ). The proposed algorithms utilize confidence intervals and upward propagation (from leaf to root) of upper (for MAX nodes, representing player A's actions) and lower (for MIN nodes, representing player B's actions) confidence bounds. These algorithms are intuitive, well-described, and grounded in the fixed-confidence BAI literature, incorporating recent refinements while clearly distinguishing new contributions (Section 3.1), making the paper exceptionally clear. A theorem regarding the number of leaf evaluations is provided, exhibiting complexity H(3) and improving upon previous work. The comparison with existing algorithms and strategies is precise. Furthermore, experiments demonstrate significant improvements over existing methods, offering insights into lower bounds and future directions, all grounded in recent results from the BAI fixed-confidence setting.
The paper is exceptionally well-written, making the contributions easy to understand and contextualize. 
To further enhance clarity, consider the following suggestions: Refer to Figure 1 in the text to immediately clarify the process (easier to understand than line 111). A discussion explaining the necessity of two candidates, at and bt, at time t+1, could be beneficial, as this might be surprising initially. In the experiments, clarify why δ = 0.1 |ℒ| is chosen; the value of δ = 2.7 in Figure 4 seems unusual, although it does not appear to cause experimental issues. Typically, are these algorithms run with such a low confidence parameter in practice? Consider running experiments with δ = 0.01*27 or δ = 0.1 (without ℒ) to avoid confusion. Lemma 7 is challenging to parse in its current form, but the accompanying example helps; adding a line to Figure 3 with the optimal proportions (using the same δ) could enhance understanding. Minor suggestions include removing the numerical value of kl(δ, 1-δ) and considering the readability of Figure 4, possibly by adding columns for algorithm names and total samples used, then displaying proportions instead of raw numbers.
Overall, this work represents a clear and significant contribution to the existing literature, offering a well-structured and technically sound approach to the problem at hand.