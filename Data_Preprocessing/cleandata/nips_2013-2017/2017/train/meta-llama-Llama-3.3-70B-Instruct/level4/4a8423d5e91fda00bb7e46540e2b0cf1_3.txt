The paper tackles the issue of creating a classifier with a reject option, aiming to achieve a desired classification risk while minimizing the probability of the "reject option". The authors focus on a scenario where the classifier and its associated confidence function are known, and the goal is to determine a threshold for the confidence that decides whether the classifier's prediction is accepted or rejected. They propose an algorithm to find this threshold and provide statistical guarantees for the method.
Comments:
- The authors should provide a precise definition of the problem their algorithm aims to solve. The current definition on lines 86-88 describes the ultimate goal, whereas the proposed algorithm solves a simpler problem: given a classifier and a confidence function, find a threshold that maximizes coverage while satisfying a certain condition.
- It appears that for specific input values, Algorithm 1 will always return a trivial solution, where all examples are rejected. This occurs when the condition on line 10 is never met. For instance, when the training error is zero, the bound $B^$ can be determined analytically as $B^ = 1 - (\delta / \log_2(m))^{1/m}$. If the desired risk is set below this bound, the algorithm will always return a trivial solution. For example, with a confidence of $\delta = 0.001$ and $m = 500$ training examples, the minimal bound is $B^* = 0.0180$. Setting the desired risk below this value will always result in a trivial solution, regardless of the data used. The authors should clarify this issue.
- The experiments should include a comparison to a simple baseline, such as finding the threshold using the empirical risk instead of the sophisticated bound $B^*$. This is a natural approach to try first, and its omission makes it difficult to assess the practical benefits of the proposed method.
- A discussion on the challenges of solving the numerical problem in equation (4) is missing. For instance, which numerical method is suitable, and are there numerical issues when evaluating the combinatorial coefficient for large $m$ and $j$?
Typos:
- Line 80: $(f, g)$
- Line 116: $B^*(\hat{r}, \delta, S_m)$
- Line 221: "ImageNet"