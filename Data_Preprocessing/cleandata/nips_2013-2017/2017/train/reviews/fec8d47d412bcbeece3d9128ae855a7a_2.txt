Multiple hypothesis testing is an important step of many high-throughput analyses. When a set of features is available for each of the tested hypothesis, one can use these features to weight the hypothesis and increase statistical power, a strategy that is known as independent hypothesis weighting. Specifically, this can be achieved by learning the discovery threshold on P-values as a function of the hypothesis features.
In this paper, the authors propose a new method (neuralFDR), where a neural network is considered to model this relationship. Considering simulations and two real data applications, the authors show that (i) neuralFDR can increase power while controlling the false discovery rate and (ii) it can be more powerful than existing weighting methods (especially when multiple hypothesis features are considered). The results are convincing, the paper is well written and the method has the potential to be used in high-throughput hypothesis testing problems. I have only two points that I would like to raise:
1) the authors do not discuss how computationally demanding their method is and how it compares to others. These considerations will certainly impact the choice of a potential user on which correction method to use;
2) In the application to the GTeX dataset, the authors showed that increasing the number of considered features, the number of discoveries of neuralFDR increases while the number of discoveries of IHW (the competitor method) decreases. In the most favourable scenario (3 features), they report 37,195 vs 35,598 discoveries, which corresponds to a 4.5% increase. Given this small percent increase, is there any reason why the authors did not include other features to further increase discoveries? In eQTL mapping there are plenty of variant features or gene features to choose from.
Minor comments:
Line 215. "800 more discoveries" the percent increase should also be reported
Table 2: I think that absolute and percent increases should be reported to improve readibility