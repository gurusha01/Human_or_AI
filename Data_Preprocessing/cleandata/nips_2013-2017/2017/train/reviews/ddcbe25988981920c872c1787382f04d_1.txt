This paper studies fast approximation of "mismatch string kernel" proposed by Leslie et al. [17], in that kernel distance between two strings are defined as the number of matches between k-mers while allowing up to m-mismaches. Since the original algorithm has a high computational complexity, the authors propose an approximation algorithm.
It consists of two parts; (1) determine the size of m-mismatch neighbourhoods of two k-mers, and (2) determine the number of k-mer paris within Hamming distance d.
For the former problem (1), the authors propose to precompute all m-mismatch neighbours with an O(m^3) algorithm, and for the latter problem (2), locality sensitive hashing is applied. The proposed algorithm is equipped with a probabilistic guarantees on the quality of the solution, and an analytical bounds on its running time.
In computational experiments using both simulated and synthetic data, the proposed algorithm is shown to approximate the exact computation well, and run much faster especially when m is large. 
The paper is written clearly. The proposed algorithm is presented step by step with essential proofs.
MINOR COMMENTS
As is also mentioned by the authors, but proposed bound (Theorem 3.13) is loose. Isn't it non-trivial to improve it ?
Some sentences in the section 4 are incomplete.