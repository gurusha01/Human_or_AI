The paper describes an adversarial autoencoder model (i.e., an autoencoder where the latents are encouraged to match a prior distribution through a GAN-like training scheme), where the decoder is autoregressive. This model can use both its latent representation and the autoregressive connections to model the data, and which part of the model learns what can be manipulated by slightly modifying its architecture and the prior distribution used for the latents.
The experiment showcased in Figure 2 is great, it nicely demonstrates the benefits of combining both autoregressive and latent variable based modelling. It's also cool to see that the model learns to encode the digit label despite the continuity of the prior (Figure 3).
One thing I'm not sure about is how much the different decompositions (global - local structure vs digit identity - details) are due to the different choice of priors. This is not the only thing that changes between the two types of models. The model with a categorical prior also has a different biasing mechanism, and is much deeper (end of Section 2.1). So I think the paper is a bit quick to attribute the learning of a different decomposition entirely to the change of prior. It would be interesting to take the model with the categorical prior (and all other modifications), and change only the prior back to Gaussian. My guess is it would still learn largely the same decomposition (as in Figure 3(a)), because by my intuition, the architectural changes are much more influential in this than the choice of prior. It would be great to see this addressed in the paper.
The experiment in Figure 5 is also very nice as it clearly demonstrates the "discretizing" effect of the GAN loss on the latent code, and the semi-supervised classification experiment is also a great addition.
Overall, the model is a natural extension of both adversarial autoencoders and autoregressive models, and the paper presents a nice follow-up to VLAE and PixelVAE (which study VAEs with autoregressive decoders). The experimental section is well thought-out and the results are convincing, although as stated before I'm not convinced that the choice of prior deserves as much credit as it gets for the different decompositions that are learned.
Remarks:
- Line 45: "the global latent code no longer has to model all the irrelevant and fine details", whether this is useful is very task-dependent, imagine a texture classification task for example. So this statement is a bit overgeneralised.
- L187-188: the adversarial net gets continuous inputs (probabilities) from the softmax layer. What about the decoder? I'm guessing this gets discrete input, but this should probably be mentioned explicitly for clarity's sake.
- Although scaling up is clearly not the focus of the paper, an experiment on a larger dataset would also be nice. My intuition is that this model will scale beyond regular PixelCNNs because it can effectively use the latents to code for global structure.