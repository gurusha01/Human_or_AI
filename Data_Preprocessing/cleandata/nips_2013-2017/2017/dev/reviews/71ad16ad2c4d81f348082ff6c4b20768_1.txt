%%% UPDATE: Thank you for your response, which has been read %%%
This paper addresses an interesting topic - how to encode symmetries or invariances into kernels. The principal application area is in Bayesian nonparametric regression, where constraints may be presented as prior information but the form of the regression function is not fully specified. An important example of such a constraint is when the field being modelled is known to be of the divergence kind, so that a certain physical quantity is conserved. Related work in this area has included both ANOVA kernels and Stein's method-based kernel, which are each constrained to have vanishing integrals. The present work differs, in that it attempts to consider more general forms of constraint. This effort is commendable, as generic kernels continue to be widely used in machine learning applications without strong physical justification.
I think the proposed method is not general and there is no theory to suggest that it will work in anything other than some special cases, but nevertheless it is interesting and could reasonably be in the proceedings for NIPS.
- The authors ought to discuss their work in relation to "Learning with Algebraic Invariances, and the Invariant Kernel Trick" by Franz J. Király, Andreas Ziehe, Klaus-Robert Müller.
- On page 4 it is incorrectly claimed that the prior for f will "inherit" the properties of the prior for g. This is of course not true - if g has a prior GP(0,k) where k generates a Sobolev space of order b and if \mathcal{F} is a differential operator of order c, then the prior on g will be something like a Sobolev space of order b - c. So the smoothness properties of f and g differ.
- On page 5, it reads as though the equation "fi = \Phii \xi f" is without loss of generality, but it is of course an ansatz. This could be better emphasised by clearly labelling this (and the equation "g = \Gamma \xi^g") as an ansatz.
- The limited generality of the method could be better acknowledged. Perhaps an example where the method fails could be included.