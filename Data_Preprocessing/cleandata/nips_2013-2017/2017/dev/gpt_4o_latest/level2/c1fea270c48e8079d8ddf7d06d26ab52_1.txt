This paper investigates the connections between discrete and continuous approaches for decomposable submodular function minimization (DSFM), providing both theoretical and experimental contributions. The authors improve the worst-case complexity bounds for state-of-the-art continuous optimization methods and present a systematic experimental comparison of discrete and continuous approaches, focusing on the distinction between level-0 and level-1 algorithms.
Strengths:
1. Theoretical Contributions: The paper offers a significant improvement in the complexity bounds of continuous optimization methods for DSFM, reducing the dependence on the number of functions in the decomposition. The use of combinatorial arguments to simplify and strengthen prior results is a notable contribution.
2. Experimental Design: The authors take a rigorous approach to comparing discrete and continuous methods by isolating the effects of level-0 and level-1 algorithms. This clean separation ensures that the comparisons are fair and insightful.
3. Practical Relevance: The experimental results provide actionable insights into when discrete or continuous methods are preferable, depending on the size of the problem and the efficiency of level-0 subroutines. This is particularly useful for practitioners working with large-scale DSFM problems.
4. Clarity in Tradeoffs: The paper highlights the tradeoff between the number of level-0 oracle calls and computational overhead in level-1 algorithms, offering a nuanced understanding of algorithmic performance in different settings.
Weaknesses:
1. Limited Novelty in Experimental Setup: While the experimental framework is systematic, the use of standard potentials and datasets limits the novelty of the experimental contribution. The results might not generalize to more complex or real-world applications.
2. Dependence on Level-0 Algorithms: The reliance on the Fujishige-Wolfe algorithm for generic level-0 subroutines is a bottleneck for discrete methods. While the authors address this with warm-started approximations for continuous methods, the paper does not propose new level-0 techniques, which could have strengthened the contribution.
3. Clarity of Presentation: The paper is dense and assumes significant prior knowledge of submodular optimization and convex programming. While the technical depth is commendable, the presentation could be made more accessible to a broader audience.
Evaluation:
- Quality: The paper is technically sound, with well-supported claims through theoretical analysis and experiments. However, the reliance on existing level-0 algorithms limits its completeness.
- Clarity: The paper is well-organized but could benefit from clearer explanations of key concepts for non-expert readers.
- Originality: The theoretical improvements and systematic experimental comparison are novel, though the experimental setup relies on standard benchmarks.
- Significance: The work advances the understanding of DSFM and provides practical insights, making it a valuable contribution to the field.
Recommendation:
This paper makes a strong theoretical and practical contribution to the field of submodular optimization. While there are some limitations in novelty and accessibility, these do not detract significantly from the overall quality. I recommend acceptance, with minor revisions to improve clarity and broaden the scope of experimental benchmarks.
Pro Arguments:
- Significant theoretical improvement in complexity bounds.
- Rigorous and systematic experimental comparison.
- Practical insights into algorithm selection for DSFM.
Con Arguments:
- Limited novelty in experimental setup.
- Heavy reliance on existing level-0 algorithms without proposing new ones.
- Dense presentation that could be more accessible.