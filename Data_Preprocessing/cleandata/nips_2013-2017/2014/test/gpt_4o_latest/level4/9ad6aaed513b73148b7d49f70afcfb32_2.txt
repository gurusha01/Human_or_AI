The study demonstrates how the energy of a continuous Markov Random Field (MRF) with polynomial pairwise energies can be expressed as a sum of a convex and a concave polynomial. This decomposition enables the application of the concave-convex procedure (CCCP) to perform efficient MAP inference.
Quality: The paper provides valid proofs for the proposed methodology, and the approach appears reproducible. A diverse set of experiments highlights the strong performance of the method. Compared to other optimization techniques, the polynomial decomposition often achieves superior solutions. However, the paper could better address its limitations, such as the trade-off between wall-clock time for solving the optimization problem and the occasionally marginal improvement in solution quality.
Clarity: The paper is well-written, with a clear and logical presentation. The explanation of the polynomial splitting into convex and concave components is particularly well-paced and easy to follow.
Originality: The use of polynomial decomposition to facilitate inference in MRFs appears to be novel.
Significance: MRFs with polynomial energies are relevant in fields like Computer Vision, making this work significant for the community.
Strengths:
+ The problem is important and relevant, particularly in applications like Computer Vision.
+ The presentation is clear, with rigorous proofs.
+ The experiments are diverse and well-conducted.
Weaknesses:
- The paper could better articulate its limitations. While the method often yields better solutions for the optimization problem, it appears to require more wall-clock time compared to direct optimization techniques like L-BFGS.
Questions to the authors:
- Do the reported running times account for the time required to decompose the polynomial into convex and concave components?
In summary, the paper addresses an important problem and proposes an interesting solution. The proofs and exposition are clear. However, the authors should more explicitly discuss the weaknesses of their approach, particularly the slower performance on real-world problems compared to competitors, despite achieving better solutions.