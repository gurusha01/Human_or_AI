The authors investigate the following problem: A region contains N noisy sensors with local communication capabilities that are uniformly distributed. An underlying function divides the region into positive and negative sub-regions. The goal of the external source is to accurately classify the region with minimal queries to the sensors.
The core idea is that local communication among sensors can be leveraged to de-noise the system before initiating costly communication with the external source. The authors analyze variations of a best-response dynamic, where sensors update their readings to match the majority reading of their neighbors, either asynchronously or synchronously. They integrate this de-noising process with an active learning algorithm from the literature and demonstrate through simulations that this approach outperforms SVMs with de-noising as well as either algorithm applied prior to de-noising.
This work is both interesting and relevant to NIPS, and it is presented in a clear and well-organized manner. The technical contributions, including both analytical results and simulations, are of high quality.
Some minor concerns I had:
— In Figure 3, the y-axes should be scaled consistently to facilitate easier comparison between random noise and pockets of noise.
— The simulation results suggest that most of the performance improvement stems from the de-noising process. Once the data is de-noised, SVM and active learning perform similarly (though error bars are absent, the difference does not appear significant). While the authors refer to active learning as "our method," the primary contribution seems to lie in the de-noising process. This distinction could be clarified in the paper.
— The de-noising algorithm performs significantly better on random noise than on pockets of noise in the simulations. However, the pockets of noise model (or noise that is not independent across sensors) appears more realistic. This limitation somewhat reduces the impact of the de-noising algorithm.
— In Figure 2 (right), for synchronous updates with random noise, there appears to be a slight increase in final noise as the number of rounds increases. This raises the question: How do the results look for 100K rounds with additional simulations, and what does the maximum final noise look like after each number of rounds? Since the analytical results are based on a single step with independent noise, running multiple steps may violate the independence assumption, potentially allowing early-step errors to propagate and result in higher final noise.
— While not a direct issue with the paper, the motivation for the de-noising algorithm is that local communication is inexpensive compared to communication with the external source. However, a practical alternative could involve sensors communicating locally to aggregate information (without the best-response dynamic) and then sending a single message to the external source summarizing all sensor readings. If this alternative is infeasible (e.g., due to requiring more data to be transmitted to the external source, even if by a single sensor), it might be helpful to further specify the problem constraints to rule out this possibility.
Overall, this is a well-presented paper with compelling analytical and simulation-based results.