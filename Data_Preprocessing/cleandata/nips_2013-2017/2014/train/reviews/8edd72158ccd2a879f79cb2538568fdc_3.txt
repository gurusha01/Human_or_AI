In this paper, the author propose a novel two-stage noisy voting model and theoretically demonstrated that a uniform team must make some mistakes, whereas a diverse team converges to perfection as the number of agents grows. The result of the experiment, which was conducted in the Computer Go domain, is consistent with the theoretical analysis.
This paper is well-written, and the results are solid and interesting. This work has both theoretical and methodological contributions:
1.Prove diverse vote can beat uniform vote under their proposed restrictions on noise models, i.e., PD-alpha, PM-alpha, PPM-alpha. Furthermore, they show these assumptions in the theorem is mild by demonstrating that the three classical noise model satisfy all assumptions. As a result, the theorem can be widely used.
2.In the experiment, authors automatically generating arbitrarily many diverse agents and extracting rankings of moves from algorithms, are practical. 
Following are concerns about this paper:
1. The novelty of this paper: Please make a clear statement on the technical contribution of this paper comparing to Marcolino et. al. 2013.
2. The experiment: although authors explains that there may be gap between figure (a) and the main theorem, the obvious winning rate drop for diverse+Copeland is somehow indicating the performance of diverse voting is not robust under some voting rule. A more comprehensive experiment results will offer more insights to this problem. Authors said that it is time-consuming to present diverse + all voting rules. Please give more explanations to the computation cost, and it would be better if the authors try to conquer it by some tricks.
3. For Go, the state are dependent but not i.i.d.. The setting of the main results of this paper is not suitable for Go. 
Minor comments: 1. Please indicate the domain of phi in Mallows model. 2. Add one bullet for Plackett-Luce model. 3. "k" is used to indicate positions. Please use another notation for copy number in uniform vote.
 This paper is well-written, and results is interesting. Authors need to state their technical contribution with a very related reference.