This paper introduces novel distributed algorithms for k-means and k-median clustering. The central idea is to construct a global coreset in a distributed manner by leveraging cost information from local approximations. The paper is well-written and contains substantial content. It presents a distributed protocol for k-means/median clustering based on coreset construction, offers theoretical guarantees on the approximation quality and communication cost upper bounds, and includes experimental results demonstrating that the proposed approach outperforms existing methods.
However, the paper has several limitations. First, the main technical contribution is not entirely clear, particularly when compared to prior works such as [5], [10], and [19]. The use of coresets for approximating clustering algorithms is well-established (e.g., in [5], [10]), and a distributed clustering algorithm based on coresets has already been proposed in [19]. While this paper contributes a distributed method for constructing coresets that is independent of the network topology and improves upon the algorithm in [19] by reducing the communication cost by a factor of √n, the distributed coreset construction in Algorithm 1 and the associated bounds appear to be a straightforward application of the results in [5].
The theoretical analysis of the algorithm, including the upper bounds on coreset size and communication cost, is a valuable addition. However, the upper bounds seem too loose to be practical. For instance, given a dataset and its distribution over a network, how would one determine the appropriate coreset size? The bound for k-means is on the order of O(kd/(ε⁴)), which can be excessively large even for moderate values of k, d, and small ε. For example, with k = 10, d = 100, and ε = 0.1, the predicted coreset size is 10 million, which could exceed the size of the original dataset.
Regarding the experiments, the number of distributed sites is relatively small (e.g., 10 for Pendigits and 25 for ColorHistogram). Have you conducted experiments with a larger number of distributed sites? Additionally, the datasets used are relatively low-dimensional. Would this approach scale effectively for high-dimensional sparse data? While the paper is well-written and contains solid contributions, it also has notable limitations, including unclear technical novelty and overly loose upper bounds.