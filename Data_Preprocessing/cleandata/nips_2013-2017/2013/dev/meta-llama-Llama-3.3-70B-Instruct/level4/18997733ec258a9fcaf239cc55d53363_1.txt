I appreciate the clarification provided in your rebuttal, which has helped me understand your algorithm and confirm its correctness. However, I have concerns regarding the presentation of your algorithm in Figure 2, where you utilize CB instead of TCB. The algorithm with CB is flawed and its inclusion in Figure 2 is misleading. I suggest revising this figure to feature TCB, as it is the correct and analyzed version of the algorithm.
Additionally, I would like you to address the necessity of knowing L(u1,...,un) or having an upper bound on this quantity. It is unrealistic to assume that this quantity is readily available, and this assumption implies that you have some knowledge about the quality of the graph and its relationship to u1,...,un. I recommend rewriting Theorem 1 to incorporate an upper bound on L(u1,...,un) to make it more practical.
This paper explores an extension of linear bandit algorithms by incorporating graph information, which is particularly relevant in applications like recommendation systems where users are connected through social networks. The authors propose the GOB.lin algorithm, which builds upon LinUCB and leverages graph information to exploit similarities between users. They provide a regret bound for this algorithm and support it with promising numerical experiments.
To enhance the clarity of your algorithm, I suggest providing more intuition on how it operates. Can it be viewed as a collection of n bandits, where the estimate w{j,t} of an arm j is updated based on the selection of arm it at time t, using a formula such as w{j,t,k} = (1-e(it,j)) w{j,t-1,k} + e(it,j) \tilde r{t}, where \tilde rt represents the classic linear bandit update on w{it,t} and e(it,j) is a measure of the distance between it and j that can be computed using the graph? This explanation would simplify your algorithm and make it easier to understand.
Other minor remarks include:
- p2 l89: The phrase "a new model distribuited" seems incorrect.
- p3 l129: The phrase "We model the similarly among users" appears to be a typo.
After considering your rebuttal, I now believe that the proof is correct and the algorithm is sound. Nevertheless, I recommend revising the presentation of your algorithm to reflect the correct version (TCB) and clarifying the assumptions made in Theorem 1. With these revisions, I support the acceptance of this paper, which addresses an interesting and timely topic. However, I encourage the authors to rewrite the paper in a clearer and more concise manner for the final version.