Thanks to your rebuttal, I think I now understand your algorithm, and I think it is correct. But why did you present in Figure 2 algorithm 2 with CB and not TCB? The algorithm with CB does not work, and it is misleading to put CB in Figure 2. I would recommend changing this and putting TCB in the presentation of your algorithm. 
Also, please comment on the necessity of knowing L(u1,...,un) (or rather an upper bound on this, and rewrite the Thm with an upper bound since it is not realistic to have truly this quantity available). This assumption is not innocent since it implies that you assume some knowledge on the quality of the graph you have (how it relies to the u1,..., un). 
*OLD REVIEW without comments on Thm 1 
This paper considers an extension of linear bandit algorithms, i.e. linear bandits with graph information. For instance a recommendation system can have access to a social network to which the users belong to, and it is reasonable to assume that users that are linked together might share interests. Each user can be modelled as a linear bandit problem, these bandits being linked together by a graph. The graph represents the level of similitude between the parameters of the bandits. 
The authors assume that the graph is known to the algorithm, that at each time t the algorithm receives an user ID and a context, and that it has to recommend an arm according to that. They propose an algorithm, GOB.lin, that solves this problem based on LinUCB. The difference with respect to this last algorithm is that this algorithm exploits the graph information to make use of the similitudes between the users of the recommendation system. The authors provide a bound on the regret of this algorithm, and some numerical experiments that are promising and convincing. 
Also, it would be nice if you could add some more intuition on your algorithm. Can it be seen as n bandits where, if some arm it is selected at time t, the estimate w{j,t} of an arm j will be updated as w{j,t,k} = (1-e(it,j)) w{j,t-1,k} + e(it,j) \tilde r_{t}, 
where \tilde rt = M{t-1}^{-1} at \tilde \phi{t,k} is the "classic linear bandit update" on w{it,t}, and e(it,j) is between 0 and 1/t, and is a measure of the distance between it and j, that depends on it and j only and can be easily computed using the graph (e.g. if two nodes are linked e(it,j) = 1/t, if there is no path between them, e(i_t,j) = 0, and then anything in between depending on their proximity level?)? This would make your explanations clearer and your algorithm simpler. 
Other remarks: 
- p2 l89: "....a new model distribuited..."?? 
- p3 l129: "We model the similarly among users...."?? After reading the author rebuttal, I now think the proof is correct and the algorithm works - but please change its presentation, you propose an algorithm that does not work as such (Fig 2), and then analyse a modification of this algorithm, that works (see the TCB in Th 1).I changed completely my score and now recommend acceptance of this paper, that is interesting and on a hot topic. I would however recommend that the authors rewrite their paper in a much clearer way for the final version.