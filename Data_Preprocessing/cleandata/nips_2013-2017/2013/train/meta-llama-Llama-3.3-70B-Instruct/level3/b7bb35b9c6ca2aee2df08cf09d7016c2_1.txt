This paper proposes a novel approach to nearest-neighbor search using binary space-partitioning trees (BSP-trees). The authors establish a theoretical connection between the search performance of BSP-trees and their vector quantization performance, providing a data-dependent analysis of the quality of the results from defeatist BSP-tree search. The paper also explores the impact of partition margins on search performance, introducing the max-margin tree (MM-tree) as a BSP-tree that explicitly maximizes the margin of every partition.
The paper's main contributions include:
1. A theoretical guarantee for the search performance of BSP-trees, linking their nearest-neighbor performance to their vector quantization performance.
2. An empirical validation of the theoretical results using four datasets and five types of BSP-trees.
3. The introduction of the MM-tree, which explicitly maximizes the margin of every partition, and a theoretical guarantee for its quantization performance.
The paper's strengths include:
1. A clear and well-written description of the SSP-table design and its adaptation of analysis from previous work.
2. Convincing experimental results, including computation-vs-communication and clocks/worker/time results.
3. A novel approach to nearest-neighbor search using BSP-trees, which has the potential to advance the state of the art in this area.
However, the paper also has some weaknesses:
1. The evaluation of Lasso results is limited to a toy synthetic dataset and needs a more comprehensive assessment.
2. A direct comparison with state-of-the-art distributed learning packages, such as Yahoo LDA and Hogwild, is suggested for a more illustrative evaluation.
3. The paper lacks a single-worker baseline and details on data partitioning, which should be included for clarity.
In terms of the conference guidelines, the paper meets the criteria for quality, clarity, and originality. The paper is technically sound, with well-supported claims and a complete piece of work. The writing is clear and well-organized, making it easy to follow and understand. The paper also presents a novel approach to nearest-neighbor search, which is a significant contribution to the field.
However, the paper could be improved by addressing the weaknesses mentioned above. Additionally, the authors could consider combining their idea with other approaches, such as Gemulla et al's approach for sub-epochs, and discussing the possibility of forcing slowest stragglers to sync with an incomplete iteration.
Overall, I would recommend accepting this paper, as it presents a significant contribution to the field of nearest-neighbor search and has the potential to advance the state of the art in this area. However, the authors should address the weaknesses mentioned above to improve the paper's overall quality and impact.
Arguments pro acceptance:
* The paper presents a novel approach to nearest-neighbor search using BSP-trees.
* The paper provides a theoretical guarantee for the search performance of BSP-trees, linking their nearest-neighbor performance to their vector quantization performance.
* The paper introduces the MM-tree, which explicitly maximizes the margin of every partition, and provides a theoretical guarantee for its quantization performance.
Arguments con acceptance:
* The evaluation of Lasso results is limited to a toy synthetic dataset and needs a more comprehensive assessment.
* The paper lacks a single-worker baseline and details on data partitioning, which should be included for clarity.
* The paper could benefit from a direct comparison with state-of-the-art distributed learning packages, such as Yahoo LDA and Hogwild, for a more illustrative evaluation.