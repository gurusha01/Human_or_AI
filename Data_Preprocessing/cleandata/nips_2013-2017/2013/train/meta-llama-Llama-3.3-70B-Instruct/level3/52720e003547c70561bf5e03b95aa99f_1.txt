This paper presents a scalable variant of the CLIME estimator, called CLIME-ADMM, along with a distributed framework for computations to estimate sparse precision matrices. The proposed algorithm is designed to scale up to millions of dimensions and trillions of parameters, making it suitable for ultra-large-scale problems. The authors demonstrate the effectiveness of their approach through empirical analysis using OpenMPI and Scalapak, showcasing its large-scale parallel capabilities.
The paper's main strengths lie in its ability to estimate the precision matrix by column blocks, allowing for efficient parallelization and distribution of computations. The use of block cyclic data distribution and matrix multiplication enables the algorithm to achieve load balance and scalability. The authors also provide theoretical guarantees for the convergence of the algorithm, establishing rates of convergence for both the objective and optimality conditions.
However, there are some areas that require improvement. The notation used in the paper could be better organized, with some notations such as ρ and η not clearly defined in the text. A table summarizing the notation would improve readability. Additionally, the choice of column block size appears to be ad-hoc, lacking intuition or theoretical guidance. The authors could provide more insight into how this parameter is chosen and its impact on the algorithm's performance.
Furthermore, the paper's claim of being a truly distributed algorithm is questionable, as it lacks explicit mechanisms for message passing and communication. The authors may want to clarify how the algorithm handles communication between nodes and whether it is indeed a parallel implementation rather than a distributed one.
Minor errors, such as typos in "tuning" and "summarized," should be corrected to improve the overall quality of the paper.
In terms of significance, the paper addresses a difficult problem in precision matrix estimation, providing a scalable solution that can handle ultra-large-scale datasets. The results demonstrate the algorithm's ability to scale almost linearly with the number of cores, making it a valuable contribution to the field.
Overall, the paper presents a significant contribution to the field of precision matrix estimation, providing a scalable and efficient algorithm for ultra-large-scale problems. With some improvements to notation, parameter choice, and clarification on distribution, the paper has the potential to be a strong candidate for acceptance.
Arguments pro acceptance:
* The paper presents a scalable and efficient algorithm for precision matrix estimation, addressing a significant problem in the field.
* The authors provide theoretical guarantees for the convergence of the algorithm, establishing rates of convergence for both the objective and optimality conditions.
* The empirical analysis demonstrates the algorithm's ability to scale almost linearly with the number of cores, making it a valuable contribution to the field.
Arguments con acceptance:
* The notation used in the paper could be better organized, with some notations not clearly defined in the text.
* The choice of column block size appears to be ad-hoc, lacking intuition or theoretical guidance.
* The paper's claim of being a truly distributed algorithm is questionable, lacking explicit mechanisms for message passing and communication.