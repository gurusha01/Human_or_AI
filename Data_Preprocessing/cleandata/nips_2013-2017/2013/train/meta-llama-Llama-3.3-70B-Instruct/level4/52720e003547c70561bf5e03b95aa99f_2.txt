This paper presents an inexact alternating direction method of multipliers (ADMM) for solving linear programs in the context of the CLIME estimator, achieving a convergence rate of O(1/T). The proposed algorithm is implemented on both shared-memory and distributed-memory architectures, and its performance is compared to other methods, including DC-QUIC, Tiger, and CLIME-Flare, through numerical experiments.
Quality: The technical aspects of the paper are sound.
Minor comments:
1) The development of the inexact ADMM for CLIME follows established procedures, as seen in prior work (e.g., http://math.nju.edu.cn/~hebma/English%20Version.htm).
2) Given the structure of CLIME, each subproblem's solution can be computed component-wise, with matrix-matrix multiplication being the most computationally expensive operation. This operation is known to be highly parallelizable, making ADMM ideally suited for parallelization in the context of CLIME.
3) Further details on the numerical experiment setup would be beneficial, such as the accuracy achieved by each solver.
Clarity: The paper's organization is clear and effective.
Originality: The assessment of ADMM's performance in both shared-memory and distributed-memory architectures offers interesting insights.
Significance: The challenge of solving large-scale sparse precision estimation problems can be alleviated by a simple, robust, and distributed algorithm. The evaluation of ADMM in different architectures is noteworthy, although the derivation of inexact ADMM is standard, and the good scalability can be attributed to CLIME's simple structure.