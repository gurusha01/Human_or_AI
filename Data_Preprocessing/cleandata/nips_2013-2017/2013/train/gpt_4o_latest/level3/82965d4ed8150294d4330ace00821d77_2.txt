The paper proposes a novel method to accelerate HOG-based object detection by replacing scalar product operations with a single lookup via vector quantization (VQ). This approach is integrated with additional speedup techniques, such as cascades, to achieve significant computational efficiency without sacrificing detection accuracy. The authors demonstrate the effectiveness of their method through comprehensive experimental evaluations on standard benchmarks, achieving up to two orders of magnitude speedup for deformable part models and exemplar SVM detectors. Importantly, the method is compatible with legacy models and does not require retraining, making it a practical plug-and-play solution for existing systems. The authors also plan to release their implementation as a library, which could enhance the method's adoption and impact.
Strengths:
The paper is technically sound, with a clear and detailed explanation of the proposed method. The use of VQ to approximate dot products is a simple yet effective idea, and the authors convincingly demonstrate its benefits through extensive experiments. The results show that the method achieves substantial speedups while maintaining accuracy, which is critical for real-time and large-scale object detection tasks. The flexibility to trade off speed and accuracy by adjusting the number of VQ levels or rescoring windows is another strength, as it allows the method to adapt to different application requirements. The planned release of the code as a library further adds to the paper's significance, as it could facilitate broader adoption and inspire future research.
Weaknesses:
The primary weakness of the paper lies in its limited novelty. While the authors present their method as a significant contribution, the core idea of using VQ for speeding up dot-product computations has been explored in prior work, particularly in [10]. Although the paper emphasizes a different application and implementation details, the overlap with existing literature undermines its originality. Additionally, while the authors provide a thorough evaluation, the discussion on how their method compares to other kernel approximation techniques (e.g., PCA) could be expanded to highlight its unique advantages more explicitly. Lastly, reference [13] requires correction, which should be addressed if the paper is accepted.
Recommendation:
Pros for acceptance:
- The method is simple, well-explained, and experimentally validated.
- Significant speedup with negligible accuracy loss.
- Practical applicability to legacy models and planned code release.
Cons for acceptance:
- Limited novelty due to overlap with prior work ([10]).
- Minor issues with references.
Overall, while the paper's lack of novelty is a concern, its practical contributions and thorough evaluation make it a valuable addition to the field. I recommend acceptance, provided the authors address the overlap with prior work more explicitly and correct reference [13].