This paper addresses the min-max hypergraph partitioning problem in a streaming computation model, where items must be irrevocably assigned to components as they arrive, with memory constraints linear in the number of components. The authors propose a greedy assignment strategy and demonstrate both theoretical guarantees and empirical performance improvements over alternative approaches. The paper's primary contributions include: (1) proving that the greedy algorithm achieves balanced asymptotic recovery of hidden co-clusters under specific probabilistic conditions, and (2) presenting extensive experimental results on real-world and synthetic datasets to validate the algorithm's effectiveness.
Strengths:
1. Novelty and Theoretical Contribution: The paper introduces a new approach to the min-max hypergraph partitioning problem in the streaming model, which is less explored compared to offline settings. The use of Polya urn processes to analyze the greedy algorithm's convergence and recovery guarantees is innovative and well-justified.
2. Empirical Validation: The authors provide extensive experiments on real-world datasets, demonstrating the superiority of the greedy algorithm over baseline methods like random assignment, proportional allocation, and offline heuristics such as hMetis. The results are robust and align with the theoretical claims.
3. Clarity of Problem Definition: The paper clearly defines the problem, including its NP-hardness, and situates it within the broader context of clustering, load balancing, and streaming computation.
4. Practical Relevance: The work addresses scalability challenges in web-scale systems, making it highly relevant for real-world applications such as document clustering, social networks, and distributed computation platforms.
Weaknesses:
1. Limited Scope of Recovery Conditions: The theoretical guarantees rely on specific probabilistic assumptions about the input (e.g., hidden co-clustering model, parameters p and q). While this is a reasonable starting point, the paper does not explore how the algorithm performs under more general or adversarial inputs.
2. Comparison with Offline Methods: While the greedy algorithm outperforms some offline methods (e.g., hMetis), the comparison with PARSA reveals a significant performance gap. This highlights a limitation of the streaming model but could have been discussed more explicitly.
3. Clarity of Experimental Setup: The experimental section could benefit from more details about parameter tuning, dataset preprocessing, and the choice of baselines. For example, the rationale behind the "slack" parameter (c = 100) in the greedy algorithm is not fully explained.
4. Acknowledgment of Limitations: The paper does not sufficiently discuss the limitations of the greedy algorithm, such as its potential sensitivity to input order or the impact of noise (q > 0) on real-world datasets.
Evaluation:
- Quality: The paper is technically sound, with rigorous proofs and well-documented experiments. However, the theoretical results are somewhat narrow in scope.
- Clarity: The writing is clear and well-organized, though some sections (e.g., experimental setup) could use additional detail.
- Originality: The work is novel, particularly in its application of Polya urn processes to hypergraph partitioning in the streaming model.
- Significance: The results are significant for streaming computation and scalable clustering, though the practical impact may be limited by the assumptions and performance gap with offline methods.
Recommendation:
I recommend acceptance with minor revisions. The paper makes a strong theoretical and empirical contribution to the field of streaming hypergraph partitioning. Addressing the limitations discussed above, particularly expanding the analysis to more general input models and providing additional experimental details, would further strengthen the work.