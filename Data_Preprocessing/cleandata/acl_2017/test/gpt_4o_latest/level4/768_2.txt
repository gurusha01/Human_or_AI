This paper introduces a method for recognizing lexical entailment (specifically, hypernymy) within context. The approach involves representing each context by averaging, min-pooling, and max-pooling its word embeddings. These representations are then combined with the target word's embedding using element-wise multiplication. The in-context representation of the left-hand-side argument is concatenated with that of the right-hand-side argument, forming a single vectorial representation of the input. This vector is subsequently fed into a logistic regression classifier.
In my assessment, the paper has two significant shortcomings. First, the classification model employed (concatenation + linear classifier) has been shown to be fundamentally incapable of learning relations, as demonstrated in "Do Supervised Distributional Methods Really Learn Lexical Inference Relations?" (Levy et al., 2015). Second, the paper makes claims of superiority that are not convincingly supported by the quantitative results. Additionally, there are issues with clarity and the experimental setup, which collectively give the impression that the paper is not fully polished.
= Classification Model =
Using concatenated word vectors as input for a linear classifier has been mathematically proven to be insufficient for learning word relations (Levy et al., 2015). What motivates the use of this model in a contextual setting?
Although the addition of similarity features might partially address this limitation, these features are all symmetric (e.g., Euclidean distance, since |L-R| = |R-L|). Why should we expect such features to effectively detect entailment?
I remain unconvinced that this classification model is suitable for the task at hand.
= Superiority Claims =
The authors assert that their contextual representation outperforms context2vec. However, this claim is not substantiated in the paper for the following reasons:
1) The highest F1 scores in both Table 3 and Table 4 (excluding PPDB features) are found in the 7th row. Based on my understanding, this variant does not utilize the proposed contextual representation; rather, it employs the context2vec representation for the word type.
2) The experiment relies on pre-trained embeddings (GloVe) and parameters (context2vec) that were optimized on entirely different datasets of varying sizes. Comparing these methods is empirically flawed and likely biased in favor of the method using GloVe, which was trained on a much larger corpus.
Moreover, it seems that the primary performance improvement stems from the inclusion of similarity features rather than the proposed contextual representation. This observation is not adequately discussed.
= Miscellaneous Comments =
- I appreciated the use of the WordNet dataset; leveraging example sentences is a clever approach.
- The motivation for the cross-lingual lexical entailment task is unclear. Why is this task interesting or reasonable?
- Some basic baselines are missing. Instead of the "random" baseline, how does the "all true" baseline perform? Additionally, what about the context-agnostic symmetric cosine similarity between the two target words?
- The tables are difficult to interpret. Captions should make the tables self-explanatory. Furthermore, the meaning of each variant is unclear; providing a more detailed description in the text could help readers better understand.
- The PPDB-specific features are not clearly explained.
- Section 8.1 was difficult to comprehend.
- Table 4 is overfull.
- In Table 4, the F1 score for "random" should be 0.25.
- There is a typo in line 462: it should reference "Table 3."
= Author Response =
Thank you for addressing my comments. However, there are still unresolved issues that prevent me from recommending acceptance of this paper:
- My concern with the base model is not that it learns prototypical hypernyms, but that it is mathematically incapable of learning a relation.
- It seems we have differing interpretations of Tables 3 and 4. This may be a clarity issue, but it hinders my ability to understand how the claim that contextual representations significantly improve performance is supported. Additionally, it appears that other factors, such as similarity features, have a larger impact on performance.