Summary of the Paper
The paper proposes a novel, fully non-monotonic transition system based on the non-projective Covington algorithm for dependency parsing. The authors develop several non-monotonic variants of the dynamic oracle, which is used to train the parser with erroneous examples that need to be repaired. The non-monotonic system allows for the correction of previous erroneous attachments, regardless of their original direction, and can replace them with either a rightward or leftward arc.
Main Contributions
1. Non-monotonic transition system: The authors propose a non-monotonic variant of the Covington parser, which can produce non-projective dependency analyses.
2. Approximate dynamic oracle: The authors develop an approximate dynamic oracle that uses efficiently computable approximations of the loss, which is necessary due to the unpredictability of the non-monotonic scenario.
3. Improved parsing accuracy: The non-monotonic algorithm obtains better performance than the monotonic version, regardless of the loss calculation used.
Strengths
1. Improved accuracy: The non-monotonic algorithm achieves an average improvement of 0.32 in UAS over the monotonic version, with 6 statistically significant improvements at the .05 level.
2. Flexibility: The non-monotonic system can correct previous erroneous attachments, regardless of their original direction.
3. Efficiency: The proposed lower bound makes the non-monotonic system the fastest among all dynamic oracles developed for the non-projective Covington algorithm.
Weaknesses
1. Computational complexity: The calculation of the non-monotonic terms requires an algorithm that finds all elementary cycles in a directed graph, which can be computationally expensive.
2. Loss of accuracy in Basque: The non-monotonic version has an inexplicable drop in accuracy in Basque compared to the other two oracles.
3. Limited evaluation: The evaluation is limited to 19 languages from the CoNLL-X and CoNLL-XI shared tasks, and it is unclear how the algorithm will perform on other languages or datasets.
Questions to Authors
1. Can you provide more insight into why the non-monotonic version has a drop in accuracy in Basque?
2. How do you plan to address the computational complexity of the non-monotonic terms?
3. Can you evaluate the algorithm on other languages or datasets to further demonstrate its effectiveness?