Review
Summary and Contributions
This paper presents a novel extension to dependency parsing by introducing a fully non-monotonic transition system based on the non-projective Covington algorithm. The key contributions of the paper are:  
1. Theoretical Advancements: The authors extend Covington's algorithm to support non-monotonic transitions, allowing for the correction of erroneous attachments in both leftward and rightward arcs. This is a significant theoretical contribution as it enables the generation of non-projective dependency structures with greater flexibility.  
2. Dynamic Oracle Development: The paper proposes approximate dynamic oracles tailored for the non-monotonic system. These oracles leverage efficiently computable loss bounds, which are empirically shown to be tight approximations of the actual loss.  
3. Empirical Results: The proposed system demonstrates improved parsing accuracy over the monotonic version on the majority of CoNLL datasets, showcasing the practical utility of the approach.  
Strengths
1. Novelty: The introduction of full non-monotonicity to the Covington algorithm is a notable innovation, addressing limitations of previous monotonic systems and enabling more robust parsing of non-projective structures.  
2. Theoretical Rigor: The paper provides detailed theoretical insights into the design of non-monotonic transitions and the formulation of approximate dynamic oracles, supported by clear mathematical reasoning.  
3. Empirical Validation: The experiments convincingly demonstrate that the non-monotonic system outperforms its monotonic counterpart in most languages, with statistically significant improvements in several cases. The evaluation of different loss expressions further strengthens the empirical analysis.  
Weaknesses
1. Lack of Error Analysis: While the paper shows overall accuracy improvements, it does not provide a detailed error analysis specifically for non-projective structures. This would help clarify the system's strengths in handling challenging long-distance dependencies.  
2. State-of-the-Art Comparison: The paper does not compare its results to recent parsers leveraging neural networks or word embeddings. Such a comparison would contextualize the performance of the proposed system against modern benchmarks.  
3. Dataset Exclusions: The exclusion of certain CoNLL-X datasets is not adequately justified. Additionally, the observed accuracy drops for specific languages, such as Basque, remain unexplained, raising questions about the system's robustness.  
Questions to Authors
1. Why were some CoNLL-X datasets excluded from the experiments? Could their inclusion have impacted the results?  
2. Can you provide insights into why the non-monotonic system underperforms for Basque compared to the monotonic version?  
3. How does the proposed system compare to state-of-the-art parsers that utilize neural architectures?  
Conclusion
The paper makes significant theoretical and algorithmic contributions to dependency parsing by introducing non-monotonicity to the Covington algorithm and proposing approximate dynamic oracles. While the empirical results are promising, the lack of error analysis on non-projective structures and limited benchmarking against state-of-the-art systems are notable gaps. Addressing these issues would further strengthen the paper's impact. Overall, this work represents a meaningful advancement in transition-based parsing and is a strong candidate for acceptance, provided the authors address the outlined weaknesses.