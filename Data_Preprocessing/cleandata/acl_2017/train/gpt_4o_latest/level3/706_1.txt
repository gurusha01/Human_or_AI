Review of the Paper
Summary and Contributions
This paper proposes a novel method for building natural language interfaces by enabling users to define new concepts and syntax, extending the work of Wang, Liang, and Manning (2016). The proposed system, Voxelurn, starts with a core programming language and allows users to incrementally "naturalize" it by defining alternative syntax and complex concepts. This interactive approach enables a community of users to collaboratively evolve the language, making it more expressive and efficient over time. The authors demonstrate the system's effectiveness in a voxel world, where users built 240 complex structures, with 74.7% of the last 10,000 utterances using the naturalized language. The paper's key contributions include:
1. Introducing an interactive language naturalization process that combines user-defined definitions with grammar induction to scale to complex action spaces.
2. Proposing a grammar induction algorithm tailored for definitions, which ensures high precision and avoids combinatorial explosion in candidate parses.
3. Demonstrating the scalability and effectiveness of the approach through a large-scale user study on Amazon Mechanical Turk.
Strengths
1. Novelty and Scalability: The paper extends prior work by introducing a more scalable approach to interactive language learning. The use of user-defined definitions and grammar induction is a compelling solution for handling the vast space of possible programs in natural language interfaces.
2. Community-Driven Learning: The collaborative aspect of the system, where user-defined rules generalize across the community, is innovative and demonstrates the potential for collective intelligence in evolving natural language interfaces.
3. Empirical Validation: The extensive user study, involving 70 participants and 230 structures, provides strong evidence of the system's effectiveness. The increasing preference for the naturalized language (74.7% of utterances) highlights the practical utility of the approach.
4. Clarity and Presentation: The paper is well-written, with clear explanations of the methodology, algorithms, and experimental results. The inclusion of detailed examples, such as the "add palm tree" definition, enhances understanding.
Weaknesses
1. Scalability to Practical Domains: While the system performs well in the voxel world, its scalability to more practical and diverse domains (e.g., database querying or robotics) is not thoroughly explored. The paper would benefit from additional experiments in real-world applications.
2. Sensitivity to Vocabulary Size: The impact of vocabulary size on system performance is not discussed. As the vocabulary grows, the potential for ambiguity and conflicts in user-defined rules may increase, which could degrade the system's usability.
3. Effect of Incentives: The role of user incentives (e.g., leaderboards and bonuses) in driving participation and quality of definitions is not analyzed. This raises questions about whether the system would perform as well without such incentives.
4. Consideration of Alternatives: The paper does not compare its approach to related paradigms, such as inverse reinforcement learning or imitation learning, which could provide additional context and highlight its advantages or limitations.
5. Lack of Real-World Applications: The absence of a real-world application limits the paper's impact. Demonstrating the system's utility in a practical setting (e.g., querying semi-structured data or controlling IoT devices) would significantly strengthen the work.
Questions to Authors
1. How does the system handle conflicts or ambiguities that arise from user-defined rules, especially as the vocabulary size increases?
2. Can the proposed method generalize to other domains, such as database querying or robotics? If so, what modifications would be required?
3. How dependent is the system's success on the incentives provided to users? Would the approach work in a less gamified setting?
Recommendation
While the paper presents a novel and well-executed approach to building natural language interfaces, the lack of exploration in real-world domains and limited discussion of scalability and ambiguity handling are notable weaknesses. I recommend acceptance with minor revisions, contingent on addressing these concerns.