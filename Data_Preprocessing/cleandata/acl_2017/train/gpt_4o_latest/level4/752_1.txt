Paraphrased Review
Strengths:
The paper illustrates that seq2seq models can be effectively adapted for AMR parsing and realization tasks by linearizing a tailored pre-processed version of the AMR graph and its corresponding sentence, alongside employing 'Paired Training' (iterative back-translation of monolingual data combined with fine-tuning). Although the parsing performance lags behind other studies (e.g., Pust et al., 2015), those approaches leveraged additional semantic information.
For the AMR realization task, the paper shows that incorporating additional monolingual data through back-translation improves performance compared to a seq2seq model that does not utilize such data. (Refer to the note below regarding comparisons to prior non-seq2seq work for realization.)
Weaknesses:
At a broader level, the primary weakness lies in the paper's focus on empirical comparisons, where multiple factors and dimensions vary simultaneously (in some cases, due to differing access to information), making direct comparisons challenging.
For instance, in the realization results (Table 2), PBMT (Pourdamghani et al., 2016) is trained on LDC2014T12, which contains 13,051 sentences, whereas the model in this paper is trained on LDC2015E86, which comprises 19,572 sentences (as per http://amr.isi.edu/download.html). This discrepancy underpins the claim of over 5 points improvement over the state-of-the-art (PBMT) in lines 28/29, 120/121, and line 595, but is only briefly mentioned in the caption of Table 2. A valid comparison would require re-evaluating either the proposed approach or PBMT using the same training dataset.
General Discussion:
Is there any overlap between the sentences in your Gigaword sample and the test sentences in LDC2015E86? LDC2015E86 reportedly includes data from the "proxy report data in LDC's DEFT Narrative Text Source Data R1 corpus (LDC2013E19)" (accessible with an LDC account: https://catalog.ldc.upenn.edu/LDC2015E86). LDC2013E19 appears to contain data from Gigaword (https://catalog.ldc.upenn.edu/LDC2013E19). Similarly, the AMR corpus LDC2014T12 also includes "data from newswire articles selected from the English Gigaword Corpus, Fifth Edition" (publicly accessible link: https://catalog.ldc.upenn.edu/docs/LDC2014T12/README.txt). Please verify that there is no contamination of the test set.
Lines 244–249: Did the two modifications to the encoder significantly impact performance? What motivated these changes?
For replication purposes, please clarify (an appendix would suffice) whether the implementation is based on an existing seq2seq framework.
Line 321: What was the final sequence length used? Consider including such details in an appendix.
Please label the columns in Table 1 (presumably dev and test). Additionally, there is a discrepancy between Table 1 and the text: "Table 1 summarizes our development results for different rounds of self-training." It seems that only the results from the second round of self-training are displayed.
Again, the columns in Table 1 are unlabeled, but should the results in column 1 for CAMR instead be 71.2, 63.9, 67.3—the last line of Table 2 in http://www.aclweb.org/anthology/S16-1181, which corresponds to the configuration +VERB+RNE+SRL+WIKI? It seems the second-to-last row of Table 2 in CAMR (Wang et al., 2016) is currently being referenced. On this note, how does your approach handle the wikification information introduced in LDC2015E86?
Section 7.1: The stochastic example is missing a reference.
Lines 713–715: This reads more like a hypothesis to be tested empirically rather than a definitive conclusion, as currently implied.
If an additional page is available, consider adding a concluding section.
How is decoding performed? Are you using beam search?
Following up on lines 161–163, the actual vocabulary size used in the experiments does not appear to be mentioned. After preprocessing, are there any unseen tokens in the dev/test sets? In other words, is the unknown word replacement mechanism (using attention weights), as described in Section 3.2, ever utilized?
For the realization case study, it would be interesting to evaluate performance on phenomena that are known limitations of AMR, such as quantification and tense (https://github.com/amrisi/amr-guidelines/blob/master/amr.md).
The paper would benefit from a brief discussion (perhaps a couple of sentences) explaining the motivation for using AMR as opposed to other semantic formalisms, as well as why the human-annotated AMR signal might be advantageous compared to directly learning a model (e.g., seq2seq) for a task (e.g., machine translation).
For future work (not factored into the scores for this review, as the relevant paper is not yet formally published in the EACL proceedings): Regarding parsing, what accounts for the differences compared to prior seq2seq approaches? Specifically, between Peng and Xue, 2017 and AMR-only (as in Table 1), is the difference in performance driven by the architecture, preprocessing, linearization, data, or a combination of these factors? Consider isolating this difference. (As an aside, the citation for Peng and Xue, 2017 ["Addressing the Data Sparsity Issue in Neural AMR Parsing"] should be Peng et al., 2017 (http://eacl2017.org/index.php/program/accepted-papers; https://arxiv.org/pdf/1702.05053.pdf). The authors are reversed in the References section.)
Proofreading Suggestions (these did not influence the scoring of the paper):
- outperform state of the art → outperform the state of the art  
- Zhou et al. (2016), extend → Zhou et al. (2016) extend  
- (2016),Puzikov et al. → (2016), Puzikov et al.  
- POS-based features, that → POS-based features that  
- language pairs, by creating → language pairs by creating  
- using a back-translation MT system and mix it with the human translations → using a back-translation MT system, and mix it with the human translations  
- ProbBank-style (Palmer et al., 2005) → PropBank-style (Palmer et al., 2005)  
- independent parameters , → independent parameters,  
- for the 9.6% of tokens → for 9.6% of tokens  
- maintaining same embedding sizes → maintaining the same embedding sizes  
- Table 4.Similar → Table 4. Similar  
- realizer.The → realizer. The  
Notation:  
- Lines 215, 216: The sets C and W are defined but never subsequently referenced. (However, W could/should replace "NL" in line 346 if they refer to the same vocabulary.)