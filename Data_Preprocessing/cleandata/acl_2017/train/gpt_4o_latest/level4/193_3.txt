=========================
- Summary:
=========================
The paper introduces a transition-based system for parsing UCCA graphs, which include non-terminal nodes, reentrancy, and discontinuities. The transition set combines previously proposed transitions, with key features being the swap transition for handling discontinuities and transitions that avoid popping the stack to support multiple parent nodes. The system achieves its best performance using an MLP as the transition classifier, leveraging features derived from bidirectional LSTMs.
The authors evaluate the system's performance against other state-of-the-art parsers by employing conversion schemes (to bilexical graphs and tree approximations). These parsers are trained on the converted data, used to predict graphs (or trees), and the resulting structures are converted back to UCCA format for comparison with gold-standard UCCA representations.
=========================
- Strengths:
=========================
The paper provides a robust contribution, employing state-of-the-art transition-based parsing techniques and machine learning methods. 
It is exceptionally well-written, with precise descriptions of both formal and experimental aspects. The authors exhibit a strong understanding of related work, encompassing both parsing methodologies and shallow semantic representations.
=========================
- Weaknesses:
=========================
The primary limitation of the paper is that its originality lies more in the targeted UCCA representations than in the design of the proposed parser itself.
=========================
- More detailed comments and clarification questions:
=========================
Introduction
Lines 46-49: The term "discontinuous nodes" could be associated with non-projectivity in dependency syntax. It might be more accurate to state that the distinction lies with phrase-structure syntax rather than dependency syntax.
Section 2:
The description of the UCCA scheme, specifically the phrase "a node (or unit) corresponds to a terminal or to several sub-units," is somewhat unclear. Are you suggesting something beyond the idea that a node is either a terminal or a non-terminal? For instance, could a non-terminal node have only one child, making it neither a terminal nor composed of multiple sub-units?
The phrase "movement, action or state" is somewhat imprecise, as there are processes that are neither movements nor actions (e.g., agentless transformations). While the UCCA guidelines use these terms, they later clarify the state/process dichotomy, with processes encompassing "action, movement, or some other relation that evolves in time."
Lines 178-181: The contrast between "John and Mary's trip" and "John and Mary's children" is not ideal. The relational noun "children" implies an underlying relationship between two participants (the children and John+Mary), which UCCA must also account for.
Section 4:
Regarding the conversion procedures:
- While the detailed description of the conversion procedure in the supplementary material is thorough, a more informal explanation in the main paper would improve readability (e.g., framing it as a variant of the constituent-to-dependency conversion procedure described by Manning, 1995). Additionally, it would be helpful to explain the rationale behind the priority order used to determine the head of an edge.
- Clarify how l(u) is selected when multiple children share the same label (e.g., is the leftmost child chosen?).
- In the converted graphs shown in Figure 4, some edges appear to be reversed (e.g., the direction between "John" and "moved" and between "John" and "gave" should be consistent).
- Furthermore, the low upper bound for remote edges in bilexical approximations is puzzling. The current description of the conversions does not provide a clear understanding of which types of remote edges cannot be accommodated.
Regarding the comparison to other parsers:
It seems somewhat unfair to fine-tune the proposed parser while using default settings for the other parsers.
Section 5:
Line 595: Please provide a more detailed justification for the claim "using better input encoding."
Section 6:
The purported superiority of representations with non-terminal nodes is not entirely convincing. While avoiding the selection of a head for certain constructions may be considered more elegant, it is worth noting that co-head labels in bilexical dependencies can formally encode the same information.