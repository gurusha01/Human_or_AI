The paper explores the concept of a family of graph languages that is closed under intersection and can be made probabilistic.
- Strengths:
The introduction effectively establishes the relevance, overall aim, and high-level context of the paper, making it a pleasure to read. The motivation behind the work is clear and intriguing, providing a solid foundation for the rest of the paper. The paper is extremely clear, although it requires close reading and a significant amount of formal background knowledge. It also nicely addresses certain differences in terminology, ensuring clarity and consistency throughout. The generalization of hyper-edge grammars and Earley's algorithm is particularly interesting, as seen in the application of Predict to nonterminal edges and Scan to terminal edges. If the distinction between parsing and validation in the NLP context is clarified, the paper has the potential to be highly useful due to its formal correctness, nice contribution, and instructive nature, which can inspire new ideas in other researchers. The described algorithm can be utilized in semantic parsing to rerank hypergraphs produced by another parser, making it a relevant contribution to the ACL, albeit in a restricted manner.
- Weaknesses:
One notable omission is the lack of mention of the reranking use in the introduction. While the paper presents a significant result regarding the linear time complexity of an Earley parser for certain grammars, it is essential to note that this involves deep assumptions about the grammar and the input. The linear complexity of parsing an input graph seems accurate for top-down deterministic grammars, but the paper fails to acknowledge that an input string in NLP typically gives rise to an exponential number of graphs. Therefore, the parsing complexity result should be interpreted within the context of graph validation or the process of finding a derivation of the graph, such as for graph transduction via synchronous derivations. The paper could benefit from greater clarity in distinguishing between semantic parsing (from strings) and parsing of semantic parses (the current work). Additionally, there appears to be no control over the linear order of 0-arity edges, which might be worth addressing, especially if the parser is extended to handle string inputs with the goal of finding the best hypergraph for given external nodes. This extension would require item representations of subgraphs to keep track of covered 0-arity edges, potentially leading to an exponential complexity for the string-parser variant.
- Easily correctable typos or textual problems:
1. Lines 102-106 are misleading, as the reference to "such distribution" does not align with the preceding discussion.
2. Line 173 should discuss validation or recognition algorithms instead of parsing algorithms, given the different connotation of "parsing" in NLP.
3. Lines 195-196 are unclear regarding the elements of att_G and their pairwise distinctness, which could be clarified by comparing them to Example 1.
4. The definition of "rank" should be moved earlier and redundancy removed, as suggested in line 206.
5. Line 267 could be rephrased to "immediately derives" for better clarity.
6. Line 279 is missing the word "be."
7. An example of a nontrivial internal path should be provided, as mentioned in line 352.
8. The definition of a subgraph of a hypergraph should be included, as referenced in line 472.
9. Lines 417 and 418 could benefit from an explanation of how the two propositions contribute to the quoted material.
10. Line 458 should include the word "for" for completeness.
Table: The introduction of "Axiom" seems isolated and could be linked to the relevant text that explains its role as a trigger.
- General Discussion:
Discussing MSOL graph languages and their yields, which are context-free string languages, could provide additional context. The behavior of the parser when the grammar is ambiguous and not top-down deterministic, or when there are exponential numbers of parses due to lexical ambiguity, is worth exploring. The potential for the given Earley recognizer to be strictly polynomial to m or k is also an interesting point. The challenges of cross-lingual semantic parsing, where linguistic phenomena may be expressed differently across languages, should be considered. The role of the marker in subgraphs is not fully understood and seems to be elided later without significant use. The uniqueness of the normal order and the occurrence of non-crossing links when parsing linearized sentences to semantic graphs are questions that require further clarification.
- Significant questions to the Authors:
The interpretation of parsing complexity in the context of graph validation or derivation, especially when an input string gives rise to an exponential number of graphs, needs clarification. The adaptability of the Earley algorithm to non-deterministic, possibly ambiguous regular tree grammars for assigning trees to frontier strings, similar to context-free grammars, is a relevant question. The principle determining the linearization of 0-arity edges (~words) in generated hypergraphs and whether this linear order is determined by Earley paths or actual word order in natural language strings should be addressed. The connection between RGGs and (non)context-free string languages or sets of (non)projective dependency graphs used in semantic parsing requires clarification, particularly in light of the statement that HRGs can generate non-context-free languages, which could refer to either graph or string languages.