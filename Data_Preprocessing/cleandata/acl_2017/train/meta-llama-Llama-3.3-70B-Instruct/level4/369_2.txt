The paper presents a deep learning-based approach to enhance two-step translation, with results demonstrated for Chinese->Spanish translation, and the method appears to be generally language-agnostic.
The setup is standard for two-step machine translation, where the first step translates into a morphologically underspecified version of the target language, and the second step utilizes machine learning to fill in the missing morphological categories, producing the final output by inflecting the underspecified forms using a morphological generator. The key innovation in this work is the use of deep neural networks as classifiers in the second step, along with a proposed rescoring step that employs a language model to select the optimal variant.
Overall, this is a solid piece of work with good empirical results, as the classifier models achieve high accuracy, clearly outperforming baseline methods such as support vector machines, and the improvement is evident in the final translation quality.
However, a major concern with the paper is the lack of comparison with straightforward deep learning baselines, particularly for a structured prediction problem addressed through independent local decisions followed by a rescoring step, which is essentially a sequence labeling task well-suited for recurrent neural networks. It would be beneficial to see how a bidirectional LSTM network performs when trained and applied in the standard sequence labeling setting. The author's response did not adequately clarify whether baselines, including the standard LSTM, were run in the same framework, i.e., independently for each local label, which is a significant issue because the paper does not use RNNs in the conventional manner nor justify the alternative approach.
The final rescoring step lacks clarity, specifically whether it involves rescoring n-best sentences, the features used, or searching a weighted graph for the single optimal path. This needs more explicit explanation in the paper, as the current description suggests producing a graph, finding K best paths, generating inflected sentences from these paths, and then using a language model to select the best variant, but this interpretation is uncertain.
The paper mentions that larger word embeddings lead to longer training times but does not specify if they also impact the final results. Additionally, it is counterintuitive that adding information from the source sentence is detrimental, and a more thorough discussion with convincing examples would be appreciated to explain this phenomenon, such as whether the number information sometimes gets lost due to this approach.
The paper contains several typos and the English level may not be sufficient for presentation at a major conference like ACL. Minor corrections include technical and grammatical errors such as "context of the application of MT" to "context of application for MT", "In this cases" to "In this case", "markov" to "Markov", "CFR" to "CRF", and numerous other corrections to improve clarity and accuracy.
Furthermore, there are specific technical inaccuracies, such as the description of the Sigmoid function's output range and the suggestion to use a tanh layer for outputs in the range (-1, 1), indicating a need for careful review to ensure technical precision. 
Lastly, several phrases and sentences require rephrasing for better readability and understanding, including "information of a word consists in itself" to "information of a word consists of itself", "this $A$ set" to "the set $A$", and "coverage raises the 99%" to "coverage exceeds 99%", among others, to enhance the overall quality of the paper.