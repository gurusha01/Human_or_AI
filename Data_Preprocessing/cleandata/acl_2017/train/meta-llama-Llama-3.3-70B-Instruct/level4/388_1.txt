This paper presents an intriguing and ambitious endeavor: the automated transformation of Universal Dependency grammar structures into semantic logical form representations, which the authors term as such. Essentially, each Universal Dependency construct is mapped to a corresponding logical form representation, and a procedure is outlined to facilitate this conversion, operating in an 'inside-out' manner via an intermediate form to ensure proper nesting of substructures within larger ones. The authors conduct two evaluations: one comparing the results to gold-standard lambda structures and another assessing the effectiveness of the resulting lambda expressions in answering questions from two QA datasets.
However, it is challenging to adequately summarize the content within the given space. The authors have made an effort to cover the primary aspects, but numerous details remain unaddressed. A longer version of the paper would be beneficial, particularly to provide more insight into the QA results, such as identifying the types of questions that are not handled or answered correctly, and the reasons behind these limitations. This information would be invaluable in understanding the constraints of the logical form representations.
My primary concern lies in the fact that the proposed logical form representation does not truly constitute a 'real' semantic representation. While it is, in essence, a close rewrite of the input dependency structure with some notable advancements towards 'semanticization' - including the incorporation of lambda operators, explicit inclusion of dropped arguments, and introduction of suitable types for eventive adjectives and nouns - several fundamental semantic aspects are either absent or incorrect. Notably, quantification, numbers, reference forms, negation, modals, and inter-event relationships are not adequately addressed. These elements cannot be simply treated as unusual words with straightforward lambda formulas; instead, they require specialized handling, such as creating separate set objects with canonical variables for numbers or accounting for differing event models between individuals.
It is easy to criticize the paper for its omissions, but it is unfair to expect comprehensive coverage. However, obvious errors cannot be overlooked. The assignment of event relations in parallel with syntactic roles is particularly troubling, as it fails to account for semantic role differences between sentences like "he broke the window" and "the window broke." This issue requires adequate treatment and cannot be dismissed as a subsequent semantic processing task. Acknowledging this limitation and providing a plan for future work, potentially incorporating FrameNet and semantic filler requirements, would have strengthened the paper.
Separately, the notation conversion procedure is reasonably clear and demonstrates improvements over its predecessor based on Stanford dependencies. The authors' decision to submit non-neural work to the ACL is commendable, especially in the current climate of enthusiasm for neural approaches.