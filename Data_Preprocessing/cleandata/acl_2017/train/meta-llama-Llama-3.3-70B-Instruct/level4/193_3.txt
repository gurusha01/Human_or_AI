The authors' response adequately addresses most of the clarification questions raised in my initial review.
=========================
- Summary:
=========================
This paper proposes a transition-based system for parsing UCCA graphs, which are characterized by non-terminal nodes, reentrancy, and discontinuities. The system's transition set combines existing transitions, with a swap transition to handle discontinuities and transitions that do not pop the stack, allowing nodes to have multiple parents. The best results are achieved using a multilayer perceptron (MLP) as the transition classifier, with features based on bidirectional long short-term memory (LSTM) networks.
The authors evaluate their system's performance against other state-of-the-art parsers by converting the parsed graphs to bilexical graphs and tree approximations, training the parsers on the converted data, and comparing the predicted structures to the gold standard UCCA representations.
=========================
- Strengths:
=========================
The paper presents a robust and well-executed study, leveraging state-of-the-art transition-based techniques and machine learning approaches for parsing. The writing is clear and formal, with precise descriptions of both the experimental and theoretical aspects, demonstrating the authors' in-depth knowledge of related work in parsing techniques and shallow semantic representations.
=========================
- Weaknesses:
=========================
A potential weakness of the paper is that its originality primarily stems from the targeted UCCA representations rather than the proposed parsing approach itself.
=========================
- More detailed comments and clarification questions:
=========================
Introduction
Lines 46-49: It would be more accurate to contrast UCCA with phrase-structure syntax rather than dependency syntax, as "discontinuous nodes" can be related to non-projectivity in the dependency framework.
Section 2:
The description of the UCCA scheme could be clarified, particularly the statement that "a node (or unit) corresponds to a terminal or to several sub-units," which seems to imply that a node is either terminal or non-terminal. However, it is unclear if a non-terminal node can have only one child. 
The terms "movement, action, or state" might not fully capture the range of processes, as some processes do not fit into these categories (e.g., agentless transformations). The UCCA guidelines acknowledge this by later introducing the state/process dichotomy.
Lines 178-181: The example contrasting "John and Mary's trip" with "John and Mary's children" may not be the most effective, as the relational noun "children" implies an underlying relation between participants that also needs to be accounted for in UCCA.
Section 4:
Regarding the conversion procedures, it would be beneficial to provide an informal description of the process in the main paper, similar to the constituent-to-dependency conversion procedure described by Manning (1995). Additionally, the motivation behind the priority order used to define the head of an edge should be explained. 
The method for choosing l(u) when multiple children have the same label should be explicitly stated (e.g., leftmost child). 
Some edges in the converted graphs in Figure 4 appear to be inverted, such as the directions between "John" and "moved" and between "John" and "gave," which should be consistent.
The upper bound for remote edges in bilexical approximations seems low, and the current description of the conversions does not provide a clear understanding of which remote edges cannot be handled.
When comparing the proposed parser to others, it seems unfair to tune the proposed parser while using default settings for the other parsers.
Section 5
Line 595: The claim "using better input encoding" could be better motivated.
Section 6
The alleged superiority of representations with non-terminal nodes is not entirely convincing. Although not choosing a head for some constructions can be seen as more elegant, it is possible to use co-head labels in bilexical dependencies to capture similar information.