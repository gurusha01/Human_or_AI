This paper proposes a novel approach to creating a convenient language interface for performing complex actions, such as analyzing data, manipulating text, and querying databases. The authors introduce a system called Voxelurn, which allows users to interactively naturalize a core programming language by defining alternative syntax and increasingly complex concepts in terms of compositions of simpler ones.
The paper's strengths include its well-written and clear presentation, extensive experiments, and good results. The authors demonstrate the effectiveness of their approach through a user study, where 70 users built 230 complex voxel structures using the system. The results show that the community of users was able to naturalize the language, with 64.3% of all accepted utterances being induced by the end of the experiment.
However, the paper also has some weaknesses. One of the main limitations is that the approach is not groundbreaking, and the authors are essentially applying existing technologies to a new domain. Additionally, the code is not available, which makes it difficult to replicate the results. The authors also do not provide a clear comparison to existing work in the field, which makes it hard to evaluate the significance of their contributions.
The main contributions of this work are:
1. The introduction of a novel approach to creating a language interface for complex actions.
2. The development of a system called Voxelurn, which allows users to interactively naturalize a core programming language.
3. The demonstration of the effectiveness of the approach through a user study.
The authors claim that their approach can be applied to other settings, such as answering questions about semi-structured data, parsing to regular expressions, or following robot instructions. However, it is not clear how the approach would be adapted to these domains, and more work is needed to demonstrate its generalizability.
Some questions to the authors include:
* How do the authors plan to address the issue of scalability, as the number of users and definitions increases?
* How do the authors plan to evaluate the effectiveness of their approach in other domains, such as natural language processing or robotics?
* How do the authors plan to make the code available, and what are the plans for future development and maintenance of the system?
Overall, the paper presents a interesting approach to creating a language interface for complex actions, and the results are promising. However, more work is needed to demonstrate the significance and generalizability of the contributions. 
I appreciate the authors' response to my comments and their promise to publish the code, which has increased my overall score to 4. However, I still have some concerns about the paper's weaknesses, and I hope the authors will address them in their future work.