Summary of the Paper:
The paper proposes a novel unsupervised graph-based algorithm, called PositionRank, for keyphrase extraction from scholarly documents. PositionRank incorporates both the position of words and their frequency in a document into a biased PageRank. The algorithm is evaluated on three datasets of research papers and achieves significant improvements over strong baselines, with relative improvements in performance as high as 29.09%.
Main Contributions:
1. PositionRank Algorithm: The paper proposes a novel unsupervised graph-based algorithm that incorporates both the position of words and their frequency in a document into a biased PageRank.
2. Improved Performance: The algorithm achieves significant improvements over strong baselines, with relative improvements in performance as high as 29.09%.
3. Novel Use of Position Information: The paper shows that modeling the entire distribution of positions for a word outperforms models that use only the first position.
Strengths:
1. Effective Use of Position Information: The paper demonstrates the effectiveness of using position information in unsupervised keyphrase extraction.
2. Simple and Efficient Algorithm: The PositionRank algorithm is simple and efficient, making it suitable for large-scale applications.
3. State-of-the-Art Performance: The algorithm achieves state-of-the-art performance on three datasets of research papers.
Weaknesses:
1. Limited Evaluation: The paper only evaluates the algorithm on three datasets of research papers, and it would be beneficial to evaluate it on other types of documents.
2. Lack of Comparison to Supervised Methods: The paper only compares the algorithm to unsupervised methods, and it would be beneficial to compare it to supervised methods as well.
3. No Analysis of Parameter Sensitivity: The paper does not provide a thorough analysis of the sensitivity of the algorithm's parameters, which could be beneficial for understanding the algorithm's behavior.
Questions to Authors:
1. How does the algorithm perform on other types of documents, such as web pages and emails?
2. How does the algorithm compare to supervised methods for keyphrase extraction?
3. Can you provide a more thorough analysis of the sensitivity of the algorithm's parameters?