This paper proposes a type-based approach, named SynTime, to recognize time expressions from free text. The authors analyze time expressions from four datasets and make four observations: time expressions are short, use a small vocabulary, contain at least one time token, and demonstrate similar syntactic behavior. Based on these observations, SynTime defines syntactic types for tokens and designs simple heuristic rules to recognize time expressions.
The main contributions of this work are:
1. The analysis of time expressions from four datasets, which provides evidence for the principle of least effort in language usage.
2. The proposal of a type-based time expression tagger, SynTime, which defines syntactic types for tokens and designs simple heuristic rules for time expression recognition.
3. The evaluation of SynTime on three datasets, which shows that it outperforms state-of-the-art baselines, including rule-based and machine learning-based time taggers.
The strengths of this paper are:
1. The thorough analysis of time expressions, which provides a solid foundation for the proposed approach.
2. The simplicity and effectiveness of SynTime, which achieves high performance on three datasets.
3. The comparison with state-of-the-art baselines, which demonstrates the superiority of SynTime.
The weaknesses of this paper are:
1. The assumption that words are tokenized and POS tagged correctly, which may not always be the case in reality.
2. The limited evaluation on only three datasets, which may not be representative of all types of text.
3. The lack of discussion on the potential applications of SynTime, which could be explored in future work.
Questions to authors:
1. How do you plan to address the issue of incorrect tokenization and POS tagging, which may affect the performance of SynTime?
2. Can you provide more details on the expansion of SynTime to other languages and parts of language, which is mentioned as future work?
3. How do you think SynTime can be applied in real-world applications, such as information retrieval and natural language processing tasks?