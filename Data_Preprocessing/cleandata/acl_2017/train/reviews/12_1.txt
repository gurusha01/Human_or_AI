This paper describes a rule based approach to time expression extraction. Its
key insights are time expressions typically are short and contain at least 1
time token. It first recognizes the time token through a combination of
dictionary lookup, regular expression match with POS tagging information. It
then expands the time segment from either direction of the time token until it
reaches based on a set of heuristic rules. Finally, it merges the time segments
into a single time expression based on another set of rules. Evaluation of this
approach with both rule based & ML based systems on 3 data sets show
significant improvements.
- Strengths:
It's well written and clearly presented. The rules are motivated by empirical
observations of the data, and seems to be well justified as evidenced by the
evaluation. 
- Weaknesses:
 There are some underspecification in the paper that makes it difficult to
reproduce the results. See below for details.
- General Discussion:
* Section 4.1: what are there 5 seasons? What about things such as Ramadan
month or Holiday Season?
* Section 5.1: "two benchmark datasets" => "three datasets"?
* Section 5.2: an example without time token will be helpful.
* Section 5.2: given this approach is close to the ceiling of performance since
93% expressions contain time token, and the system has achieved 92% recall, how
do you plan to improve further?
* Is there any plan to release the full set of rules/software used?