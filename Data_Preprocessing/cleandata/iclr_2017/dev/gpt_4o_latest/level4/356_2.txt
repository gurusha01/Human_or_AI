This paper addresses the program synthesis problem: given a set of input/output pairs, identify the program that produced them. The authors introduce a bipartite model consisting of two components: a generative model for tree-structured programs and an input/output pair encoder for conditioning. They explore several variations of this foundational model applied to a FlashFill DSL. The experiments are conducted on a practical dataset and yield promising results. The diversity of models examined, clarity of presentation, and sound experimental design make this paper a meaningful contribution to an important research area. While I have a few questions that could enhance the paper, I believe it is suitable for acceptance in its current form.
Questions/Comments:
- The dataset is well-chosen due to its simplicity and clarity. Could the authors elaborate on the impact of the "rule-based strategy" for generating well-formed input strings?
- Could you clarify the term "backtracking search"? Is it equivalent to attempting to generate the latent function?
- Instead of describing accuracy trends as the sample size increases, it might be more concise to report the log-probability of the latent function. Would it be possible to include this metric, or did I overlook it in the paper?