This paper tackles the challenge of decoding barcode-like markers from images. The core idea is to train a CNN using synthetic data generated by a GAN. The GAN itself is trained on unlabeled images and incorporates a "3D model" that undergoes learned image transformations (e.g., blur, lighting, background changes). The transformation parameters are optimized to confuse the GAN discriminator. A CNN is then trained on the GAN-generated images and compared against two baselines: one using hand-crafted features and another trained on real images. The proposed approach achieves better performance than both baselines in decoding barcode markers.
The proposed GAN architecture has potential merit. However, I am hesitant to strongly endorse the paper due to limitations in the evaluation.
A key missing baseline is a comparison against a standard GAN. Without this, it is difficult to assess the advantages of the more structured GAN proposed in the paper. Additionally, it would be valuable to evaluate the performance when combining generated and real images for the final task.
Two references relevant to this work, particularly for object detection using rendered views of 3D shapes, are:
[A] Xingchao Peng, Baochen Sun, Karim Ali, Kate Saenko, Learning Deep Object Detectors from 3D Models; ICCV, 2015.
[B] Deep Exemplar 2D-3D Detection by Adapting from Real to Rendered Views. Francisco Massa, Bryan C. Russell, Mathieu Aubry. CVPR 2016.
The problem domain (decoding barcode markers on bees) is quite narrow. It would be interesting to see the method applied to a broader domain, such as object detection from 3D models as explored in reference [A], where direct comparisons to prior work could be made.
The writing is somewhat unclear in places. For example, the introduction does not clearly articulate the paper's main contributions on an initial read.
Minor comments:
- Fig 3: Are these truly renders from a 3D model? The images appear to be 2D images spatially warped via a homography.
- Page 3: Replace "chapter" with "section."
- Table 2: What loss function is used for the DCNN?
- Fig 9 (a): The last four images exhibit unusual artifacts. Could you clarify the cause of these?