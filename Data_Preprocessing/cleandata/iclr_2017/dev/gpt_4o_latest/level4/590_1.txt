SYNOPSIS: This paper introduces a novel neural network-based model for reading comprehension, which involves reading a passage and answering questions based on it. The proposed approach aligns conceptually with several recent models, but its key distinction lies in its ability to predict answers of varying lengths, rather than being restricted to single words, tokens, or entities. The authors evaluate their model on the Stanford Question Answering Dataset (SQuAD) and demonstrate improvements over baseline methods, although the model appears to fall significantly short of the current state-of-the-art performance reported on the SQuAD leaderboard.
THOUGHTS: The primary innovation of the proposed method is its capability to identify answer phrases of varying lengths. However, the two strategies employed—using a POS pattern trie tree to filter word sequences based on POS tag patterns observed in the training set, and brute-force enumeration of all phrases up to a maximum length—seem somewhat disconnected from the concept of "end-to-end learning" for extracting answer chunks. Additionally, as noted by other reviewers, linguistic features appear to play a substantial role in achieving the reported accuracy (Table 3). While it can be argued that such features are relatively straightforward to obtain using standard tagging tools, their reliance further detracts from the notion of a fully "end-to-end trained" system.
The paper is generally well-written, but certain critical sections describing the model are difficult to follow. Specifically, the explanation of the attention mechanism lacks clarity. The mechanism appears to be fairly standard in the context of sequence-to-sequence models, with no apparent architectural novelty, unlike, for example, the Gated Attentive Reader. Despite the clarification round, I remain unclear on how the attention mechanism differs from standard implementations in seq2seq models.
Lastly, while the method demonstrates improvements over the baseline reported in the original SQuAD paper, it currently ranks 12th out of 15 systems on the leaderboard.