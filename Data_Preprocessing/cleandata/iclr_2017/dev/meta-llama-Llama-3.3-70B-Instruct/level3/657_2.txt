Summary
This paper presents a novel end-to-end speech recognition system that combines a convolutional neural network (CNN) with a graph decoding approach. The system is trained to output letters directly from the speech signal, without the need for phonetic transcription or force alignment. The authors introduce an automatic segmentation criterion, called AutoSegCriterion (ASG), which is simpler and faster than the popular Connectionist Temporal Classification (CTC) criterion. The system achieves competitive results on the LibriSpeech corpus, with a word error rate (WER) of 7.2% using Mel-Frequency Cepstral Coefficients (MFCC) features.
Decision
I decide to Accept this paper, with two key reasons: (1) the paper proposes a novel and simple end-to-end speech recognition system that achieves competitive results on a benchmark dataset, and (2) the authors introduce a new automatic segmentation criterion that is faster and as accurate as the popular CTC criterion.
Supporting Arguments
The paper is well-motivated, and the authors provide a clear overview of the existing speech recognition systems and their limitations. The proposed system is simple and efficient, with a CNN-based acoustic model and a graph decoding approach. The ASG criterion is a significant contribution, as it simplifies the decoding process and reduces the computational complexity. The experimental results demonstrate the effectiveness of the proposed system, with competitive WERs on the LibriSpeech corpus.
Additional Feedback
To further improve the paper, I suggest that the authors provide more details on the implementation of the ASG criterion and the beam-search decoder. Additionally, it would be interesting to see more experiments on the robustness of the system to different types of noise and acoustic conditions. The authors may also consider comparing their system with other state-of-the-art speech recognition systems, such as those using recurrent neural networks (RNNs) or attention-based models.
Questions for the Authors
I would like to ask the authors to clarify the following points: (1) How does the ASG criterion handle out-of-vocabulary words or unseen letters in the training data? (2) Can the authors provide more details on the computational complexity of the ASG criterion compared to the CTC criterion? (3) How does the system perform on other benchmark datasets, such as TIMIT or WSJ?