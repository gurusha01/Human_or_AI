This paper proposes a novel approach to program synthesis, called Neuro-Symbolic Program Synthesis (NSPS), which combines the strengths of neural networks and symbolic programming to generate programs from input-output examples. The approach uses a Recursive-Reverse-Recursive Neural Network (R3NN) to encode and expand partial program trees into full program trees. The paper demonstrates the effectiveness of NSPS on a domain-specific language (DSL) for string transformations, achieving impressive results on a practical dataset.
I decide to Accept this paper, with the main reason being that the approach is well-motivated and well-placed in the literature. The paper provides a clear and concise overview of the problem of program synthesis, and the proposed approach is a significant improvement over existing methods. The use of a R3NN to encode and expand partial program trees is a novel and effective way to generate programs from input-output examples.
The paper supports its claims with extensive experiments on a practical dataset, demonstrating the effectiveness of NSPS in generating programs that are consistent with the input-output examples. The results show that NSPS is able to construct programs for known tasks from new input-output examples, as well as construct completely new programs that it had not observed during training.
To improve the paper, I suggest that the authors provide more details on the "rule-based strategy" used to compute well-formed input strings, and clarify the concept of "backtracking search" and its relation to generating the latent function. Additionally, the authors could report the log-probability of the latent function to summarize the accuracy as the sample size increases.
I would like the authors to answer the following questions to clarify my understanding of the paper: (1) Can you provide more details on the "rule-based strategy" used to compute well-formed input strings? (2) How does the "backtracking search" relate to generating the latent function? (3) Can you provide more results on the log-probability of the latent function as the sample size increases? 
Overall, the paper is well-written, and the approach is a significant contribution to the field of program synthesis. With some minor revisions to address the above questions and suggestions, the paper is ready for publication.