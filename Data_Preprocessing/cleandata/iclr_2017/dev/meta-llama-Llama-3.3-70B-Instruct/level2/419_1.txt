The paper proposes a novel language model, TopicRNN, which combines the strengths of recurrent neural networks (RNNs) and latent topic models to capture both local and global dependencies in language. The authors claim that their model outperforms existing contextual RNN baselines on word prediction tasks and achieves competitive results on sentiment analysis.
I decide to accept this paper with the following key reasons: 
1. The paper tackles a specific and well-defined problem in language modeling, which is capturing long-range semantic dependencies.
2. The approach is well-motivated and grounded in the literature, with a clear explanation of how the proposed model addresses the limitations of existing models.
The supporting arguments for this decision are as follows:
- The paper provides a thorough review of the background and related work, demonstrating a good understanding of the field.
- The proposed model, TopicRNN, is well-designed and intuitive, with a clear separation of local and global dependencies.
- The experimental results are promising, with the model achieving competitive perplexity scores on the Penn TreeBank dataset and a good error rate on the IMDB sentiment analysis task.
- The paper also provides additional results, such as generated text and topic visualizations, which demonstrate the model's ability to capture meaningful semantic information.
To further improve the paper, I would suggest the following:
- Provide more detailed analysis of the learned topics and their relationship to the input text.
- Consider adding more baseline models or comparison to other state-of-the-art language models.
- Clarify the computational cost and training time of the model, especially for larger datasets.
- Provide more discussion on the potential applications and limitations of the proposed model.
Some questions I would like the authors to answer to clarify my understanding of the paper are:
- How do the authors plan to handle out-of-vocabulary words or rare words in the input text?
- Can the authors provide more insight into the choice of hyperparameters, such as the number of topics and the size of the inference network?
- How does the model perform on other downstream tasks, such as language translation or question answering?