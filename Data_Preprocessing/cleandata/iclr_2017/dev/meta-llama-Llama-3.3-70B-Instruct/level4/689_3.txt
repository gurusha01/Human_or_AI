This paper presents a compelling application of generative models to tackle the classification problem with missing data, leveraging tensorial mixture models that account for dependent samples, a notable extension of existing mixture models that typically assume independent samples. The proposed TMM model reduces to conventional latent variable models, demonstrating its potential. However, despite the intriguing ideas, the presentation is marred by sloppiness, including missing notations and flaws in technical derivations.
At a high level, my concerns are:
(1) The joint density over all samples is modeled using a tensorial mixture generative model, but the interpretation of the CP decomposition or HT decomposition on the prior density tensor is unclear. The authors' interpretation of TMM as a product of mixture models when samples are independent appears to be flawed, and I will elaborate on this in the detailed technical comments below.
(2) The use of convolution operators to compute an inner product, while realizable through zero padding, may compromise the invariance structure that is a key advantage of CNNs over feed-forward neural networks. However, the practical impact of this on performance is uncertain.
(3) The authors could provide more insight into the sample complexity of this method, given the model's complexity.
Due to my interest in the paper's ideas and the lack of clarity in the ICLR submission, I referred to the arXiv version for technical details. Several technical typos were noted (with reference to equations in the arXiv paper):
(1) The generative model in figure (5) is incorrect, as the product of vectors is not well-defined. Instead, a Tucker decomposition should be used, representing P(X) as a sum of multi-linear operations on the tensor P(d1, ..., dN), with each mode projected onto P(xi|di; theta{di}).
(2) The special case for diagonal Gaussian Mixture Models may contain typos, as I was unable to derive the third last equation on page 6.
(3) The claim that TMM reduces to a product of mixture models is inaccurate. The first equation on page 7 only holds when the "sum of product" operation equals the "product of sum" operation, and similarly, the second equality in equation (6) does not hold in general. Correcting this typo may improve performance on MNIST.
Overall, I appreciate the ideas presented in this paper and suggest that the authors address the technical typos if the paper is accepted.