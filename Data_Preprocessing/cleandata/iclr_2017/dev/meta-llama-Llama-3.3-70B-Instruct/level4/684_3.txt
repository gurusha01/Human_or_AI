This manuscript presents a novel framework for model-based reinforcement learning, which is evaluated on three Atari games. The approach entails training a predictive model that forecasts a sequence of rewards and probabilities of losing a life, given a context of frames and a sequence of actions. A controller is then used to sample random action sequences and select the one that balances the probabilities of earning a point and losing a life, based on predefined thresholds. The proposed system demonstrates superhuman performance on the three Atari games, both individually and in a multi-task setup.
Although the results are promising, the system's design involves several ad-hoc choices, and the paper provides limited insight into the significance of its various components.
Key concerns include:
- The combination of predicted rewards and life loss probabilities is somewhat arbitrary, as it relies on game-specific rules rather than a more principled approach, such as learning a Q-value.
- It is unclear whether the model is actually being learned and improved, and it would be beneficial to see predictions for multiple action sequences from carefully chosen start states, both for games where the approach succeeds and fails. Additionally, plotting the training loss on a fixed holdout set of sequences could help measure the learning progress.
- The importance of the proposed RRNN architecture is also uncertain, and it would be useful to investigate whether the approach would still be effective without residual connections or using a standard LSTM instead.
Minor issues include:
- The introduction could be improved by acknowledging earlier work on using models in reinforcement learning, such as Dyna and "Memory approaches to reinforcement learning in non-Markovian domains" by Lin and Mitchell.
- In Section 3.1, the notation for observations and actions could be clarified, using oi for observations and ai for actions.
- In Section 3.2.2, the notation for rewards is inconsistent, and it would be better to use a distinct symbol to avoid confusion.
- Observation 1 appears somewhat out of place and could be removed, as citing the layer normalization paper is sufficient motivation.
- In Section 3.2.2, the claim that memory is decoupled from computation is unclear, as the architecture appears to be an RNN with skip connections, rather than a model with an external memory like neural Turing machines.
- In Section 3.3, the discussion of overfitting could be improved by acknowledging that it depends on the data, and that the approach may not work with demonstrations due to overfitting.
- Figure 4 contains an incorrect reference for Batch Normalization, which should be Ioffe and Szegedy instead of Morimoto et al.
Overall, the paper presents promising ideas and encouraging results, but would benefit from additional exploratory and ablation experiments, as well as further refinement to address the concerns and minor issues mentioned above.