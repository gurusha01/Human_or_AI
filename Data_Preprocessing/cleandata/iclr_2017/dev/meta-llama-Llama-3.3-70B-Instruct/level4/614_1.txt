This paper proposes a temporal recommender system that utilizes point processes with time-dependent user and item latent representations, which evolve through coupled autoregressive processes. These processes, referred to as coevolution, update the user or item representation upon interaction, incorporating both user and item representations prior to time t. The model also accommodates heterogeneous inputs and is evaluated against various baselines on multiple datasets.
The paper contributes to the field in several key areas: 
1. It models recommendations using parametrized point processes, where the dynamics of the parameters are governed by latent user and item representations.
2. An optimization algorithm is introduced for maximizing the likelihood of this process, incorporating several technical strategies to mitigate its inherent complexity.
3. The paper conducts evaluation experiments focused on time-dependent recommendations.
However, the work bears a strong resemblance to a previous paper by the same authors (NIPS 2016), which described a similar model of continuous-time coevolution and a comparable evaluation methodology. The primary differences lie in the specifics of the model, including the point process and the latent factor dynamic model, but the overall approach and arguments remain largely unchanged. This raises questions about what specific aspects of the new model contribute to its potential performance improvements over the previous version, such as the choice of process or the new parametrization. Unfortunately, the paper lacks justification for the selection of the point process form and does not explore alternative forms. Similarly, the choice of non-linearity (sigmoid function) for modeling latent user/item vectors seems limited and its impact on the model's performance is not adequately discussed.
The evaluation methodology introduces two criteria but lacks clarity, particularly regarding how item recommendations are assessed at each time t. It is unclear whether the model predicts the next item a user will interact with after time t. Furthermore, the relevance of time prediction as a metric for recommendation quality is not well-explained. A comparison of the computational complexity or execution time of the different methods would provide valuable insights. Given that the complexity of the proposed method appears to scale with the number of items and users, understanding the complexity limits of this approach is crucial.
While the paper is technically sound and presents an interesting approach, many details are omitted, and the similarity to the previous work by the authors raises concerns about its novelty. The evaluation criteria and the scalability of the model to large datasets are also not convincingly addressed. Overall, the authors need to more effectively demonstrate that this work represents a significant advancement beyond their previous contributions.