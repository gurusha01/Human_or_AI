This manuscript addresses the program synthesis problem, which involves identifying the program that produced a given set of input/output pairs. The authors propose a bipartite model consisting of a generative component for tree-structured programs and an encoding component for input/output pairs. They apply various iterations of this model to the FlashFill domain-specific language and conduct experiments on a practical dataset, yielding impressive results. The paper's thorough exploration of multiple models, clear exposition, and well-designed experimental framework make it a significant contribution to a crucial research area. While I have some queries that could further enhance the paper, I believe it is worthy of acceptance in its current form.
Questions/Comments:
- The chosen dataset is commendable due to its simplicity and ease of understanding. Could the authors elaborate on the impact of the "rule-based strategy" employed for generating well-formed input strings?
- It would be beneficial to provide a clear definition of "backtracking search." Is it equivalent to attempting to generate the latent function?
- When describing the accuracy as a function of increasing sample size, it might be more concise and informative to report the log-probability of the latent function. Would it be worthwhile to include this information, or is there something I have overlooked?