The paper presents dropout through the lens of a latent variable model, where the dropout variable (indicating whether units are dropped, with values of 0 or 1) is unobserved and subsequently marginalised. While maximum likelihood estimation under this model is intractable, standard dropout is shown to correspond to a straightforward Monte Carlo approximation of maximum likelihood for this latent variable model.
The authors then propose a theoretical framework to analyse the discrepancy—termed the inference gap—between the model used during training (a model ensemble, or in this case, the latent variable model) and the model used during testing (where an expectation over activations across multiple models is approximated by the activation of a single model with averaged weights). This framework introduces several key concepts, such as expectation linearity, which facilitate the examination of which transition functions (or, more broadly, layers) are capable of yielding a small inference gap. Notably, Theorem 3 provides a bound on this inference gap.
Additionally, the paper introduces a novel regularisation term designed to minimise the inference gap during the training process.
Experiments conducted on MNIST, CIFAR-10, and CIFAR-100 demonstrate that the proposed method has the potential to outperform standard dropout and achieve performance comparable to Monte Carlo Dropout. The latter is the standard approach for computing dropout outputs in a manner consistent with the training assumption of an ensemble, albeit at a significantly higher computational cost.
Overall, the study offers a compelling theoretical model for dropout as a latent variable model, framing standard dropout as a Monte Carlo approximation. This perspective is likely to have broad applicability in future research on dropout.
The framework for analysing the inference gap is intriguing, though it may have somewhat narrower applicability.
The proposed model is persuasive, but it is worth noting that: 1) the experiments are limited to relatively simple datasets, 2) the performance improvements are modest, and 3) the training process incurs additional computational overhead due to the introduction of a new hyperparameter.
Typo: Page 6, line 8 – "expecatation" should be corrected to "expectation."