This paper introduces the use of RNNs combined with reinforcement learning to address combinatorial optimization problems. The integration of a pointer network is particularly noteworthy, as it facilitates generalization to inputs of varying sizes. Additionally, the method employs "fine-tuning" on test instances through active search, leading to improved performance.
The approach is theoretically compelling, demonstrating that RNNs and RL can be effectively combined to tackle combinatorial optimization tasks, achieving performance on par with traditional heuristic-based methods.
Nonetheless, the absence of a complexity comparison with baseline methods makes it difficult to assess the practical utility of the proposed approach. This issue is further exacerbated by the discrepancy in hardware usage: the proposed method is evaluated on GPUs, whereas the baselines are run on CPUs, complicating the establishment of a meaningful complexity metric. One potential alternative could be to compare the monetary cost of hardware and energy consumption per instance.
Moreover, the reported performance comparisons should be interpreted cautiously, as traditional heuristic-based algorithms can often yield superior results when granted additional computational resourcesâ€”a factor that is not standardized across the evaluated methods.