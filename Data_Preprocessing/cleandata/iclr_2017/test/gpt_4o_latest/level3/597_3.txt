Review of the Paper
Summary of Contributions
This paper proposes a novel framework, Neural Combinatorial Optimization, that leverages recurrent neural networks (RNNs) and reinforcement learning (RL) to solve combinatorial optimization problems, with a primary focus on the Traveling Salesman Problem (TSP). The use of pointer networks enables the model to generalize to input sizes beyond those seen during training. The framework also introduces an innovative "active search" mechanism, which fine-tunes the model on test instances to improve performance. The results demonstrate that the proposed approach achieves near-optimal solutions on 2D Euclidean TSP instances with up to 100 nodes and extends its applicability to other NP-hard problems like the Knapsack problem. While the method does not yet outperform state-of-the-art solvers, it offers a promising direction for using neural networks as general-purpose tools for optimization tasks.
Decision: Reject
While the paper presents an interesting and theoretically valuable approach, it falls short in providing sufficient empirical rigor and practical relevance. The lack of meaningful complexity comparisons with baseline methods and questionable performance evaluations undermine its contributions. Below, I elaborate on the reasons for this decision and provide suggestions for improvement.
Supporting Arguments for Rejection
1. Lack of Complexity Analysis: The paper does not adequately compare the computational complexity of the proposed method against traditional heuristic algorithms. The use of GPUs for the neural network-based approach versus CPUs for baselines complicates the evaluation of practical efficiency. Without a standardized computational budget, the claims of performance superiority are difficult to validate.
2. Unclear Performance Comparisons: The performance comparisons are problematic, as traditional heuristics like Concorde and Lin-Kernighan-Helsgaun (LK-H) could potentially outperform the proposed method with additional computation time. The paper does not standardize the computational resources allocated to each method, making the reported results less reliable.
3. Limited Practical Value: While the method demonstrates theoretical promise, its practical utility is limited by its inability to scale efficiently to larger problem instances or outperform state-of-the-art solvers in terms of speed, accuracy, or scalability.
Suggestions for Improvement
1. Complexity Benchmarking: Provide a detailed analysis of the computational complexity of the proposed method, including runtime comparisons under standardized hardware and computational budgets. This will help establish the practical feasibility of the approach.
2. Fair Performance Comparisons: Ensure that all baseline methods are given equivalent computational resources and time for a fair comparison. For example, evaluate the performance of traditional heuristics with extended computation time and compare their results to the proposed method.
3. Scalability Analysis: Extend the experiments to larger problem instances (e.g., TSP with >100 nodes) to demonstrate the scalability of the approach. Highlight any limitations and discuss potential solutions.
4. Broader Applicability: While the paper briefly discusses the application of the framework to the Knapsack problem, additional experiments on diverse combinatorial optimization problems would strengthen the claim of generalizability.
5. Ablation Studies: Conduct ablation studies to isolate the contributions of key components, such as pointer networks and active search, to the overall performance.
Questions for the Authors
1. How does the proposed method compare in terms of runtime and memory usage against traditional heuristics like Concorde or LK-H when run on equivalent hardware?
2. Could you provide more details on the choice of hyperparameters, particularly for the active search mechanism? How sensitive is the method to these hyperparameters?
3. Have you considered incorporating hybrid approaches that combine neural networks with traditional heuristics to improve scalability and performance?
Final Remarks
The paper introduces an innovative and theoretically interesting approach to combinatorial optimization. However, the lack of empirical rigor and practical benchmarks limits its impact. Addressing the above concerns would significantly strengthen the paper and make it a more compelling contribution to the field.