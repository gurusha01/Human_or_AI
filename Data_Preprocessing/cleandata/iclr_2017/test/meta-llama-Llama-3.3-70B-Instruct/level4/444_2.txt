This study presents a method for extracting patterns to comprehend the knowledge acquired by a trained LSTM and to develop a hand-coded algorithm that mimics the LSTM's performance. Although promising results are demonstrated on a single dataset with one model architecture, the generalizability of this approach remains uncertain. Nonetheless, it appears to be a valuable tool for understanding and debugging models.
The WikiMovies dataset, which seems to feature template-generated questions, may be well-suited for this pattern matching approach. However, it is unclear whether this method can be applied to other question-answering tasks that involve free-form text answers not present as substrings in the document. Additionally, it is uncertain whether the model is required to produce a continuous span over the original document.
The approach appears to have limitations in handling specific word types, such as numbers and entity names, which can be encoded in word embeddings. The algorithm's description suggests that an entity detector is required, implying that the approach may be unable to identify entities through the decomposition of the LSTM's output. The results of the manual pattern matching experiment, which utilized explicit year annotations, indicate that the automatic method struggles with word types.
The inclusion of an attention model as a baseline, in addition to the gradient-based baseline, would be beneficial. 
Some minor issues were noted: 
- The variables P and Q are not defined.
- Several references appear to be incorrect, such as the citation "in 1" instead of "in table 1" in section 5.1, and similar errors above section 7 and in section 7.1.
- A minor typo was found in the paragraph preceding section 6.3, where "adam" should be capitalized as "Adam".