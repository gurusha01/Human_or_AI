Summary
The paper proposes a novel algorithm for training stochastic neural networks to draw samples from given target distributions for probabilistic inference. The method, called SteinGAN, is based on iteratively adjusting the neural network parameters to make its output change along a Stein variational gradient direction that optimally decreases the KL divergence with the target distribution. The authors demonstrate the effectiveness of SteinGAN in generating realistic-looking images competitive with state-of-the-art results.
Decision
I decide to Reject this paper, with two key reasons: (1) the proposed theory has limited applicability, as it can only be applied to square loss settings with linear update rules, and (2) the resulting technique requires additional computation due to the need for book-keeping of a dimensional reduced combiner matrix, potentially increasing complexity.
Supporting Arguments
The paper presents an interesting technique for combining updates from multiple SGD, but the limited applicability of the proposed theory restricts its use to specific scenarios. Furthermore, the additional computation required for book-keeping may increase the complexity of the method, which could be a significant drawback in practice. While the authors demonstrate the effectiveness of SteinGAN in generating realistic-looking images, the practical value of the work is limited by these constraints.
Additional Feedback
To improve the paper, the authors could consider extending the proposed theory to more general settings, such as non-linear objective functions, and exploring ways to reduce the computational complexity of the method. Additionally, the authors could provide more detailed analysis of the trade-offs between the accuracy of the generated images and the computational cost of the method.
Questions for the Authors
To clarify my understanding of the paper, I would like the authors to answer the following questions:
1. Can you provide more details on how the proposed theory can be extended to non-linear objective functions?
2. How do you plan to address the increased computational complexity of the method in practice?
3. Can you provide more analysis on the trade-offs between the accuracy of the generated images and the computational cost of the method?