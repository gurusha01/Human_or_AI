The paper claims to contribute a novel algorithm for approximating the solution to the Hamilton-Jacobi-Isaacs partial differential equation (HJI PDE) using a neural network. The algorithm utilizes the neural network as both a function approximator and a data generator, allowing it to learn from self-generated data and improve its approximation over time.
I decide to accept this paper with two key reasons: (1) the approach is well-motivated and placed in the literature, and (2) the paper provides sufficient empirical evidence to support its claims.
The approach is well-motivated as it addresses a significant problem in control theory and robotics, where the HJI PDE is used to analyze safety-critical systems. The authors provide a clear explanation of the problem and its importance, and they demonstrate a good understanding of the existing literature. The use of a neural network as both a function approximator and a data generator is a novel and interesting approach that has the potential to improve the accuracy of the approximation.
The paper provides sufficient empirical evidence to support its claims through a series of experiments on different dynamical systems. The results show that the algorithm is able to learn accurate approximations of the HJI PDE solution, and the authors provide a thorough analysis of the results, including visualizations of the approximations and comparisons to existing methods.
To improve the paper, I suggest that the authors provide more details on the implementation of the algorithm, such as the specific neural network architecture used and the hyperparameters chosen. Additionally, it would be helpful to include more theoretical analysis of the algorithm, such as convergence guarantees and bounds on the approximation error.
I would like to ask the authors to clarify the following points: (1) How did they choose the specific neural network architecture and hyperparameters used in the experiments? (2) Can they provide more details on the computational resources used to run the experiments, such as the type of machine and the number of threads used? (3) How do they plan to extend this work to higher-dimensional systems, and what are the potential challenges and limitations of the approach?