Summary
The paper proposes an online structure learning technique for continuous Sum-Product Networks (SPNs) with Gaussian leaves. SPNs are a type of deep neural network that can be interpreted as a probabilistic graphical model, allowing for efficient inference and learning. The proposed technique, called online Structure Learning with Running Average Update (oSLRAU), learns the structure of the SPN by detecting correlations between variables and updating the network structure accordingly. The algorithm is evaluated on several benchmark datasets and is shown to outperform other state-of-the-art methods.
Decision
I decide to Accept this paper with minor revisions.
Reasons
The paper tackles a specific and important problem in the field of machine learning, namely online structure learning for continuous SPNs. The approach is well-motivated and placed in the context of existing literature. The paper provides a clear and detailed description of the proposed algorithm, including pseudocode and theoretical justifications. The experimental results demonstrate the effectiveness of the proposed method, and the paper provides a thorough analysis of the results.
Supporting Arguments
The paper provides a clear and concise introduction to SPNs and their properties, making it easy to follow for readers who are not familiar with the topic. The proposed algorithm is well-described, and the pseudocode provides a clear understanding of the implementation details. The experimental results are thorough and well-analyzed, providing a clear picture of the performance of the proposed method. The paper also provides a detailed discussion of the limitations and potential extensions of the proposed method.
Additional Feedback
To improve the paper, I suggest the following minor revisions:
* Provide more details on the computational complexity of the proposed algorithm, including the time and space complexity.
* Consider adding more visualizations of the learned SPN structures to help illustrate the results.
* Provide more discussion on the potential applications of the proposed method, including potential use cases and domains where it could be applied.
Questions for the Authors
To clarify my understanding of the paper, I would like the authors to answer the following questions:
* Can you provide more details on how the correlation threshold is chosen, and how it affects the performance of the algorithm?
* How does the proposed method handle missing data or outliers in the input data?
* Are there any plans to extend the proposed method to handle discrete variables or other types of data distributions?