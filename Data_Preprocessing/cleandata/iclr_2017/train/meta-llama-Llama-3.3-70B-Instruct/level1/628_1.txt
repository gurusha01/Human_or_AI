Summary
The paper proposes submodular sum-product networks (SSPNs), a novel extension of sum-product networks that can be understood as an instantiation of an image grammar in which all possible parses of an image over arbitrary shapes are represented. The authors introduce an efficient inference algorithm, INFERSSPN, which exploits submodularity to find the approximate MAP state of an SSPN. The paper demonstrates the effectiveness of SSPNs and INFERSSPN through experiments on image parsing tasks, showing that they achieve comparable accuracies and energies to α-expansion while taking exponentially less time.
Decision
I decide to Accept this paper, with the main reason being that the approach is well-motivated and supported by thorough theoretical analysis and empirical evaluations. The paper tackles a specific and important problem in the field of computer vision, and the proposed solution is novel and effective.
Supporting Arguments
The paper provides a clear and concise introduction to the problem of image parsing and the limitations of existing approaches. The authors motivate the use of SSPNs and INFERSSPN, and provide a thorough theoretical analysis of the algorithm's convergence and time complexity. The experimental evaluations demonstrate the effectiveness of SSPNs and INFERSSPN on image parsing tasks, and the results are compared to those of α-expansion and belief propagation. The paper also provides a detailed analysis of the results and discusses the implications of the findings.
Additional Feedback
To further improve the paper, I suggest that the authors provide more details on the implementation of INFERSSPN, including the specific graph cut algorithm used and the parameters tuned for the experiments. Additionally, it would be helpful to include more visualizations of the parsing results to illustrate the effectiveness of SSPNs and INFERSSPN. Finally, the authors may want to consider discussing potential applications of SSPNs and INFERSSPN to other domains, such as activity recognition or social network modeling.
Questions for the Authors
1. Can you provide more details on the specific graph cut algorithm used in INFERSSPN, and how it is implemented?
2. How do you tune the parameters of INFERSSPN for the experiments, and what is the sensitivity of the results to these parameters?
3. Can you provide more visualizations of the parsing results to illustrate the effectiveness of SSPNs and INFERSSPN?
4. What are the potential applications of SSPNs and INFERSSPN to other domains, and how do you plan to explore these in future work?