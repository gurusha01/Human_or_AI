Summary of the Paper
The paper proposes a novel pedestrian detection method based on the Fast R-CNN framework, which utilizes batch normalization to reduce training time and improve generalization performance. The EdgeBoxes algorithm is used to generate high-quality region proposals, improving detection speed and accuracy. The method is evaluated on two benchmark datasets, INRIA and ETH, and achieves satisfactory performance comparable to state-of-the-art methods.
Decision
I decide to Accept this paper, with two key reasons: (1) the approach is well-motivated and placed in the literature, and (2) the paper supports its claims with empirical results on two benchmark datasets.
Supporting Arguments
The paper provides a clear and concise introduction to the problem of pedestrian detection, highlighting the limitations of traditional methods and the potential of deep learning approaches. The proposed method is well-motivated, building on the success of Fast R-CNN and batch normalization. The use of EdgeBoxes for region proposal generation is also a good choice, given its speed and accuracy. The empirical results on INRIA and ETH datasets demonstrate the effectiveness of the proposed method, with competitive performance compared to state-of-the-art methods.
Additional Feedback
To further improve the paper, I suggest the authors provide more analysis on the impact of batch normalization on the training time and generalization performance. Additionally, it would be interesting to see more visualizations of the detection results, such as examples of true positives, false positives, and false negatives. The authors may also consider discussing the potential applications of their method in real-world scenarios, such as autonomous vehicles or surveillance systems.
Questions for the Authors
To clarify my understanding of the paper, I would like the authors to answer the following questions:
1. Can you provide more details on the hyperparameter tuning process for the batch normalization layer?
2. How do you handle cases where the EdgeBoxes algorithm generates low-quality region proposals?
3. Have you considered using other region proposal generation methods, such as Selective Search, and if so, why did you choose EdgeBoxes?