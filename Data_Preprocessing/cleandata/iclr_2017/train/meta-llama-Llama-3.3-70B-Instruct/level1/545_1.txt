Summary
The paper proposes Compositional Kernel Machines (CKMs), a novel instance-based method for object recognition that addresses the limitations of deep architectures and other kernel methods. CKMs use a sum-product function to represent a discriminant function, allowing for tractable summation over an exponential set of virtual instances. This approach mitigates the curse of dimensionality and improves sample complexity. The authors demonstrate the effectiveness of CKMs on several image classification scenarios, including the NORB dataset, and show that CKMs can outperform deep methods and other kernel methods in certain situations.
Decision
I decide to Accept this paper, with the main reason being that the approach is well-motivated and well-placed in the literature. The authors provide a clear and concise explanation of the limitations of current deep architectures and kernel methods, and propose a novel solution that addresses these limitations.
Supporting Arguments
The paper supports its claims through a series of experiments on the NORB dataset, demonstrating the effectiveness of CKMs in various image classification scenarios. The authors also provide a thorough analysis of the computational properties of CKMs, showing that they can be computed efficiently using ideas from sum-product networks. Additionally, the paper provides a clear and concise explanation of the theoretical foundations of CKMs, making it easy to follow and understand.
Additional Feedback
To further improve the paper, I suggest that the authors provide more details on the implementation of CKMs, including the specific architectures and hyperparameters used in the experiments. Additionally, it would be helpful to see more comparisons with other state-of-the-art methods, including other kernel methods and deep architectures. Finally, I would like to see more discussion on the potential applications of CKMs, including their potential use in other domains such as natural language processing or speech recognition.
Questions for the Authors
I have several questions for the authors to help clarify my understanding of the paper:
1. Can you provide more details on the specific architectures and hyperparameters used in the experiments?
2. How do CKMs compare to other kernel methods, such as support vector machines (SVMs) and Gaussian processes (GPs)?
3. Can you provide more discussion on the potential applications of CKMs, including their potential use in other domains such as natural language processing or speech recognition?
4. How do CKMs handle high-dimensional data, and are there any limitations to their scalability?
5. Can you provide more details on the computational complexity of CKMs, including the time and space complexity of the algorithms used to compute them?