Summary
The paper introduces PALEO, an analytical performance model for scalable deep learning systems. PALEO aims to efficiently explore the design space of software, hardware, and communication strategies to accelerate the training and deployment of deep neural networks. The model decomposes the total execution time into computation time and communication time, estimating these times based on factors such as network architecture, algorithm complexity, hardware performance, and communication bandwidth. The authors demonstrate the robustness and accuracy of PALEO through various experiments, including layer-wise evaluation, case studies, and hypothetical setups.
Decision
I decide to Accept this paper, with the primary reason being the well-motivated approach and thorough evaluation of the PALEO model. The authors provide a clear and concise explanation of the model, its components, and its applications, making it easy to follow and understand. The experimental results demonstrate the effectiveness and accuracy of PALEO in modeling the performance of various deep learning systems.
Supporting Arguments
The paper tackles a specific and important problem in the field of deep learning, namely the need for efficient and scalable training and deployment of deep neural networks. The approach is well-motivated, building on existing research in parallel and distributed computing, and the authors provide a thorough review of related work. The evaluation of PALEO is comprehensive, covering various aspects such as layer-wise evaluation, case studies, and hypothetical setups. The results demonstrate the accuracy and robustness of the model, making it a valuable tool for practitioners and developers.
Additional Feedback
To further improve the paper, I suggest the authors provide more details on the limitations and potential extensions of PALEO. For example, how does PALEO handle non-deterministic asynchronous parameter servers or other communication schemes not considered in the paper? Additionally, it would be interesting to see more comparisons with other performance models or benchmarking efforts. The authors may also consider providing more insights into the computational requirements of different neural network architectures and how PALEO can be used to optimize these architectures for better performance.
Questions for the Authors
To clarify my understanding of the paper and provide additional evidence for my assessment, I would like the authors to answer the following questions:
1. Can you provide more details on the cuDNN heuristics used in PALEO to choose algorithms for convolutional operations?
2. How does PALEO account for the overhead of job scheduling, data copying, and other auxiliary operations in deep learning frameworks?
3. Can you provide more information on the platform percent of peak (PPP) parameter and how it is estimated for different deep learning frameworks and hardware configurations?