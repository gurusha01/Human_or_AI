[Summary]
This manuscript presents a novel approach to knowledge base completion, characterized by two key components: 1) the utilization of an implicit shared memory that is learned during training without assuming a predefined structure, and 2) the modeling of a multi-step search process that dynamically determines its termination point.
The experimental results on the WN18 and FB15k datasets appear promising, with the authors also conducting an analysis on a synthetic shortest path task that demonstrates the superiority of their model over traditional seq2seq models.
The paper is well-organized and easy to follow, making it a pleasure to read.
[Major comments]
I find the proposed idea intriguing and am impressed by the model's performance, which suggests its potential.
However, a major concern is that the paper lacks a thorough analysis of the model's inner workings and its sensitivity to hyperparameters, with the results primarily focusing on a single final model evaluated on WN18 and FB15k.
A crucial hyperparameter that warrants further investigation is the size of the shared memory, which is set to 64 in the experiments. It is unlikely that this fixed size is optimal for all tasks, and it may be more appropriate for the memory size to scale with the knowledge base size. I recommend verifying this hypothesis through additional experiments and exploring the possibility of implementing a dynamic memory structure.
The reinforcement learning (RL) setting, which enables a stochastic search process, is a notable aspect of the paper. To further demonstrate its effectiveness, I suggest comparing the performance of the model with and without the termination gate, as well as evaluating how the model's performance varies with the number of inference steps.
While I appreciate the effort to demonstrate the model's capabilities on the shortest path synthetic task, I believe it would be more convincing to conduct a similar analysis using real-world knowledge base entities and relations, such as those found in Freebase.
[Minor comments]
I find the illustration of the output gate in Figure 1 to be somewhat confusing, as it appears to suggest multiple outputs. However, there should only be a single output, which is determined by the termination of the search process.