The paper asserts that synchronized-SGD outperforms async-SGD when supplemented by multiple backup workers. It initially examines the issue of stale updates in async-SGD and proposes a sync-SGD approach with backup workers. The authors demonstrate the efficacy of their method through experiments involving Inception Net and PixelCNN.
Although the concept is straightforward, its practical applications in industrial settings, where adding backup workers is feasible and cost-effective, are noteworthy. However, assuming each worker has access to the full dataset and additional workers can be added within budget, the proposed solution seems almost intuitive, as the extra backup workers mitigate the problem of staggered updates. Under these conditions, achieving better performance with additional workers is expected. This raises questions about the novelty and complexity of the problem the proposed solution addresses.
In terms of experimental design, for a fair comparison, async-SGD should ideally incorporate a mechanism to discard updates that are excessively stale, similar to how the proposed method disregards updates after a certain threshold (N updates). To achieve this, one potential approach could involve measuring the average time required to obtain N updates in a sync-SGD setting and using this timeframe as a cutoff threshold for async-SGD, thereby preventing it from performing poorly due to outdated updates.