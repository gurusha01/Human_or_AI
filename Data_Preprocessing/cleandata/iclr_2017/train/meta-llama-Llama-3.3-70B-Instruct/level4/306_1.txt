This manuscript proposes a meta-learning framework based on Long Short-Term Memory (LSTM) networks to learn the optimization algorithm of another learning algorithm, specifically a neural network (NN). The paper is well-structured and clearly presents its main contributions. The core idea of establishing a connection between the Robbins-Monro update rule and the LSTM update rule to fulfill the two primary requirements of few-shot learning, namely rapid acquisition of new knowledge and slower extraction of generalizable knowledge, is particularly interesting.
The incorporation of various techniques, such as parameter sharing and normalization, inspired by previous work (Andrychowicz et al., 2016), as well as novel design choices, including a specific implementation of batch normalization, are well-justified. The experimental results are convincing, making this a strong paper. However, I have a few concerns and questions:
1. Is it necessary to use loss, gradient, and parameters as inputs to the meta-learner, or could simpler combinations be sufficient? Were ablation studies conducted to investigate this?
2. It would be beneficial to explore the possibility of learning other architectural components of the network in a similar manner, such as the number of neurons or type of units. Do the authors have any thoughts on this?
3. The related work section, which primarily focuses on meta-learning, could be more comprehensive. Meta-learning has a long history, and similar approaches have been proposed to address the same problem, even if they did not utilize LSTMs. Notable examples include Samy Bengio's PhD thesis (1989) and the use of genetic programming for searching new learning rules for neural networks (S. Bengio, Y. Bengio, and J. Cloutier, 1994). I am confident that Schmidhuber has also made relevant contributions, and I recommend updating the related work section to include these.
Overall, I find the paper engaging, and I believe the discussed material is relevant to a broad audience at ICLR.