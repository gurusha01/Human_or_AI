I reviewed the manuscript as of December 6th.
Summary:
The authors propose an extension of generative adversarial networks for steganalysis, which involves detecting concealed messages within a payload. They introduce a novel model architecture that incorporates a 'steganalyser' as an additional training objective in the GAN framework.
Major Comments:
The authors present an intriguing new approach to applying generative networks. However, I believe the paper's premise would benefit from further elaboration. The employment of the SGAN method is not clearly explained, and it is unclear why a generative model is necessary for steganalysis, which appears to be a classification problem. To better understand the results, it would be helpful to explicitly describe the intended use case. For instance, is the user sending a message without regard for the image used as the container, or does the user have an image that the network uses to generate a synthetic container for hiding the message? Alternatively, is the SGAN trained to detect hidden codes inserted by any algorithm in an image? 
Furthermore, the experimental analysis in this paper is limited, with only a few steganalysis performance metrics reported in the tables (Table 1, 2, 3). A more comprehensive analysis is warranted to explore the parameter space and provide a quantitative comparison with other methods, such as HUGO, WOW, and LSB. It would be beneficial to discuss when this method is preferred over others and why the seed affects the quality of the results. Does using a fixed seed correspond to a realistic scenario for employing this method?
Minor comments:
- The necessity of Figure 1 is questionable.
- The impact of the seed value on the predictive performance of the model is unclear, and further explanation is needed to understand why the seed affects the quality of the results.