This paper presents a novel approach to extending count-based exploration to domains where counts are not readily available, leveraging hash functions to achieve this goal. The authors conduct experiments across multiple domains, including control and Atari environments.
It is noteworthy that the authors validate the findings of Bellemare, demonstrating that count-based exploration can be effective with a suitable "density" estimator. Additionally, they observe that with the right features, it is possible to achieve some level of success in challenging games like Montezuma's Revenge.
However, I have several concerns regarding this work:
Firstly, the use of hashing does not appear to yield significant improvements over existing approaches. Without relying on "feature engineering", the authors only achieve a fraction of the performance reported in Bellemare et al. on Montezuma's Revenge. Furthermore, in control domains, the proposed approach fails to outperform VIME. As a result, it is challenging to justify the experimental results.
Secondly, while hashing may be effective in the tested domains, it may not be the most suitable method for estimating densities in more complex environments. As environments become increasingly complicated, learning-based methods may be necessary to understand the environment, rather than relying solely on hashing. The authors argue that their approach has an advantage over Bellemare et al. in that it does not require designing density estimators. However, I would counter that density estimators, such as PixelCNN, VAEs, Real NVP, and GANs, have become readily available and can be easily applied, much like hashing. Moreover, training these density estimators is no longer a significant challenge.