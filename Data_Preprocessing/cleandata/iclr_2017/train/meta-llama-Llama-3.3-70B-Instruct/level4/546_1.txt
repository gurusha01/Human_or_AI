I appreciate the unique insight provided by this paper on leveraging neural approaches to approximate physical phenomena. The proposed method aims to extrapolate a given dataset and predict formulas using naturally occurring functions such as sine, cosine, and multiplication.
The strengths of this paper include:
- The simplicity of the approach, making it easily applicable to existing methods, with a notable innovation being the incorporation of functions with two or more inputs, which is successfully demonstrated.
- The recognition that Multilayer Perceptrons (MLPs), while effective for interpolation, often fail to extrapolate data accurately to model the correct function, and the innovative use of basis functions like sine and cosine to enhance the approach's explicitness.
However, there are several areas that require attention:
- On page 8, the claim regarding the approximation of x2 cos(ax1 + b) ~ 1.21(cos(-ax1 + π + b + 0.41x2) + sin(ax1 + b + 0.41x2)) for y in [-2,2] is not entirely accurate without imposing restrictions on 'a' and 'b', as the approximate equality does not hold for all real values of these parameters. Although the claim holds true for specific values of 'a' and 'b' (e.g., a=2*pi and b=pi/4), indicating the model can predict correct solutions within certain limits.
- The experiments primarily involve up to 4 variables, and it would be enlightening to explore how the neural approach performs with hundreds of variables.
- Viewing the model through the lens of non-linearities such as sine, cosine, and multiplication acting as basis functions provides insight. If the data is a linear combination of such functions, the model should be capable of learning the weights. However, the absence of division among these non-linearities raises questions about the model's ability to predict expressions like those in Equation 13, prompting the inquiry into whether this architecture can be considered a universal approximator.
To enhance the paper, the following edit is suggested:
- Page 8 contains a potential typographical error in the expression 1.21(cos(ax1 + π + b + 0.41x2) + sin(ax1 + b + 0.41x2)), which, when compared to the predicted formula in Figure 4(b), should likely read 1.21(cos(-ax1 + π + b + 0.41x2) + sin(ax1 + b + 0.41x2)).