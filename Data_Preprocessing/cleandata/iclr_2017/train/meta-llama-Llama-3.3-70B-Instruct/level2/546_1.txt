This paper proposes a novel type of function learning network, called Equation Learner (EQL), that can learn analytical expressions and extrapolate to unseen domains. The EQL network is a multi-layered feed-forward network with computational units specifically designed for extrapolation regression tasks. The network is fully differentiable, allowing for end-to-end training using backpropagation. The authors also introduce a model selection procedure specifically designed to select for good extrapolation quality by a multi-objective criterion based on validation error and sparsity.
I decide to accept this paper with the following key reasons:
1. The paper tackles a specific and well-defined problem, namely learning analytical expressions for extrapolation in regression tasks, which is a significant challenge in machine learning.
2. The approach is well-motivated, and the authors provide a clear explanation of the architecture, its training, and its relation to prior art.
The paper supports its claims with extensive experimental evaluations on synthetic and real data, demonstrating the ability of EQL to learn physically inspired models with good extrapolation quality. The results show that EQL outperforms standard multilayer perceptrons and support vector regression in extrapolation tasks.
To further improve the paper, I suggest the authors provide more details on the optimization process and the choice of hyperparameters. Additionally, it would be helpful to include more examples of learning complex formulas and to explore the limitations of the approach in more depth.
Some questions I would like the authors to answer to clarify my understanding of the paper are:
* Can the authors provide more insight into the choice of the base functions and the multiplication units in the EQL architecture?
* How do the authors plan to address the issue of incorporating more base functions, such as divisions, into the EQL architecture?
* Can the authors provide more details on the dependence of the method on the amount of noise and the number of data points, and how this affects the extrapolation performance?