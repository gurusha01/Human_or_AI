This paper presents a novel approach to inductive program synthesis using deep learning, which is a significant contribution to the field of artificial intelligence. The authors propose a framework called Learning Inductive Program Synthesis (LIPS), which uses a neural network to predict properties of the program that generated the outputs from the inputs. The predicted properties are then used to guide search techniques from the programming languages community to find the correct program.
The paper claims to achieve an order of magnitude speedup over strong non-augmented baselines and a Recurrent Neural Network approach, and to be able to solve problems of difficulty comparable to the simplest problems on programming competition websites. The authors also demonstrate the generalization ability of their approach across programs of different lengths.
I decide to accept this paper because it presents a well-motivated and well-placed approach in the literature, and the results are correct and scientifically rigorous. The paper provides a clear and detailed description of the LIPS framework, including the choice of domain-specific language, data generation procedure, machine learning model, and search procedure. The experimental results are thorough and demonstrate the effectiveness of the approach.
The paper also provides a good discussion of the related work and the limitations of the approach. The authors acknowledge that the programs they can synthesize are only the simplest problems on programming competition websites and are simpler than most competition problems. They also discuss the potential extensions of their approach, including better data generation procedures and incorporating natural language problem descriptions.
To improve the paper, I suggest that the authors provide more details on the neural network architecture and the training procedure. They could also provide more analysis on the performance of the neural network, such as the accuracy of the predicted properties and the effect of the predicted properties on the search procedure. Additionally, the authors could discuss the potential applications of their approach beyond programming competition problems.
Some questions I would like the authors to answer are: How do the authors plan to extend their approach to more complex programs and problems? How do they plan to incorporate natural language problem descriptions into their approach? What are the potential limitations and challenges of using deep learning for inductive program synthesis, and how do the authors plan to address them? 
Overall, this is a well-written and well-researched paper that presents a significant contribution to the field of artificial intelligence. With some minor revisions and additional analysis, it has the potential to be a strong publication.