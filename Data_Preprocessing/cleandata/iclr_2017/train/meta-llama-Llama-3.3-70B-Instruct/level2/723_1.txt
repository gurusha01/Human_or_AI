The paper proposes a novel approach to handwritten word recognition based on open-bigrams, which are pairs of letters that are not necessarily next to each other. The authors train Long Short-Term Memory Recurrent Neural Networks (LSTM-RNNs) to predict open-bigrams rather than characters and use a simple cosine similarity measure to retrieve the vocabulary word. The approach is evaluated on two public databases of handwritten words (Rimes and IAM) and compared to standard word recognition techniques based on sequential character recognition.
I decide to accept this paper with the following key reasons: 
1. The paper tackles a specific and well-defined problem in handwritten word recognition, which is a significant challenge in the field of computer vision and natural language processing.
2. The approach is well-motivated and grounded in recent findings in cognitive neuroscience research on reading, which provides a strong foundation for the proposed method.
The paper provides a clear and detailed description of the proposed approach, including the open-bigram representation of words, the LSTM-RNN architecture, and the cosine similarity measure used for decoding. The experimental setup is well-designed, and the results are thoroughly evaluated and compared to baseline systems. The paper also provides a comprehensive analysis of the performance of the proposed approach, including an evaluation of the correlation between character edit distances and open-bigram cosine similarities.
To further improve the paper, I suggest the authors provide more insights into the limitations of the proposed approach and potential avenues for future research. Additionally, it would be helpful to include more visualizations or illustrations to support the explanation of the open-bigram representation and the decoding process.
Some questions I would like the authors to answer to clarify my understanding of the paper include:
* How do the authors plan to extend the proposed approach to handle out-of-vocabulary words or words with variable lengths?
* Can the authors provide more details on the computational complexity of the proposed approach and its potential applications in real-world scenarios?
* How do the authors think the proposed approach can be integrated with other techniques, such as language models or attention mechanisms, to further improve the performance of handwritten word recognition systems?