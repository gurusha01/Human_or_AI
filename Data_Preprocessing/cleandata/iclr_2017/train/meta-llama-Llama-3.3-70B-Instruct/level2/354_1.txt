The paper "Snapshot Ensembling: A Simple Method for Ensembling Neural Networks without Additional Training" proposes a novel approach to obtain ensembles of neural networks without incurring additional training costs. The authors achieve this by training a single neural network and saving model snapshots at various local minima along the optimization path. These snapshots are then used to create an ensemble, which consistently yields lower error rates than state-of-the-art single models.
I decide to accept this paper, with two key reasons for this choice: (1) the approach is well-motivated and grounded in existing literature on neural network optimization and ensembling, and (2) the experimental results demonstrate the effectiveness of the proposed method across various architectures and datasets.
The paper provides a clear and concise overview of the proposed approach, including the cyclic cosine annealing schedule used to converge to multiple local minima. The authors also provide a thorough analysis of the diversity of model ensembles, including visualizations of parameter space and activation space. The experimental results are impressive, with Snapshot Ensembles achieving lower error rates than state-of-the-art single models on several benchmark datasets, including CIFAR-10, CIFAR-100, and SVHN.
To further improve the paper, I suggest that the authors provide more insight into the choice of hyperparameters, such as the number of cycles and the initial learning rate. Additionally, it would be interesting to see a more detailed comparison with traditional ensembling methods, including an analysis of the trade-offs between model diversity and optimization.
Some questions I would like the authors to answer to clarify my understanding of the paper include: (1) How do the authors choose the number of cycles and the initial learning rate, and what is the sensitivity of the approach to these hyperparameters? (2) Can the authors provide more insight into the diversity of model ensembles, including an analysis of the correlation between snapshot models and the effect of snapshot selection on ensemble performance? (3) How does the proposed approach compare to other implicit ensembling methods, such as Dropout and Stochastic Depth, in terms of performance and computational cost?