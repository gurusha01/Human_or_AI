The paper presents the Neural Physics Engine (NPE), a framework for learning simulators of intuitive physics that can generalize across variable object count and different scene configurations. The authors claim that the NPE's compositional representation of physical interactions improves its ability to predict movement, generalize across variable object count and different scene configurations, and infer latent properties of objects such as mass.
I decide to accept this paper with two key reasons: (1) the paper presents a well-motivated approach that combines the strengths of top-down and bottom-up approaches to learning physics simulators, and (2) the experimental results demonstrate the effectiveness of the NPE in predicting physics and inferring latent properties, outperforming several baselines.
The paper provides a clear and detailed explanation of the NPE framework, including its ingredients such as object-based representations, context selection, factorization, and compositionality. The authors also provide a thorough analysis of the experimental results, demonstrating the NPE's ability to generalize across variable object count and different scene configurations. The comparison with baselines, such as the No-Pairwise and LSTM models, helps to highlight the importance of the NPE's compositional structure.
To further improve the paper, I suggest that the authors provide more details on the training process, including the hyperparameter settings and the optimization algorithm used. Additionally, it would be helpful to include more visualizations of the simulation results, such as videos or animations, to better illustrate the NPE's performance.
I would like to ask the authors to clarify the following points: (1) How do the authors plan to extend the NPE to more complex physics scenarios, such as 3D environments or scenarios with multiple types of objects? (2) Can the authors provide more details on the computational complexity of the NPE, including the time and memory requirements for training and testing? (3) How do the authors plan to incorporate the NPE into a larger framework for model-based planning and reinforcement learning, and what are the potential applications of such a framework?