Summary
The paper proposes a novel deep neural network architecture, ENet, designed for real-time semantic segmentation on mobile devices. The authors claim that ENet achieves state-of-the-art performance on several datasets, including Cityscapes, CamVid, and SUN RGB-D, while requiring significantly fewer parameters and floating-point operations compared to existing models.
Decision
I decide to accept this paper, with two key reasons for this choice: (1) the paper proposes a well-motivated and novel architecture that addresses the limitations of existing deep models for semantic segmentation, and (2) the experimental results demonstrate the effectiveness of ENet in achieving real-time performance on embedded platforms while maintaining competitive accuracy.
Supporting Arguments
The paper provides a clear and well-structured presentation of the proposed architecture, including the design choices and motivations behind them. The authors also provide a thorough evaluation of ENet on several datasets, including comparisons with state-of-the-art models. The results demonstrate that ENet achieves significant improvements in inference time and parameter efficiency while maintaining competitive accuracy.
Additional Feedback
To further improve the paper, I suggest that the authors provide more details on the hyper-parameter selection process and the model architecture, including the number of layers, filter sizes, and activation functions used. Additionally, the authors could provide more insights into the trade-offs between accuracy and processing time, and how ENet can be optimized for specific applications.
Questions for the Authors
To clarify my understanding of the paper, I would like the authors to answer the following questions:
1. Can you provide more details on the convolutional layer factorization technique used in ENet, and how it contributes to the model's efficiency?
2. How do you plan to address the software limitations mentioned in the paper, such as the increased number of kernel calls and memory operations, to further improve the performance of ENet?
3. Can you provide more insights into the applications of ENet beyond semantic segmentation, such as its potential use in data-center applications for large-scale computations?