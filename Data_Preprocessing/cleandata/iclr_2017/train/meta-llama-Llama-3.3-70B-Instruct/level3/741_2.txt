This paper presents a fascinating study on the ability of convolutional neural networks (CNNs) to learn game concepts under weak supervision. The authors propose a novel approach to train a CNN on a tic-tac-toe dataset to label boards and predict winning moves, achieving perfect performance. They utilize Class Activation Mapping (CAM) to inspect how the CNN works and identify regions of implicit attention in the network. The attention maps attend to specific squares on the tic-tac-toe board and can be used to pick correct winning actions.
Based on the conference guidelines, I will evaluate this paper by answering three key questions. Firstly, the specific question/problem tackled by the paper is to investigate whether a CNN can learn game concepts, such as a chess board grid, winning rules, and the presence of two players, under weak supervision. Secondly, the approach is well-motivated, drawing from the literature on deep reinforcement learning, cross-modal supervision, and class activation mapping. However, the paper lacks clarity in its implementation of CAM, test set creation, and computation of RCO, raising several clarifying questions.
My decision is to reject this paper, primarily due to the lack of clarity in its implementation and the absence of comparisons to related work on visualization techniques in deep reinforcement learning. The paper's claims, although intriguing, are not sufficiently supported by empirical or theoretical evidence.
To improve the paper, I suggest that the authors provide more details on their implementation of CAM, including the specific architecture and hyperparameters used. Additionally, they should clarify their test set creation process and provide more information on how they computed RCO. Furthermore, the authors should compare their approach to existing work on visualization techniques in deep reinforcement learning and provide more empirical or theoretical evidence to support their claims.
Some questions I would like the authors to answer to clarify my understanding of the paper include: How did you implement CAM, and what specific architecture and hyperparameters did you use? How did you create your test set, and what criteria did you use to select the samples? How did you compute RCO, and what is the significance of this metric in evaluating the performance of your approach? How does your approach compare to existing work on visualization techniques in deep reinforcement learning, and what are the implications of your findings for this field?