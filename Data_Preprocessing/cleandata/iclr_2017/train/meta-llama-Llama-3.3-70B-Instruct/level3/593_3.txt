Summary of the Paper's Claims and Contributions
The paper proposes a novel approach called Compositional Kernel Machines (CKMs), which combines the benefits of instance-based learning and kernel methods to address the limitations of deep architectures. CKMs create an exponential number of virtual training instances by composing transformed sub-regions of the original instances, allowing for efficient computation of discriminant functions using sum-product networks. The authors demonstrate the effectiveness of CKMs on several image classification tasks, including the NORB dataset, and show that they can outperform deep methods and other kernel-based approaches.
Decision and Key Reasons
Based on the review, I decide to Reject the paper. The two key reasons for this decision are:
1. Lack of significant methodological contributions: While the paper proposes an interesting approach, it builds upon existing ideas from kernel methods and instance-based learning, and the contributions are limited to defining a specific variant of CKMs and formulating it for easier automation.
2. Unclear comparison with existing methods: The paper compares CKMs with other methods, including deep architectures and kernel-based approaches, but the comparison is not always clear, and the experimental setup used for comparison raises questions about the fairness of the evaluation.
Supporting Arguments
The paper's introduction and title are misleading, as the approach is a semi-supervised variant of VAE rather than a method for interpreting general deep generative models. The authors' plan to extend the framework to the probabilistic programming setting is a promising direction, but it is not fully explored in the paper. The experiment in section 4.3 demonstrates a useful property of the approach, but the discussion on supervision rate provides limited insight into successful training protocols for semi-supervised learning.
Additional Feedback and Questions
To improve the paper, the authors should:
* Clarify the comparison with existing methods and provide a more detailed analysis of the experimental setup.
* Provide more insight into the theoretical foundations of CKMs and their relationship to other kernel-based approaches.
* Explore the potential applications of CKMs in other domains, such as natural language processing or reinforcement learning.
Some questions that I would like the authors to answer to clarify my understanding of the paper are:
* How do the authors plan to address the scalability issues of CKMs, particularly when dealing with large datasets?
* Can the authors provide more details on the implementation of the sum-product function and its computational complexity?
* How do the authors plan to extend the CKM framework to other domains and applications, and what are the potential challenges and limitations of this approach?