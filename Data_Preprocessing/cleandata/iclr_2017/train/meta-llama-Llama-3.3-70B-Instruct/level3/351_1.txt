This paper presents an interesting application of deep learning to genomic SNP data, proposing a novel framework called Generative Multi-Adversarial Network (GMAN) that extends GANs to multiple discriminators. The authors explore various design perspectives, ranging from a formidable adversary to a forgiving teacher, and demonstrate the effectiveness of GMAN in image generation tasks.
However, I decide to reject this paper due to two key reasons. Firstly, the experimental evaluation is weak due to the use of a single data set and limited cross-validation folds, making it difficult to determine the statistical significance of the results. Secondly, the writing lacks mathematical rigor, making it hard to understand the methodology and architectures used in the paper.
To support my decision, I argue that the paper's claims are not sufficiently supported by the results. While the authors demonstrate the potential of GMAN in image generation tasks, the evaluation is limited to a single dataset and does not provide a comprehensive comparison with other state-of-the-art methods. Furthermore, the lack of mathematical rigor makes it challenging to understand the underlying principles of GMAN and its advantages over traditional GANs.
To improve the paper, I suggest that the authors provide more comprehensive experimental evaluations, including multiple datasets and cross-validation folds. Additionally, they should provide more detailed mathematical derivations and explanations of the GMAN framework, including the softmax equations and the generative multi-adversarial metric (GMAM). Releasing the code as promised is also essential to support the research and allow others to build upon it.
I would like to ask the authors to clarify the following points: (1) How do the authors plan to address the issue of mode collapse in GMAN, and what strategies can be employed to ensure diversity among the discriminators? (2) Can the authors provide more insights into the choice of the softmax parameter Î» and its impact on the performance of GMAN? (3) How do the authors plan to extend GMAN to other application domains, such as semi-supervised learning and domain adaptation?