Summary
The paper presents a novel deep neural network architecture, ENet, designed for real-time semantic segmentation on mobile devices. ENet achieves state-of-the-art performance on several benchmarks, including Cityscapes, CamVid, and SUN RGB-D, while requiring significantly fewer parameters and floating-point operations compared to existing models. The authors propose several design choices, such as early downsampling, factorizing filters, and dilated convolutions, which enable ENet to achieve high accuracy and efficiency.
Decision
I decide to Accept this paper, with two key reasons: (1) the paper presents a well-motivated and novel architecture that addresses a significant problem in semantic segmentation, and (2) the experimental results demonstrate the effectiveness of ENet in achieving high accuracy and efficiency on several benchmarks.
Supporting Arguments
The paper is well-written, and the authors provide a clear and concise explanation of the proposed architecture and its design choices. The experimental results are thorough and demonstrate the superiority of ENet compared to existing models. The authors also provide a detailed analysis of the trade-offs between accuracy and processing time, which is essential for real-time applications.
Additional Feedback
To further improve the paper, I suggest the authors provide more insights into the limitations of ENet and potential future directions. For example, how does ENet perform on datasets with significant variations in lighting conditions or object scales? Are there any plans to extend ENet to other computer vision tasks, such as object detection or instance segmentation? Additionally, it would be interesting to see a more detailed comparison with other state-of-the-art models, including those that use different architectures or techniques, such as conditional random fields or recurrent neural networks.
Questions for the Authors
To clarify my understanding of the paper, I would like to ask the authors the following questions:
1. Can you provide more details on the class weighting scheme used in the paper, and how it was chosen?
2. How does ENet perform on datasets with significant class imbalance, and are there any plans to address this issue in future work?
3. Are there any plans to release the ENet code and models, and if so, how will they be made available to the research community?