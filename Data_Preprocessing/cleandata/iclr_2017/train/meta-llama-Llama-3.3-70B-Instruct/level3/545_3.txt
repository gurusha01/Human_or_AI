Summary of the Paper's Contributions
The paper proposes Compositional Kernel Machines (CKMs), a novel approach to object recognition that combines the benefits of instance-based learning and kernel methods. CKMs address the limitations of deep architectures by providing a more efficient and scalable method for learning nonlinear concepts. The authors introduce a sum-product function that enables the efficient summation of weighted kernels over an exponential number of virtual instances, mitigating the curse of dimensionality. The paper demonstrates the effectiveness of CKMs on several image classification tasks, including the NORB dataset, and shows promising results compared to deep methods.
Decision and Key Reasons
Based on the review, I decide to Reject the paper, with two key reasons:
1. Limited Empirical Evidence: The experiments are limited to a simple dataset (NORB) and lack empirical evidence from more complex datasets like ImageNet to support the compositional kernel approach.
2. Lack of Justification for Symmetry Modeling: The paper's claim that CKMs model symmetries of objects in Section 3.4 lacks sufficient justification and supporting evidence.
Supporting Arguments
While the paper presents a well-motivated approach, the limited empirical evidence and lack of justification for symmetry modeling raise concerns about the paper's contributions. The authors demonstrate promising results on the NORB dataset, but the lack of experiments on more complex datasets makes it difficult to assess the generalizability of the approach. Furthermore, the claim about symmetry modeling is not sufficiently supported by empirical evidence or theoretical analysis.
Additional Feedback and Questions
To improve the paper, I suggest the authors:
* Conduct experiments on more complex datasets, such as ImageNet, to demonstrate the scalability and effectiveness of CKMs.
* Provide more theoretical analysis and empirical evidence to support the claim about symmetry modeling.
* Clarify the relationship between CKMs and other instance-based learning methods, such as k-NN and SVMs.
I would like the authors to answer the following questions:
* How do CKMs handle high-dimensional data, and what are the computational costs associated with the sum-product function?
* Can the authors provide more insights into the choice of hyperparameters and the optimization procedure for CKMs?
* How do CKMs compare to other kernel methods, such as Support Vector Machines, in terms of computational efficiency and accuracy?