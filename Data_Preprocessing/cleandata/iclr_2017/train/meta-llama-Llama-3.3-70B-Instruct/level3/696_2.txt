Summary of the Paper's Contributions
The paper proposes a novel deep pedestrian detection method based on the Fast R-CNN framework, incorporating batch normalization to reduce training time and improve generalization performance. The authors also utilize the EdgeBoxes algorithm to generate high-quality region proposals, improving detection speed and accuracy. The method is evaluated on two benchmark datasets, INRIA and ETH, and achieves satisfactory performance comparable to state-of-the-art methods.
Decision
I decide to accept this paper, with two key reasons: (1) the paper tackles a specific and relevant problem in pedestrian detection, and (2) the approach is well-motivated and supported by experimental results.
Supporting Arguments
The paper provides a clear and concise introduction to the problem of pedestrian detection, highlighting the limitations of traditional methods and the potential of deep learning approaches. The authors' use of batch normalization and EdgeBoxes algorithm is well-justified, and the experimental results demonstrate the effectiveness of the proposed method. The paper also provides a thorough review of related work, positioning the proposed method within the context of existing research.
Additional Feedback
To further improve the paper, I suggest that the authors provide more detailed analysis of the results, including a discussion of the limitations of the proposed method and potential avenues for future research. Additionally, the authors may consider providing more visualizations of the detection results, to help illustrate the effectiveness of the proposed method.
Questions for the Authors
To clarify my understanding of the paper, I would like the authors to answer the following questions:
1. Can you provide more details on the implementation of the batch normalization layer, including the specific hyperparameters used?
2. How do you plan to address the issue of low-resolution images, which may affect the detection performance of the proposed method?
3. Can you provide more insights into the computational efficiency of the proposed method, including the average processing time per image?