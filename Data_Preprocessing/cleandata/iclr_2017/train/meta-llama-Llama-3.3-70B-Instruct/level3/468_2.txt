This paper proposes a novel approach to learning algorithmic tasks using neural networks, leveraging the principle of divide and conquer to create a recursive split and merge architecture. The authors introduce a learning framework that optimizes the architecture not only for accuracy but also for computational complexity, using only input-output example pairs. The approach is well-motivated, building on the success of dynamic programming and the importance of inductive biases in neural networks.
I decide to accept this paper, with two key reasons for this choice. Firstly, the paper tackles a specific and important question in the field of neural networks, namely how to learn algorithmic tasks in a way that is both accurate and efficient. Secondly, the approach is well-supported by experimental results, which demonstrate the effectiveness of the proposed method on tasks such as sorting and planar convex hull.
The paper provides a clear and detailed explanation of the proposed architecture and learning framework, including the use of a recursive split and merge architecture, and the optimization of the architecture using gradient descent. The authors also provide a thorough analysis of the complexity of the proposed method, and demonstrate its ability to generalize to larger scales.
To improve the paper, I suggest that the authors consider providing more context and background information on the related work in the field, and clarify the relationship between their approach and other existing methods. Additionally, the authors may want to consider providing more detailed information on the experimental setup and results, such as the specific datasets and metrics used to evaluate the performance of the proposed method.
I would like to ask the authors to clarify the following points: (1) How does the proposed method handle tasks that are not amenable to the principle of divide and conquer? (2) Can the authors provide more information on the computational resources required to train and test the proposed method? (3) How does the proposed method compare to other existing methods for learning algorithmic tasks, such as recurrent neural networks and attention mechanisms? 
Overall, the paper presents a novel and well-motivated approach to learning algorithmic tasks using neural networks, and demonstrates its effectiveness on a range of tasks. With some revisions to address the suggested improvements, the paper has the potential to make a significant contribution to the field.