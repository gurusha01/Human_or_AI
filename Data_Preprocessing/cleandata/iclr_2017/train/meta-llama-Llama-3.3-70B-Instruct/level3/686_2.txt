Summary
The paper proposes a novel method for domain-invariant representation learning, called Central Moment Discrepancy (CMD), which measures the difference between the distributions of the source and target domains. The authors demonstrate that CMD is a metric and that convergence in CMD implies convergence in distribution. The method is evaluated on two benchmark datasets, Amazon reviews and Office, and achieves state-of-the-art performance on most tasks.
Decision
I decide to accept this paper, with two key reasons: (1) the paper proposes a well-motivated and novel approach to domain-invariant representation learning, and (2) the experimental results demonstrate the effectiveness of the proposed method.
Supporting Arguments
The paper tackles the specific question of domain-invariant representation learning, which is a crucial problem in machine learning. The approach is well-motivated, building upon the idea of matching statistical moments of the hidden activations. The authors provide a thorough analysis of the proposed method, including a proof that CMD is a metric and that convergence in CMD implies convergence in distribution. The experimental results are impressive, with the proposed method outperforming state-of-the-art methods on most tasks.
Additional Feedback
To further improve the paper, I suggest that the authors provide more discussion on the computation cost of the proposed method, as well as more detailed analysis of the results. Additionally, it would be helpful to include more visualizations of the results, such as plots of the CMD values for different tasks. I also recommend that the authors consider running more experiments to evaluate the robustness of the proposed method to different hyperparameter settings.
Questions for the Authors
I would like to ask the authors to clarify the following points: (1) How does the proposed method handle cases where the source and target domains have different numbers of classes? (2) Can the authors provide more insight into the choice of the hyperparameter K, which controls the number of central moments to match? (3) How does the proposed method compare to other state-of-the-art methods in terms of computational efficiency?