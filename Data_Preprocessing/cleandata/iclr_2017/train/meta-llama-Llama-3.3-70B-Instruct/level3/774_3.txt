Summary of the Paper's Contributions
The paper proposes a novel approach to pedestrian detection using a Fast R-CNN framework with batch normalization and EdgeBoxes algorithm for region proposal generation. The authors claim that their method achieves satisfactory performance on two benchmark datasets, INRIA and ETH, and outperforms several state-of-the-art methods.
Decision
I decide to reject this paper, primarily due to its lack of scientific quality and depth compared to typical machine learning papers. While the paper presents some useful proposals, the methodology and experiments seem to be straightforward applications of existing techniques without significant novelty or insights.
Supporting Arguments
The paper's approach, although effective, is not particularly innovative or groundbreaking. The use of batch normalization and EdgeBoxes algorithm is well-established in the field, and the authors do not provide sufficient evidence to demonstrate the significance of their contributions. Furthermore, the experimental evaluation, while thorough, does not provide a comprehensive analysis of the proposed method's strengths and weaknesses.
Additional Feedback
To improve the paper, I suggest that the authors provide more in-depth analysis of their method's performance, including ablation studies and comparisons with other state-of-the-art methods. Additionally, the authors should consider providing more details on the implementation of their approach, such as the specific architecture of the Fast R-CNN model and the hyperparameter settings used. This would help to increase the paper's reproducibility and facilitate a more thorough understanding of the proposed method.
Questions for the Authors
To clarify my understanding of the paper, I would like the authors to answer the following questions:
1. Can you provide more details on the specific contributions of your paper, and how they differ from existing work in pedestrian detection?
2. How do you plan to address the issue of low-resolution images, which you mention as an open problem in the conclusion?
3. Can you provide more information on the computational resources used for training and testing your model, and how you optimized the hyperparameters for the EdgeBoxes algorithm and the Fast R-CNN model?