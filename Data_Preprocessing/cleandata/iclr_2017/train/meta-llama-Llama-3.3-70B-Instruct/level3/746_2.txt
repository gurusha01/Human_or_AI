The paper proposes a novel approach to learning algorithmic tasks using a recursive "divide and conquer" strategy, leveraging the principle of scale invariance to optimize both accuracy and computational complexity. The authors introduce a dynamic programming network that learns to split and merge inputs in a fully differentiable manner, using only input-output pairs. The paper presents preliminary empirical evidence on two paradigmatic problems: sorting and finding planar convex hulls.
I decide to reject this paper, primarily due to two key reasons. Firstly, the method presented is not easily applicable to other tasks due to its hand-tailored nature to the two chosen tasks, limiting its generality. Secondly, the paper is difficult to understand as it mixes high-level ideas with low-level tricks, making it unclear how the models operate and what was learned versus designed.
To support my decision, I provide the following arguments. The paper's approach, although interesting, lacks generality and is heavily dependent on problem-specific tricks and networks. The solution requires a deep understanding of the specific tasks and their underlying complexities, which may not be easily transferable to other tasks. Furthermore, the writing style is confusing, and the paper would benefit from a clearer explanation of the challenges and possible solutions.
To improve the paper, I suggest the authors provide more context and explanations for the design choices and the underlying mathematics. Additionally, they should consider providing more experimental results on a variety of tasks to demonstrate the generality of their approach. I would like the authors to answer the following questions: (1) How do they plan to extend their approach to more complex tasks, and what are the potential challenges they anticipate? (2) Can they provide more insights into the learned representations and how they relate to the underlying task complexities? (3) How do they plan to address the issue of problem-specific tricks and networks, and what are the potential solutions to make their approach more generalizable?