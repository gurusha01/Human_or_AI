Summary
The paper proposes a novel approach to learning perceptual similarity judgment by re-training a deep convolutional neural network (DCNN) with object persistence constraints. The authors demonstrate that this approach, called Object Persistence Net (OPnet), can learn to associate different views of the same object and develop a similarity judgment that can transfer to novel objects and categories. The paper shows that OPnet outperforms existing approaches, including AlexNet and a joint embedding model, on various retrieval tasks and correlates well with human perception.
Decision
I decide to accept this paper, with the main reason being that it presents a novel and well-motivated approach to learning perceptual similarity judgment. The paper is well-written, and the results are impressive, showing a significant improvement over existing methods.
Supporting Arguments
The paper tackles a specific question of how to learn perceptual similarity judgment, which is a fundamental problem in computer vision. The approach is well-motivated, building upon the idea of object persistence constraints, which is a key aspect of human visual experience. The authors provide a clear and detailed explanation of their method, including the architecture, loss function, and training procedure. The results are thorough, with various experiments and evaluations, including comparisons to existing methods and human perception.
Additional Feedback
To further improve the paper, I would like to see more analysis on the learned feature representations and how they relate to human perception. Additionally, it would be interesting to explore the applicability of OPnet to other domains, such as image classification and object detection. The authors may also consider providing more details on the computational resources and training time required for OPnet.
Questions for the Authors
1. Can you provide more insights into how the object persistence constraints affect the learned feature representations, and how they relate to human perception?
2. How do you plan to extend OPnet to other domains, such as image classification and object detection?
3. Can you provide more details on the computational resources and training time required for OPnet, and how it compares to existing methods?