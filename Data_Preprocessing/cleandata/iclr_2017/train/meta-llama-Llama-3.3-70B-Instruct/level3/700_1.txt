Summary
The paper proposes a novel deep neural network architecture, ENet, designed for real-time semantic segmentation on mobile devices. ENet achieves significant improvements in efficiency, reducing the number of parameters and floating-point operations, while maintaining comparable or better accuracy than existing state-of-the-art models. The authors evaluate ENet on various datasets, including Cityscapes, CamVid, and SUN RGB-D, and demonstrate its real-time performance on embedded systems.
Decision
I decide to Accept this paper, with two key reasons: (1) the proposed ENet architecture shows significant improvements in efficiency and accuracy, making it a valuable contribution to the field of semantic segmentation, and (2) the authors provide thorough evaluations and comparisons with existing models, demonstrating the effectiveness of their approach.
Supporting Arguments
The paper presents a well-motivated approach, addressing the need for efficient semantic segmentation models on mobile devices. The authors provide a clear and detailed description of the ENet architecture, including its design choices and experimental results. The evaluations on various datasets demonstrate the effectiveness of ENet, and the comparisons with existing models show its superiority in terms of efficiency and accuracy.
Additional Feedback
To further improve the paper, I suggest the authors provide more insights into the design choices and hyperparameter tuning process. Additionally, visualizing the learned filters and feature maps could help to better understand the differences between ENet and other architectures. It would also be beneficial to explore the application of ENet to other tasks, such as object detection and instance segmentation.
Questions for the Authors
To clarify my understanding of the paper, I would like the authors to answer the following questions:
1. Can you provide more details on the hyperparameter tuning process, including the selection of learning rate, batch size, and regularization techniques?
2. How do you plan to address the potential limitations of ENet, such as its reliance on convolutional layer factorization and the increased number of kernel calls?
3. Have you explored the application of ENet to other tasks, such as object detection and instance segmentation, and if so, what are the preliminary results?