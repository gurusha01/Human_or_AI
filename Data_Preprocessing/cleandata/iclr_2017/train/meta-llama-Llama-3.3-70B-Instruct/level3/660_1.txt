Summary
The paper proposes a novel neural network architecture, called Perception Updating Networks (PUNs), which models frames in videos using principles inspired by computer graphics pipelines. The architecture explicitly represents "sprites" or percepts inferred from the maximum likelihood of the scene and infers their movement independently of their content. The authors introduce a statistical framework that decouples the representation of sprites and their dynamics in a video, allowing for more interpretable and efficient video generation.
Decision
I decide to reject this paper, with two key reasons for this choice. Firstly, the paper lacks a clear and thorough comparison with baseline methods, which makes it difficult to evaluate the effectiveness of the proposed architecture. Secondly, the introduction of new hyper-parameters and the lack of theoretical justification for the proposed method raise concerns about its novelty and potential flaws.
Supporting Arguments
The paper proposes a new architecture, but the comparison with baseline methods is limited and not thorough. The authors only compare their method with a simple LSTM baseline, which may not be a fair comparison. Additionally, the paper introduces three new hyper-parameters, k, K, and β3, which may increase the risk of overfitting and make the method less robust. The lack of theoretical justification for the proposed method and the absence of a clear explanation of how the architecture works raise concerns about its novelty and potential flaws.
Additional Feedback
To improve the paper, I suggest that the authors provide a more thorough comparison with baseline methods, including state-of-the-art methods in video generation. Additionally, the authors should provide more details about the hyper-parameters and how they were chosen. The paper would also benefit from a clearer explanation of the architecture and its components, as well as more visualizations and examples to illustrate the method's effectiveness.
Questions for the Authors
I would like to ask the authors to clarify the following points:
* How did the authors choose the hyper-parameters k, K, and β3, and what is the sensitivity of the method to these parameters?
* Can the authors provide more details about the comparison with baseline methods, including the experimental setup and the metrics used to evaluate the methods?
* How does the proposed architecture handle cases where the sprites or objects in the scene are not simple or have complex dynamics?
* Can the authors provide more visualizations and examples to illustrate the method's effectiveness and interpretability?