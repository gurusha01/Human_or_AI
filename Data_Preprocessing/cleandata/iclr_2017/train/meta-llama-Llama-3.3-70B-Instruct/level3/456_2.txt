Summary
The paper proposes a new metric called Central Moment Discrepancy (CMD) for matching two distributions, which has an advantage over Maximum Mean Discrepancy (MMD) in not over-penalizing the mean and focusing on the shape of the distribution. The authors demonstrate the effectiveness of CMD in domain-invariant representation learning, achieving state-of-the-art performance on several benchmark datasets.
Decision
I decide to Accept this paper with some minor revisions.
Reasons
The paper is well-motivated, and the approach is well-placed in the literature. The authors provide a clear and concise introduction to the problem of domain-invariant representation learning and the limitations of existing methods. The proposed CMD metric is well-defined, and the theoretical analysis is sound. The experimental results demonstrate the effectiveness of CMD in achieving state-of-the-art performance on several benchmark datasets.
Supporting Arguments
The paper provides a thorough analysis of the properties of CMD, including its metric properties and convergence guarantees. The authors also provide a detailed comparison with MMD, highlighting the advantages of CMD in terms of computational efficiency and accuracy. The experimental results are well-presented, and the authors provide a clear discussion of the results and their implications.
Additional Feedback
To further improve the paper, I suggest that the authors provide more detailed analysis of the sensitivity of CMD to the choice of hyperparameters, particularly the order of the moments (K). Additionally, the authors may want to consider comparing CMD with other distribution matching methods, such as kernelized MMD with different kernels. Finally, the authors may want to provide more discussion on the potential applications of CMD beyond domain-invariant representation learning.
Questions for the Authors
1. Can you provide more insight into the choice of K and its effect on the performance of CMD?
2. How does CMD compare to other distribution matching methods, such as kernelized MMD with different kernels?
3. What are the potential applications of CMD beyond domain-invariant representation learning, and how can it be extended to other domains?