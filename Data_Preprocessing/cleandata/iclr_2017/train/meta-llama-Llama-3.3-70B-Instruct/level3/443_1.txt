The paper proposes a novel approach to sequence-to-sequence transduction by formulating it as a noisy channel decoding problem. The authors introduce a Segment-to-Segment Neural Transduction (SSNT) model, which uses a latent alignment variable to enable incremental generation of the output sequence. This approach allows for the use of unpaired output data to estimate the parameters of the source model, while the channel model is trained on paired input-output data.
I decide to Accept this paper, with the key reasons being the well-motivated approach and the thorough empirical evaluation. The paper is well-written, and the SSNT model is interesting and well-motivated. The authors provide an extensive empirical evaluation on three natural language processing tasks, demonstrating the effectiveness of the noisy channel model in exploiting unpaired output data.
The approach is well-motivated, as it addresses the limitation of traditional sequence-to-sequence models in handling unpaired data. The use of a latent alignment variable enables the model to condition on incomplete conditioning contexts, making it suitable for decoding. The empirical evaluation is thorough, with experiments on abstractive sentence summarization, machine translation, and morphological inflection generation. The results show that the noisy channel model outperforms the direct model and achieves comparable or better results than state-of-the-art models.
To improve the paper, I suggest that the authors consider presenting Section 2 from the perspective of modeling p(x|y) for clarity. Additionally, exploring experiments on reranking during search could provide further insights into the effectiveness of the noisy channel model. I would like the authors to answer the following questions: (1) How does the choice of hyperparameters, such as the beam size and the weight of the language model, affect the performance of the noisy channel model? (2) Can the authors provide more analysis on the qualitative differences between the outputs of the direct model and the noisy channel model? (3) How does the noisy channel model perform on tasks with limited paired data, and can it be used to improve the performance of other sequence-to-sequence models in such scenarios?