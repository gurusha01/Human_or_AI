Summary of the Paper
The paper proposes Compositional Kernel Machines (CKMs), a novel instance-based method for object recognition that addresses some of the weaknesses of deep architectures and other kernel methods. CKMs use a sum-product function to represent a discriminant function, allowing for tractable summation over an exponential set of virtual instances. This approach mitigates the curse of dimensionality and improves sample complexity. The authors demonstrate the effectiveness of CKMs in several scenarios, including object recognition, composition, and symmetry tasks.
Decision
I decide to accept this paper, with the primary reason being the strong results demonstrated in the experiments, particularly in the composition and symmetry tasks. The paper shows that CKMs can outperform deep methods and other kernel methods in certain scenarios, which is a significant contribution to the field.
Supporting Arguments
The paper is well-written and well-organized, making it easy to follow and understand. The authors provide a clear motivation for the proposed method and demonstrate its effectiveness in several scenarios. The experimental results are strong, and the authors provide a thorough analysis of the results. Additionally, the paper provides a good discussion of the limitations of the proposed method and potential future research directions.
Additional Feedback
To improve the paper, I suggest that the authors provide more details on the computational complexity of the proposed method and its scalability to larger datasets. Additionally, the authors could provide more analysis on the trade-offs between the proposed method and other kernel methods, such as support vector machines. Furthermore, the authors could explore the application of CKMs to other domains, such as natural language processing or speech recognition.
Questions for the Authors
I would like the authors to clarify the following points:
1. How do the authors plan to address the issue of overfitting in CKMs, particularly when the number of virtual instances is large?
2. Can the authors provide more details on the choice of hyperparameters for the CKM architecture, such as the number of layers and the number of elements in each layer?
3. How do the authors plan to extend the proposed method to other domains, such as natural language processing or speech recognition?