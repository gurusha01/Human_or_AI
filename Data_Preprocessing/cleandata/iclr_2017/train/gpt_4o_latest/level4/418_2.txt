The paper introduces a novel approach to address the instability problem inherent in generative adversarial networks. The core idea is to enable the generator to "anticipate" how the discriminator's decision boundary will evolve over time, with the rationale that this foresight should help prevent the generator from collapsing into producing samples from only a single mode of the data distribution.
This is an exceptionally well-written paper that effectively motivates its focus on a significant open problem. The experiments are thorough and provide strong evidence in favor of the proposed method. The approach pursued here is notably more refined compared to the ad hoc techniques currently employed to stabilize GANs in practice. However, I have three primary concerns that raise some doubts about the robustness of the method. If these issues are addressed, this paper would be a strong candidate for acceptance.
1) I am not entirely convinced that the same effect cannot be achieved through the following alternative procedure: train the discriminator for an extended number of K steps when updating the generator (e.g., a number equivalent to the unrolling steps used in the current experiments). Then, after updating the generator, revert the K updates to the discriminator and perform one new update step instead. I briefly reviewed your response to Reviewer 2, which seems to suggest that you have attempted something similar by stopping gradient flow at a specific point (though I believe this is not exactly equivalent to the procedure I described).
2) I attempted to replicate the simple MNIST example using a fully connected network instead of an RNN generator but was unable to achieve satisfactory results. Even when unrolling the discriminator for 30â€“40 steps, the generator either exhibited mode-seeking behavior or failed to train altogether. This could be due to a bug in my implementation, specific characteristics of the RNN generator, or the absence of batch normalization in my setup. If the latter two factors are indeed critical, this would suggest that the proposed approach depends on particular forms of the generator and discriminator architectures, which should be explicitly discussed. My code is available here: