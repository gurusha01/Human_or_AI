The authors present design choice recommendations for performing program induction via gradient descent, emphasizing principles akin to reasonable programming language practices (e.g., immutable data, higher-order language constructs, etc.).
As noted in the comments, I strongly feel that this work represents, at best, a marginal contribution beyond TerpreT, an already published system with robust experimental results and solid theoretical foundations. To clarify, I believe the TerpreT paper warrants significant attention and consider it truly inspiring.
This paper challenges one of the key findings of the original TerpreT work but fails to provide compelling evidence that gradient-based evaluators for TerpreT are superior or even appropriate for program induction. This raises concerns for me, as it suggests that gradient-based methods were not thoroughly vetted or that more comprehensive comparisons to existing alternatives were omitted from this study.
In my view, if the goal is to draw more attention to the original TerpreT paper—which I believe is well-deserved—then this submission is above the acceptance threshold. However, given that it is largely unreadable, contradicts its predecessor in inadequately defended ways, and is irreproducible without the same, I must conclude that it falls below the threshold for acceptance.