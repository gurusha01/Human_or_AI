Review of the Paper
The paper proposes a novel learning-based algorithm to approximate solutions for time-evolution partial differential equations (PDEs), specifically focusing on the Hamilton-Jacobi-Isaacs (HJI) PDE. The authors introduce a recursive regression approach where a neural network alternates between sampling space-time points, solving the PDE at those points, and regressing a space-time function to generalize the solution. This method is particularly practical as it addresses the computational inefficiency of grid-based PDE simulations, which suffer from the curse of dimensionality. Furthermore, the algorithm effectively handles the challenge of non-differentiability in PDEs with "min" operators, a feature that often renders gradient descent methods ineffective. The paper is motivated by applications in control theory and safety-critical systems but also has broader implications for the machine learning and deep learning communities.
Decision: Accept
The paper is recommended for acceptance due to its innovative approach to solving a challenging problem, its clear motivation grounded in both theory and applications, and the rigor of its experimental validation. The key reasons for this decision are:  
1. The proposed algorithm demonstrates a significant reduction in memory requirements compared to grid-based methods, making it scalable to higher-dimensional problems.  
2. The experimental results, including comparisons with state-of-the-art tools, provide strong evidence supporting the claims of accuracy and computational efficiency.
Supporting Arguments
1. Problem and Motivation: The paper addresses a well-defined and important problem: approximating solutions to time-evolution PDEs, particularly in the context of safety-critical systems. The motivation is well-grounded in the limitations of existing methods, such as gridding techniques, and the potential of neural networks to overcome these challenges. The connection to control theory and reinforcement learning literature further strengthens its relevance.  
2. Scientific Rigor: The authors provide a detailed description of their algorithm, including theoretical justifications and practical implementation details. The experiments are thorough, covering multiple scenarios (e.g., linear systems, pursuit-evasion games) and comparing the results with analytical solutions or state-of-the-art tools. The use of error metrics (E1 and E2) to quantify performance adds to the scientific rigor.  
3. Broader Impact: The method's scalability and ability to handle non-differentiable PDEs make it a valuable contribution to both the control theory and machine learning communities. Its potential to alleviate the curse of dimensionality in high-dimensional systems is particularly noteworthy.
Suggestions for Improvement
1. Clarity in Algorithm Explanation: While the algorithm is described in detail, some steps (e.g., the choice of hyperparameters and the stopping criterion) could benefit from additional explanation or guidelines to aid reproducibility.  
2. Scalability Analysis: Although the paper discusses the scalability of the method, a more explicit analysis of how the algorithm performs as the dimensionality increases would strengthen the claims. For example, experiments on systems with dimensions beyond three could provide further validation.  
3. Comparison with Other Neural PDE Solvers: The paper could benefit from a more comprehensive comparison with other neural network-based PDE solvers, such as those using physics-informed neural networks (PINNs). This would help contextualize the proposed method within the broader literature.
Questions for the Authors
1. How sensitive is the algorithm to the choice of hyperparameters (e.g., learning rate, momentum decay, and batch size)? Could you provide guidelines for tuning these parameters?  
2. How does the method perform in higher-dimensional systems (e.g., 4D or 5D)? Are there any practical limitations to its scalability?  
3. Could the approach be extended to handle stochastic PDEs or systems with uncertainty? If so, what modifications would be required?  
In conclusion, this paper presents a significant contribution to the field of PDE approximation using neural networks. While there is room for improvement in certain areas, the strengths of the work outweigh its limitations, and it is a valuable addition to the conference.