The paper proposes a novel method for mining explicit logical rules from knowledge base (KB) embeddings using a sparse reconstruction approach. By leveraging compressed sensing techniques, the authors aim to extract more expressive logical theories, including conjunctions, disjunctions, and negations, directly from the embedding space. The method, termed Feature Rule Miner (FRM), is evaluated on several standard KB datasets, demonstrating its ability to extract diverse and interpretable rules with improved recall and F-scores compared to prior approaches.
Decision: Reject.  
While the paper presents an interesting and technically sound approach, it falls short in addressing critical questions about the necessity and broader applicability of mining rules from KB embeddings. The lack of a direct comparison to graph-based rule mining methods, such as graph random walks, further weakens the case for the proposed method's distinctiveness and utility.
Supporting Arguments:  
1. Problem Motivation and Necessity: The paper does not convincingly justify why mining rules from KB embeddings is necessary or advantageous over traditional rule mining methods. While the authors highlight scalability and noise tolerance as benefits, these claims are not rigorously compared to existing graph-based approaches, such as AMIE or graph random walks, which are also designed for large-scale KBs. Additionally, there is limited discussion on what specific information KB embeddings encode and whether they are inherently suited for learning complex logical rules like negations or disjunctions.  
   
2. Empirical Evaluation: While the experimental results show that FRM outperforms a kNN-based baseline in terms of F-score and per-rule recall, the evaluation is limited to small-scale datasets. The lack of experiments on larger, real-world KBs (e.g., YAGO or DBpedia) raises questions about the scalability and practical applicability of the method. Furthermore, the absence of comparisons to graph-based rule mining techniques leaves a significant gap in understanding the method's relative performance and utility.  
3. Theoretical and Practical Feasibility: The paper acknowledges that the sparse recovery problem requires enumerating all candidate rule bodies, which is computationally expensive for longer rules. While the authors suggest using online recovery algorithms in future work, this limitation undermines the practicality of the proposed approach for complex rule mining tasks.
Suggestions for Improvement:  
1. Comparison to Graph-Based Methods: Include a comparison to graph random walk-based methods or other graph-based rule mining techniques to better contextualize the advantages of mining rules from embeddings. This would help clarify the unique contributions of the proposed approach.  
   
2. Scalability and Complexity: Address the computational challenges of enumerating candidate rule bodies more explicitly. Demonstrating the method's scalability on larger KBs would strengthen its practical relevance.  
3. Clarify Embedding Utility: Provide a more detailed analysis of what KB embeddings encode and why they are suitable for learning complex logical rules. This would help bridge the gap between the embedding space and the logical space.  
4. Broader Applications: Discuss potential applications of the mined rules beyond link prediction, such as explainability or downstream tasks, to highlight the broader impact of the work.
Questions for the Authors:  
1. Why is it necessary to mine rules from KB embeddings rather than directly from the graph structure of the KB?  
2. Can the proposed method handle more complex logical constructs, such as nested negations or multi-level disjunctions, in practice?  
3. How does the method scale with increasing KB size and rule complexity? Have you tested it on larger datasets like YAGO or DBpedia?  
4. How does the performance of FRM compare to graph random walk-based methods in terms of rule quality and computational efficiency?  
In conclusion, while the paper introduces a technically interesting approach, it requires stronger motivation, broader comparisons, and scalability demonstrations to justify its contributions and practical utility.