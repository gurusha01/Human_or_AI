Review of the Paper
Summary of Contributions
This paper addresses the task of argument mining by proposing a modified Pointer Network (PN) architecture to jointly predict argument component (AC) types and their linking structure. The authors argue that the PN is well-suited for this task due to its ability to model sequential data, enforce tree-like constraints, and leverage hidden representations for multi-task learning. The paper achieves state-of-the-art results on two datasets: a corpus of persuasive essays and a microtext corpus. The joint model, which simultaneously predicts AC types and links, is shown to outperform baseline methods, highlighting the benefits of multi-task learning. Additionally, the authors provide an ablation study to evaluate the importance of different features and architectural components, such as the fully connected layer before the LSTM input.
Decision: Reject
While the paper demonstrates promising results in argument mining, it falls short in terms of novelty, generalizability, and alignment with the scope of the conference. The key reasons for rejection are:
1. Limited Novelty: The use of Pointer Networks and multi-task learning is not novel. Pointer Networks have been extensively studied in sequence-to-sequence tasks, and the paper does not introduce significant innovations to the architecture. The joint training approach, while effective, is only applied to a single task (argument mining), limiting its broader applicability.
   
2. Weak Experimental Justification: The experiments are conducted on datasets constrained to single trees or forests, which do not convincingly demonstrate the advantages of Pointer Networks over simpler models. Additionally, the assumption of pre-segmented AC boundaries is a strong limitation that reduces the model's practical applicability in real-world scenarios.
3. Misalignment with Conference Scope: The paper's focus on argument mining, a niche NLP task, makes it more suitable for an NLP-specific conference rather than a general AI conference like ICLR.
Supporting Arguments
- The datasets used (persuasive essays and microtexts) are small and domain-specific, raising concerns about the generalizability of the proposed approach to other tree-structured tasks.
- The assumption of pre-identified AC boundaries is unrealistic for broader applications, as segmenting ACs is a non-trivial task in itself.
- While the paper achieves state-of-the-art results, the baselines compared against are tailored to argument mining and may not be competitive for general tree/forest prediction tasks.
- The choice of argument mining as the target task is questionable, given that other tree-structured tasks like dependency parsing or syntactic parsing might better demonstrate the model's capabilities.
Suggestions for Improvement
1. Broader Evaluation: Test the proposed model on more general tree-structured tasks, such as dependency parsing or constituency parsing, to demonstrate its utility beyond argument mining.
2. End-to-End Pipeline: Address the strong assumption of pre-segmented AC boundaries by integrating subtask 1 (AC segmentation) into the model. This would make the approach more practical and applicable to real-world scenarios.
3. Novelty and Innovation: Introduce architectural innovations or methodological contributions that go beyond the standard Pointer Network and multi-task learning framework.
4. Dataset Diversity: Expand the evaluation to include larger and more diverse datasets to better assess the model's robustness and generalizability.
5. Conference Fit: Consider submitting the work to an NLP-focused venue where the audience is more likely to appreciate the contributions to argument mining.
Questions for the Authors
1. How does the model perform when applied to other tree-structured tasks, such as dependency parsing or syntactic parsing? Would the proposed architecture generalize to these tasks?
2. Can the authors clarify why they chose to focus on argument mining, given the limited novelty of the Pointer Network and the constraints of the datasets?
3. How would the model handle cases where AC boundaries are not pre-segmented? Could the authors propose an extension to address this limitation?
4. Did the authors consider alternative architectures, such as graph neural networks, which might be better suited for tasks involving tree or graph structures?
In summary, while the paper presents a competent application of Pointer Networks to argument mining, the lack of novelty, limited experimental scope, and strong assumptions about the task setup make it unsuitable for acceptance at this conference.