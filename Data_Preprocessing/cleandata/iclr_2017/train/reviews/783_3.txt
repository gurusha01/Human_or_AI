The paper claim that, when supported by a number of backup workers, synchronized-SGD 
actually works better than async-SGD. The paper first analyze the problem of staled updates
in async-SGDs, and proposed the sync-SGD with backup workers. In the experiments, the 
authors shows the effectiveness of the proposed method in applications to Inception Net
and PixelCNN.
The idea is very simple, but in practice it can be quite useful in industry settings where 
adding some backup workders is not a big problem in cost. Nevertheless, I think the 
proposed solution is quite straightforward to come up with when we assume that 
each worker contains the full dataset and we have budge to add more workers. So, 
under this setting, it seems quite natural to have a better performance with the additional 
backup workers that avoid the staggering worker problem. And, with this assumtion I'm not 
sure if the proposed solution is solving difficult enough problem with novel enough idea. 
In the experiments, for fair comparison, I think the Async-SGD should also have a mechanism 
to cut off updates of too much staledness just as the proposed method ignores all the remaining 
updates after having N updates. For example, one can measure the average time spent to 
obtain N updates in sync-SGD setting and use that time as the cut-off threashold in Async-SGD 
so that Async-SGD does not perform so poorly.