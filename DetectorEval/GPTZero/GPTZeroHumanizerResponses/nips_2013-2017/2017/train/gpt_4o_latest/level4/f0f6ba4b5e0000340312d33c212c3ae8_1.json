{
    "version": "2025-03-13-base",
    "scanId": "f858c5be-00b6-4a51-8b1e-5f0498f53511",
    "documents": [
        {
            "sentences": [
                {
                    "generated_prob": 0.9999971389770508,
                    "sentence": "This research paper introduces a method for improving the conventional word hashing technique used for embedding representations by incorporating a weighted blend of various vectors associated with unique hash functions to depict individual words effectively and efficiently.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999964833259583,
                    "sentence": "This method can be applied using a predefined dictionary or in real time training scenarios.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999960660934448,
                    "sentence": "The suggested technique is easy to grasp and put into practice resulting in a decrease, in the total number of embedding parameters.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999955892562866,
                    "sentence": "The outcomes are quite impressive overall.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999948740005493,
                    "sentence": "The approach is elegantly crafted as well.It's worth noting that the hash embeddings seem to work as a means of regularization.However it would enhance Table 2 to provide insights into the vocabulary sizes chosen and the reduction in parameters achieved through hash embeddings.Also might be helpful to include a top notch model for the DBpedia dataset, in Table 3 [1].",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.999992311000824,
                    "sentence": "In Line 255 of the text states that the ensemble would need the amount of training time as a single large model only under the condition that each model in the ensemble has a architecture with fewer non emdedding weights.It is implied that the number of emdedding weights in each network of the ensemble is equal to that of the large model; this would lead to a notably longer training duration, for the ensemble.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9991000294685364,
                    "sentence": "Table 3 showcases the three models; however a more effective comparison could be made by separating the table into methods that solely use embedding and those based on RNN/CNN structures.Additionally it would be intriguing to assess these embeddings in RNN/CNN models that're more sensitive to context.Such an approach could provide insights into their effectiveness and performance, in various scenarios.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9860498309135437,
                    "sentence": "A few quick thoughts;",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9839146137237549,
                    "sentence": "I noticed a typo in the text regarding the word \"million(s).\"",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9481935501098633,
                    "sentence": "Oops there seems to be a typo in your text as it should be \"too much\" of \", to much.\"",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9554609060287476,
                    "sentence": "\"L148 needs revision as the sentence structure is awkwardly phrased.\"",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9701082110404968,
                    "sentence": "Sure I can help with that.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9713826775550842,
                    "sentence": "Please provide me with the input text you'd like me to paraphrase.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.922135055065155,
                    "sentence": "I noticed a typo in the table.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9389578104019165,
                    "sentence": "Table 4 indicates whether these outcomes were derived by adding up the significance values.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9209656119346619,
                    "sentence": "Can you tell me the positions of the least significant weights, in the rankings?",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                }
            ],
            "paragraphs": [
                {
                    "start_sentence_index": 0,
                    "num_sentences": 3,
                    "completely_generated_prob": 0.850090677245877
                },
                {
                    "start_sentence_index": 3,
                    "num_sentences": 2,
                    "completely_generated_prob": 0.8254776901813464
                },
                {
                    "start_sentence_index": 5,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 6,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 7,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 8,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 9,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 10,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 11,
                    "num_sentences": 2,
                    "completely_generated_prob": 0.8254776901813464
                },
                {
                    "start_sentence_index": 13,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 14,
                    "num_sentences": 2,
                    "completely_generated_prob": 0.8254776901813464
                }
            ],
            "completely_generated_prob": 0.9964624449751025,
            "class_probabilities": {
                "human": 0,
                "ai": 0.9964624449751025,
                "mixed": 0.0035375550248973927
            },
            "average_generated_prob": 1,
            "predicted_class": "ai",
            "confidence_score": 0.9964624449751025,
            "confidence_category": "high",
            "confidence_scores_raw": {
                "identity": {
                    "ai": 0.9964624449751025,
                    "human": 0,
                    "mixed": 0.0035375550248973927
                }
            },
            "confidence_thresholds_raw": {
                "identity": {
                    "ai": {
                        "reject": 0.7,
                        "low": 0.75,
                        "medium": 0.92
                    },
                    "human": {
                        "reject": 0.7,
                        "low": 0.82,
                        "medium": 0.9126934656800181
                    },
                    "mixed": {
                        "reject": 0.7,
                        "low": 0.8,
                        "medium": 0.88
                    }
                }
            },
            "overall_burstiness": 0,
            "writing_stats": {},
            "subclass": {
                "ai": {
                    "predicted_class": "ai_paraphrased",
                    "result_message": "We are highly confident that this text has been rewritten by AI, an AI paraphraser or AI bypasser",
                    "confidence_score": 0.9997918095840644,
                    "confidence_category": "high",
                    "class_probabilities": {
                        "pure_ai": 0.00020819041593556423,
                        "ai_paraphrased": 0.9997918095840644
                    },
                    "confidence_scores_raw": {
                        "identity": {
                            "pure_ai": 0.00020819031593556425,
                            "ai_paraphrased": 0.9997918095840644
                        }
                    },
                    "confidence_thresholds_raw": {
                        "identity": {
                            "pure_ai": {
                                "reject": 0.7,
                                "low": 0.75,
                                "medium": 0.92
                            },
                            "ai_paraphrased": {
                                "reject": 0.85,
                                "low": 0.9,
                                "medium": 0.95
                            }
                        }
                    }
                },
                "human": {},
                "mixed": {}
            },
            "result_message": "Our detector is highly confident that the text is written by AI.",
            "document_classification": "AI_ONLY",
            "version": "2025-03-13-base",
            "language": "en",
            "pageNumber": 0,
            "inputText": "This research paper introduces a method for improving the conventional word hashing technique used for embedding representations by incorporating a weighted blend of various vectors associated with unique hash functions to depict individual words effectively and efficiently. This method can be applied using a predefined dictionary or in real time training scenarios. The suggested technique is easy to grasp and put into practice resulting in a decrease, in the total number of embedding parameters. \nThe outcomes are quite impressive overall. The approach is elegantly crafted as well.It's worth noting that the hash embeddings seem to work as a means of regularization.However it would enhance Table 2 to provide insights into the vocabulary sizes chosen and the reduction in parameters achieved through hash embeddings.Also might be helpful to include a top notch model for the DBpedia dataset, in Table 3 [1].\nIn Line 255 of the text states that the ensemble would need the amount of training time as a single large model only under the condition that each model in the ensemble has a architecture with fewer non emdedding weights.It is implied that the number of emdedding weights in each network of the ensemble is equal to that of the large model; this would lead to a notably longer training duration, for the ensemble. \nTable 3 showcases the three models; however a more effective comparison could be made by separating the table into methods that solely use embedding and those based on RNN/CNN structures.Additionally it would be intriguing to assess these embeddings in RNN/CNN models that're more sensitive to context.Such an approach could provide insights into their effectiveness and performance, in various scenarios. \nA few quick thoughts; \nI noticed a typo in the text regarding the word \"million(s).\" \nOops there seems to be a typo in your text as it should be \"too much\" of \", to much.\" \n\"L148 needs revision as the sentence structure is awkwardly phrased.\" \nSure I can help with that. Please provide me with the input text you'd like me to paraphrase. \nI noticed a typo in the table. \nTable 4 indicates whether these outcomes were derived by adding up the significance values. Can you tell me the positions of the least significant weights, in the rankings? \n"
        }
    ]
}