{
    "version": "2025-03-13-base",
    "scanId": "f1b67200-2e29-455f-bcf9-b379f2249b43",
    "documents": [
        {
            "sentences": [
                {
                    "generated_prob": 0.9999987483024597,
                    "sentence": "This paper introduces a method for creating arithmetic circuits (ACs) in graphical models by utilizing the multiplication of Probabilistic Sentential Decision Diagram (PSDD) which establishes a unique link between arithmetic circuits and PSDDs.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999979138374329,
                    "sentence": "The results obtained in terms of compilation sizes and times using this PSDD approach highlight enhancements compared to existing compilers; thus emphasizing the effectiveness and straightforwardness of this novel technique in constructing ACs.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999975562095642,
                    "sentence": "The paper is very well written.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999982118606567,
                    "sentence": "I believe it deserves acceptance, with just some minor adjustments needed.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999980330467224,
                    "sentence": "A possible improvement could involve revisiting the title to represent the main advancements made in the paper.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999986886978149,
                    "sentence": "For instance; \"Streamlined Arithmetic Circuit Compilation, for Graphical Models using PSDD Multiplication \" a title that concisely encapsulates the key innovations of the research.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999988675117493,
                    "sentence": "When we talk about terminology in this context; lets think about whether PSDD could fit under the category of Algebraic Sentential Decision Diagram (ASDD) considering its connection to Sentential Decision Diagram (SDD).",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999982118606567,
                    "sentence": "What makes this interesting is that the numerical values in PSDD add up to one.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999987483024597,
                    "sentence": "A similarity we see between Binary Decision Diagram (BDD) and Algebraic Decision Diagram (ADD).",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999985098838806,
                    "sentence": "This idea stems from the comparison, between factors and probabilities.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999978542327881,
                    "sentence": "Suggests that ASDD might be a better term to cover all aspects of these diagrams.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9998244643211365,
                    "sentence": "The first theorem suggests that having both decomposability and determinism is important, for making inference efficient potentially resulting in a linear time complexity based on the size of the AC (Algorithm Configuration).",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9998632073402405,
                    "sentence": "It would be helpful if the authors could clarify why lacking these properties makes inference more challenging to handle.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999274611473083,
                    "sentence": "There appears to be a misunderstanding that any AC representation of a model automatically enables linear time inference based solely on the size of the AC.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999521374702454,
                    "sentence": "If this misunderstanding is true it brings up the query of whether a simple PSDD multiplication method that doesn't maintain decomposability and determinism can lead to effective inference, in the resulting AC system.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999369978904724,
                    "sentence": "In Algorithm 1 of the document provided there seems to be a lack of details regarding the cache described in line 19.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999366402626038,
                    "sentence": "It would be beneficial to clarify whether this cache is designed with the assumption that all subcircuits are cached recursively and thus maintain an ID for all PSDD structures (in a manner similar to ADD structures).",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999103546142578,
                    "sentence": "This clarification is essential, for grasping the execution of the Multiply algorithm.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.999935507774353,
                    "sentence": "Section 6 of the discussion, about AOMDDS doesn't clearly differentiate between PSDDS and AOMDDS so it would be helpful for the authors to explain these distinctions more to help readers better understand the manuscripts contributions.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                }
            ],
            "paragraphs": [
                {
                    "start_sentence_index": 0,
                    "num_sentences": 4,
                    "completely_generated_prob": 0.8708627247549962
                },
                {
                    "start_sentence_index": 4,
                    "num_sentences": 2,
                    "completely_generated_prob": 0.8254776901813464
                },
                {
                    "start_sentence_index": 6,
                    "num_sentences": 5,
                    "completely_generated_prob": 0.8871651474786718
                },
                {
                    "start_sentence_index": 11,
                    "num_sentences": 4,
                    "completely_generated_prob": 0.8708627247549962
                },
                {
                    "start_sentence_index": 15,
                    "num_sentences": 3,
                    "completely_generated_prob": 0.850090677245877
                },
                {
                    "start_sentence_index": 18,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                }
            ],
            "completely_generated_prob": 0.9997932945046397,
            "class_probabilities": {
                "human": 0,
                "ai": 0.9997932945046397,
                "mixed": 0.00020670549536025372
            },
            "average_generated_prob": 1,
            "predicted_class": "ai",
            "confidence_score": 0.9997932945046397,
            "confidence_category": "high",
            "confidence_scores_raw": {
                "identity": {
                    "ai": 0.9997932945046397,
                    "human": 0,
                    "mixed": 0.00020670549536025372
                }
            },
            "confidence_thresholds_raw": {
                "identity": {
                    "ai": {
                        "reject": 0.7,
                        "low": 0.75,
                        "medium": 0.92
                    },
                    "human": {
                        "reject": 0.7,
                        "low": 0.82,
                        "medium": 0.9126934656800181
                    },
                    "mixed": {
                        "reject": 0.7,
                        "low": 0.8,
                        "medium": 0.88
                    }
                }
            },
            "overall_burstiness": 0,
            "writing_stats": {},
            "subclass": {
                "ai": {
                    "predicted_class": "ai_paraphrased",
                    "result_message": "We are highly confident that this text has been rewritten by AI, an AI paraphraser or AI bypasser",
                    "confidence_score": 0.9999818578844979,
                    "confidence_category": "high",
                    "class_probabilities": {
                        "pure_ai": 1.8142115502074698e-05,
                        "ai_paraphrased": 0.9999818578844979
                    },
                    "confidence_scores_raw": {
                        "identity": {
                            "pure_ai": 1.814201550207473e-05,
                            "ai_paraphrased": 0.9999818578844979
                        }
                    },
                    "confidence_thresholds_raw": {
                        "identity": {
                            "pure_ai": {
                                "reject": 0.7,
                                "low": 0.75,
                                "medium": 0.92
                            },
                            "ai_paraphrased": {
                                "reject": 0.85,
                                "low": 0.9,
                                "medium": 0.95
                            }
                        }
                    }
                },
                "human": {},
                "mixed": {}
            },
            "result_message": "Our detector is highly confident that the text is written by AI.",
            "document_classification": "AI_ONLY",
            "version": "2025-03-13-base",
            "language": "en",
            "pageNumber": 0,
            "inputText": "This paper introduces a method for creating arithmetic circuits (ACs) in graphical models by utilizing the multiplication of Probabilistic Sentential Decision Diagram (PSDD) which establishes a unique link between arithmetic circuits and PSDDs. The results obtained in terms of compilation sizes and times using this PSDD approach highlight enhancements compared to existing compilers; thus emphasizing the effectiveness and straightforwardness of this novel technique in constructing ACs. The paper is very well written. I believe it deserves acceptance, with just some minor adjustments needed.  \nA possible improvement could involve revisiting the title to represent the main advancements made in the paper. For instance; \"Streamlined Arithmetic Circuit Compilation, for Graphical Models using PSDD Multiplication \" a title that concisely encapsulates the key innovations of the research.  \nWhen we talk about terminology in this context; lets think about whether PSDD could fit under the category of Algebraic Sentential Decision Diagram (ASDD) considering its connection to Sentential Decision Diagram (SDD). What makes this interesting is that the numerical values in PSDD add up to one. A similarity we see between Binary Decision Diagram (BDD) and Algebraic Decision Diagram (ADD). This idea stems from the comparison, between factors and probabilities. Suggests that ASDD might be a better term to cover all aspects of these diagrams. \nThe first theorem suggests that having both decomposability and determinism is important, for making inference efficient potentially resulting in a linear time complexity based on the size of the AC (Algorithm Configuration). It would be helpful if the authors could clarify why lacking these properties makes inference more challenging to handle. There appears to be a misunderstanding that any AC representation of a model automatically enables linear time inference based solely on the size of the AC. If this misunderstanding is true it brings up the query of whether a simple PSDD multiplication method that doesn't maintain decomposability and determinism can lead to effective inference, in the resulting AC system. \nIn Algorithm 1 of the document provided there seems to be a lack of details regarding the cache described in line 19. It would be beneficial to clarify whether this cache is designed with the assumption that all subcircuits are cached recursively and thus maintain an ID for all PSDD structures (in a manner similar to ADD structures). This clarification is essential, for grasping the execution of the Multiply algorithm. \nSection 6 of the discussion, about AOMDDS doesn't clearly differentiate between PSDDS and AOMDDS so it would be helpful for the authors to explain these distinctions more to help readers better understand the manuscripts contributions. "
        }
    ],
    "editorDocumentId": null
}