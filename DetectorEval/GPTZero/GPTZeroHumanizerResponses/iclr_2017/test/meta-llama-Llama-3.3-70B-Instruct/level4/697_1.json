{
    "version": "2025-03-13-base",
    "scanId": "f24dc706-3b76-41ce-b23d-9baa822fa3f0",
    "documents": [
        {
            "sentences": [
                {
                    "generated_prob": 0.999996542930603,
                    "sentence": "This study delves into using Grassmannian SGD to enhance word embeddings by optimizing the gram negative sampling (SGNS) objective function; however it's not clear how this optimization method differs significantly from the conventional SGD approach in terms of benefits since both lack theoretical guarantees and show only minor enhancements in empirical comparisons.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999939799308777,
                    "sentence": "Enough the idea of projector splitting algorithms has been used before in different machine learning scenarios as evidenced by Vandereyckens work, on matrix completion and Sepulchres study on matrix factorization.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999942183494568,
                    "sentence": "There hasn't been an examination of the computational expenses linked with both methods yet; for instance there's no mention of the cost involved in executing SVD in equation (7).",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999945163726807,
                    "sentence": "It's important to highlight that a cost effective low rank update can be carried out on the SVD with a rank one update demanding O(nd).",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.999994695186615,
                    "sentence": "Therefore it would be helpful if the computational cost, per iteration of the suggested method is explained clearly for a grasp of its real world implications.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                }
            ],
            "paragraphs": [
                {
                    "start_sentence_index": 0,
                    "num_sentences": 2,
                    "completely_generated_prob": 0.8254776901813464
                },
                {
                    "start_sentence_index": 2,
                    "num_sentences": 3,
                    "completely_generated_prob": 0.850090677245877
                }
            ],
            "completely_generated_prob": 1,
            "class_probabilities": {
                "human": 0,
                "ai": 1,
                "mixed": 0
            },
            "average_generated_prob": 1,
            "predicted_class": "ai",
            "confidence_score": 1,
            "confidence_category": "high",
            "confidence_scores_raw": {
                "identity": {
                    "ai": 1,
                    "human": 0,
                    "mixed": 0
                }
            },
            "confidence_thresholds_raw": {
                "identity": {
                    "ai": {
                        "reject": 0.7,
                        "low": 0.75,
                        "medium": 0.92
                    },
                    "human": {
                        "reject": 0.7,
                        "low": 0.82,
                        "medium": 0.9126934656800181
                    },
                    "mixed": {
                        "reject": 0.7,
                        "low": 0.8,
                        "medium": 0.88
                    }
                }
            },
            "overall_burstiness": 0,
            "writing_stats": {},
            "subclass": {
                "ai": {
                    "predicted_class": "ai_paraphrased",
                    "result_message": "We are highly confident that this text has been rewritten by AI, an AI paraphraser or AI bypasser",
                    "confidence_score": 0.9999978582682584,
                    "confidence_category": "high",
                    "class_probabilities": {
                        "pure_ai": 2.1417317416894747e-06,
                        "ai_paraphrased": 0.9999978582682584
                    },
                    "confidence_scores_raw": {
                        "identity": {
                            "pure_ai": 2.1416317416895045e-06,
                            "ai_paraphrased": 0.9999978582682584
                        }
                    },
                    "confidence_thresholds_raw": {
                        "identity": {
                            "pure_ai": {
                                "reject": 0.7,
                                "low": 0.75,
                                "medium": 0.92
                            },
                            "ai_paraphrased": {
                                "reject": 0.85,
                                "low": 0.9,
                                "medium": 0.95
                            }
                        }
                    }
                },
                "human": {},
                "mixed": {}
            },
            "result_message": "Our detector is highly confident that the text is written by AI.",
            "document_classification": "AI_ONLY",
            "version": "2025-03-13-base",
            "language": "en",
            "pageNumber": 0,
            "inputText": "This study delves into using Grassmannian SGD to enhance word embeddings by optimizing the gram negative sampling (SGNS) objective function; however it's not clear how this optimization method differs significantly from the conventional SGD approach in terms of benefits since both lack theoretical guarantees and show only minor enhancements in empirical comparisons. Enough the idea of projector splitting algorithms has been used before in different machine learning scenarios as evidenced by Vandereyckens work, on matrix completion and Sepulchres study on matrix factorization. \nThere hasn't been an examination of the computational expenses linked with both methods yet; for instance there's no mention of the cost involved in executing SVD in equation (7). It's important to highlight that a cost effective low rank update can be carried out on the SVD with a rank one update demanding O(nd). Therefore it would be helpful if the computational cost, per iteration of the suggested method is explained clearly for a grasp of its real world implications. "
        }
    ],
    "editorDocumentId": null
}