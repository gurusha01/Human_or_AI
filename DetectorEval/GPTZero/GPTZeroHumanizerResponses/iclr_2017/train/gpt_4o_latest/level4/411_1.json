{
    "version": "2025-03-13-base",
    "scanId": "88e9d27b-94c6-4c54-a5f7-d4bf4cae5376",
    "documents": [
        {
            "sentences": [
                {
                    "generated_prob": 0.9995713233947754,
                    "sentence": "This research builds upon STOKE (Schkufza et al., 2013) a tool, for optimizing program binaries at a level of efficiency and effectiveness.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9996217489242554,
                    "sentence": "STROKE works by taking a program and suggesting changes according to a predefined set of modifications options.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.999176025390625,
                    "sentence": "These suggestions are either.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9994208812713623,
                    "sentence": "Denied based on the Metropolis Hastings standard that evaluates both accuracy and speed of the program.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9994940757751465,
                    "sentence": "This approach guarantees that the process reaches high performing programs effectively through MCMC iterations.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9992721676826477,
                    "sentence": "The main focus of this study is the development of a trained proposal distribution that takes into account program characteristics (expressed as a collection of all words).",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9994014501571655,
                    "sentence": "The authors evaluate their approach against two reference points.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9995414018630981,
                    "sentence": "One using a proposal distribution and another where the proposal distribution is developed without considering program features.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9994069337844849,
                    "sentence": "Based on the experiments conducted it was observed that the proposed technique performs better, than the reference points.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9995025396347046,
                    "sentence": "However the impact of this study on ICLR seems to be restricted The paper doesn't push the boundaries in representation learning Instead it employs neural networks and REINFORCE for a task involving non differentiable elements Moreover superoptimizations relevance may not match the preferences of ICLRs audience Conferences, like AAA or UAI might be better suited for this research",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999956488609314,
                    "sentence": "The new technique does seem original because conventional MCMC based generation methods do not include learning elements, in them as described by the authors of the paper; to make their research stand out even further it would be beneficial if they could show how their approach can be applied to various other tasks or wider fields where MH MCMC is employed and a learned proposal distribution could bring substantial advantages.This way they can showcase an impact beyond just superoptimization which alone might not be enough to make the work truly groundbreaking.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999932646751404,
                    "sentence": "It is not clear if the neural network is engaging in representation learning or not using bag of word features to depict programs restricts the neural network to only grasping basic relationships between opcode instances and advantageous changes made to them This method fails to grasp the essence of program semantics An intriguing enhancement would be utilizing a model such as Tree LSTM specially crafted for assimilating semantic representations of programs The straightforward nature of the suggested learning approach detracts from the papers prospects as a compelling contender, for approval",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999951124191284,
                    "sentence": "Improving the quality of this review could be achieved by providing clarifications in response, to the reviewers questions and for that thank you.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                }
            ],
            "paragraphs": [
                {
                    "start_sentence_index": 0,
                    "num_sentences": 9,
                    "completely_generated_prob": 0.9257822263275673
                },
                {
                    "start_sentence_index": 9,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 10,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 11,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 12,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                }
            ],
            "completely_generated_prob": 0.9997932945046397,
            "class_probabilities": {
                "human": 0,
                "ai": 0.9997932945046397,
                "mixed": 0.00020670549536025372
            },
            "average_generated_prob": 1,
            "predicted_class": "ai",
            "confidence_score": 0.9997932945046397,
            "confidence_category": "high",
            "confidence_scores_raw": {
                "identity": {
                    "ai": 0.9997932945046397,
                    "human": 0,
                    "mixed": 0.00020670549536025372
                }
            },
            "confidence_thresholds_raw": {
                "identity": {
                    "ai": {
                        "reject": 0.7,
                        "low": 0.75,
                        "medium": 0.92
                    },
                    "human": {
                        "reject": 0.7,
                        "low": 0.82,
                        "medium": 0.9126934656800181
                    },
                    "mixed": {
                        "reject": 0.7,
                        "low": 0.8,
                        "medium": 0.88
                    }
                }
            },
            "overall_burstiness": 0,
            "writing_stats": {},
            "subclass": {
                "ai": {
                    "predicted_class": "ai_paraphrased",
                    "result_message": "We are highly confident that this text has been rewritten by AI, an AI paraphraser or AI bypasser",
                    "confidence_score": 0.9999945993676552,
                    "confidence_category": "high",
                    "class_probabilities": {
                        "pure_ai": 5.400632344811039e-06,
                        "ai_paraphrased": 0.9999945993676552
                    },
                    "confidence_scores_raw": {
                        "identity": {
                            "pure_ai": 5.4005323448110694e-06,
                            "ai_paraphrased": 0.9999945993676552
                        }
                    },
                    "confidence_thresholds_raw": {
                        "identity": {
                            "pure_ai": {
                                "reject": 0.7,
                                "low": 0.75,
                                "medium": 0.92
                            },
                            "ai_paraphrased": {
                                "reject": 0.85,
                                "low": 0.9,
                                "medium": 0.95
                            }
                        }
                    }
                },
                "human": {},
                "mixed": {}
            },
            "result_message": "Our detector is highly confident that the text is written by AI.",
            "document_classification": "AI_ONLY",
            "version": "2025-03-13-base",
            "language": "en",
            "pageNumber": 0,
            "inputText": "This research builds upon STOKE (Schkufza et al., 2013) a tool, for optimizing program binaries at a level of efficiency and effectiveness. STROKE works by taking a program and suggesting changes according to a predefined set of modifications options. These suggestions are either. Denied based on the Metropolis Hastings standard that evaluates both accuracy and speed of the program. This approach guarantees that the process reaches high performing programs effectively through MCMC iterations. The main focus of this study is the development of a trained proposal distribution that takes into account program characteristics (expressed as a collection of all words). The authors evaluate their approach against two reference points. One using a proposal distribution and another where the proposal distribution is developed without considering program features. Based on the experiments conducted it was observed that the proposed technique performs better, than the reference points. \nHowever the impact of this study on ICLR seems to be restricted The paper doesn't push the boundaries in representation learning Instead it employs neural networks and REINFORCE for a task involving non differentiable elements Moreover superoptimizations relevance may not match the preferences of ICLRs audience Conferences, like AAA or UAI might be better suited for this research\nThe new technique does seem original because conventional MCMC based generation methods do not include learning elements, in them as described by the authors of the paper; to make their research stand out even further it would be beneficial if they could show how their approach can be applied to various other tasks or wider fields where MH MCMC is employed and a learned proposal distribution could bring substantial advantages.This way they can showcase an impact beyond just superoptimization which alone might not be enough to make the work truly groundbreaking. \nIt is not clear if the neural network is engaging in representation learning or not using bag of word features to depict programs restricts the neural network to only grasping basic relationships between opcode instances and advantageous changes made to them This method fails to grasp the essence of program semantics An intriguing enhancement would be utilizing a model such as Tree LSTM specially crafted for assimilating semantic representations of programs The straightforward nature of the suggested learning approach detracts from the papers prospects as a compelling contender, for approval\nImproving the quality of this review could be achieved by providing clarifications in response, to the reviewers questions and for that thank you. "
        }
    ],
    "editorDocumentId": null
}