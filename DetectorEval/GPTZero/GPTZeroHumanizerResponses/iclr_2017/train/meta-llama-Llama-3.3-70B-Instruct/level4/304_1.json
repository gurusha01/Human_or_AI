{
    "version": "2025-03-13-base",
    "scanId": "aae0eac6-f0c4-420c-8c7b-5e19eeec59ad",
    "documents": [
        {
            "sentences": [
                {
                    "generated_prob": 0.9999961853027344,
                    "sentence": "This paper highlights the importance of managing recursion in neural programming structures to improve adaptability to diverse test scenarios and enhance learning efficiency with limited training data available for analysis purposes.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999951720237732,
                    "sentence": "The core focus of this study revolves around expanding on the concept of Neural Programmer Interpreters first proposed by Reed & de Freitas at ICLR 2016 which involves acquiring knowledge from program traces; a key differentiator lies in integrating calls into the training traces, for NPI models.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999963641166687,
                    "sentence": "The writers show how they confirm accuracy by testing a number of basic scenarios and simplifying principles to illustrate the NPI frameworks ability to accurately solve intricate challenges such, as Bubblesort and the Tower of Hanoi.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999960064888,
                    "sentence": "The authors highlight the straightforwardness of the concept by recognizing that the key change lies in the execution paths given to the training process.This prompts questions about the impact of this method - for example; Is the neural programming problem adequately addressed with access to execution traces?",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999955892562866,
                    "sentence": "Was the problem basic, from the start?For example if we use this approach on a range of data like MNIST digits, which requires organizing digits from largest to smallest we can separate the identification of digits from the logic of the program.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999959468841553,
                    "sentence": "This simplifies the problem to recognizing MNIST digits and mastering the sorting of symbols through techniques like bubble sort.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999959468841553,
                    "sentence": "A key question that arises is when having access, to execution records does not aid in making inferences using this method emphasizing the importance of exploring the constraints and possibilities of this approach.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                }
            ],
            "paragraphs": [
                {
                    "start_sentence_index": 0,
                    "num_sentences": 3,
                    "completely_generated_prob": 0.850090677245877
                },
                {
                    "start_sentence_index": 3,
                    "num_sentences": 4,
                    "completely_generated_prob": 0.8708627247549962
                }
            ],
            "completely_generated_prob": 1,
            "class_probabilities": {
                "human": 0,
                "ai": 1,
                "mixed": 0
            },
            "average_generated_prob": 1,
            "predicted_class": "ai",
            "confidence_score": 1,
            "confidence_category": "high",
            "confidence_scores_raw": {
                "identity": {
                    "ai": 1,
                    "human": 0,
                    "mixed": 0
                }
            },
            "confidence_thresholds_raw": {
                "identity": {
                    "ai": {
                        "reject": 0.7,
                        "low": 0.75,
                        "medium": 0.92
                    },
                    "human": {
                        "reject": 0.7,
                        "low": 0.82,
                        "medium": 0.9126934656800181
                    },
                    "mixed": {
                        "reject": 0.7,
                        "low": 0.8,
                        "medium": 0.88
                    }
                }
            },
            "overall_burstiness": 0,
            "writing_stats": {},
            "subclass": {
                "ai": {
                    "predicted_class": "ai_paraphrased",
                    "result_message": "We are highly confident that this text has been rewritten by AI, an AI paraphraser or AI bypasser",
                    "confidence_score": 0.9999970119355055,
                    "confidence_category": "high",
                    "class_probabilities": {
                        "pure_ai": 2.988064494535116e-06,
                        "ai_paraphrased": 0.9999970119355055
                    },
                    "confidence_scores_raw": {
                        "identity": {
                            "pure_ai": 2.987964494535146e-06,
                            "ai_paraphrased": 0.9999970119355055
                        }
                    },
                    "confidence_thresholds_raw": {
                        "identity": {
                            "pure_ai": {
                                "reject": 0.7,
                                "low": 0.75,
                                "medium": 0.92
                            },
                            "ai_paraphrased": {
                                "reject": 0.85,
                                "low": 0.9,
                                "medium": 0.95
                            }
                        }
                    }
                },
                "human": {},
                "mixed": {}
            },
            "result_message": "Our detector is highly confident that the text is written by AI.",
            "document_classification": "AI_ONLY",
            "version": "2025-03-13-base",
            "language": "en",
            "pageNumber": 0,
            "inputText": "This paper highlights the importance of managing recursion in neural programming structures to improve adaptability to diverse test scenarios and enhance learning efficiency with limited training data available for analysis purposes. The core focus of this study revolves around expanding on the concept of Neural Programmer Interpreters first proposed by Reed & de Freitas at ICLR 2016 which involves acquiring knowledge from program traces; a key differentiator lies in integrating calls into the training traces, for NPI models. The writers show how they confirm accuracy by testing a number of basic scenarios and simplifying principles to illustrate the NPI frameworks ability to accurately solve intricate challenges such, as Bubblesort and the Tower of Hanoi. \nThe authors highlight the straightforwardness of the concept by recognizing that the key change lies in the execution paths given to the training process.This prompts questions about the impact of this method â€“ for example; Is the neural programming problem adequately addressed with access to execution traces? Was the problem basic, from the start?For example if we use this approach on a range of data like MNIST digits, which requires organizing digits from largest to smallest we can separate the identification of digits from the logic of the program. This simplifies the problem to recognizing MNIST digits and mastering the sorting of symbols through techniques like bubble sort. A key question that arises is when having access, to execution records does not aid in making inferences using this method emphasizing the importance of exploring the constraints and possibilities of this approach. "
        }
    ],
    "editorDocumentId": null
}