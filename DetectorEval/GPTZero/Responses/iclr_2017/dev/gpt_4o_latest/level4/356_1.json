{
    "version": "2025-01-09-base",
    "scanId": "0b518910-1c06-48f4-ae44-45b9c7bd565a",
    "documents": [
        {
            "sentences": [
                {
                    "generated_prob": 0.9992845058441162,
                    "sentence": "The paper introduces a method for synthesizing string manipulation programs using a set of input-output examples.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9976024627685547,
                    "sentence": "It focuses on a restricted class of programs defined by a simple context-free grammar, which is sufficient to address string manipulation tasks from the FlashFill benchmark.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9980472326278687,
                    "sentence": "The authors propose a probabilistic generative model, the Recursive-Reverse-Recursive Neural Network (R3NN), which assigns probabilities to program parse trees through a combination of bottom-up and top-down passes.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9941060543060303,
                    "sentence": "Experimental results are provided on a synthetic dataset and the Microsoft Excel FlashFill benchmark.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.992088794708252,
                    "sentence": "Program synthesis is a significant problem that has garnered substantial interest from the deep learning community in recent years.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9897960424423218,
                    "sentence": "The paper's approach, which leverages parse trees and recursive neural networks, is intriguing and holds promise.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9622570872306824,
                    "sentence": "However, the model's complexity and lack of clarity in several sections (detailed below) raise concerns.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9608759880065918,
                    "sentence": "On the downside, the experimental results are particularly weak, and the paper does not appear ready for publication in its current form.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9820268154144287,
                    "sentence": "Initially, I was optimistic about the paper, but my concerns grew upon realizing that the method achieves only 38% accuracy on the FlashFill benchmark with 5 input-output examples, and this performance drops further to 29% when 10 examples are used.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9753134250640869,
                    "sentence": "This unexpected behavior surprised the authors as well, and they proposed hypotheses to explain it.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9834722280502319,
                    "sentence": "However, I see this as a critical issue, suggesting either a bug in the implementation or a fundamental limitation of the model.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9931005239486694,
                    "sentence": "For a program synthesis model to be practical, it must handle multiple input-output examples effectively, as complex programs often require several examples to resolve ambiguities.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9902809262275696,
                    "sentence": "Given the experimental shortcomings, I do not believe the paper is ready for publication at this time.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9890973567962646,
                    "sentence": "Therefore, I recommend a weak reject.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9977253079414368,
                    "sentence": "That said, I encourage the authors to address the concerns outlined below and resubmit, as the core idea of the paper is promising.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9981510043144226,
                    "sentence": "Additional comments:",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.996277928352356,
                    "sentence": "I found the model unclear in several areas:",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.997918963432312,
                    "sentence": "- How is the probability distribution normalized?",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9983018636703491,
                    "sentence": "Given the bottom-up and top-down evaluation of potentials, does this require enumerating all possible completions of a program and comparing their exponentiated potentials?",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.995477557182312,
                    "sentence": "If so, does this limit the model's applicability to longer programs due to the computational cost of enumerating completions?",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9985385537147522,
                    "sentence": "- What happens if only 1 input-output pair is used per program instead of 5?",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9963668584823608,
                    "sentence": "Does this improve the results?",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.99869704246521,
                    "sentence": "- Section 5.1.2 is difficult to follow.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9970166683197021,
                    "sentence": "Could you clarify this section, perhaps with examples?",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.998522162437439,
                    "sentence": "Does your input-output representation assume a fixed number of examples across all tasks (e.g., always 5 or 10 examples per task)?",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9986303448677063,
                    "sentence": "Regarding the experimental results:",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9988368153572083,
                    "sentence": "- Could you provide baseline results on the FlashFill benchmark from prior work for comparison?",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9985690712928772,
                    "sentence": "- Is your method restricted to short programs, given the choice of 13 as the maximum number of instructions?",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9986225366592407,
                    "sentence": "- Is a program considered correct only if it matches the test program exactly, or is it deemed correct if it produces the correct outputs on a held-out set of input-output examples?",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9973831176757812,
                    "sentence": "- When using 100 or more program samples, do you report the accuracy of the best program out of 100 (i.e., recall), or do you first filter programs based on training input-output pairs and then evaluate the selected program?",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.996573269367218,
                    "sentence": "Finally, the paper exceeds the recommended 8-page limit.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9963706135749817,
                    "sentence": "Please consider condensing it to improve readability and adhere to the guidelines.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                }
            ],
            "paragraphs": [
                {
                    "start_sentence_index": 0,
                    "num_sentences": 4,
                    "completely_generated_prob": 0.8708627247549962
                },
                {
                    "start_sentence_index": 4,
                    "num_sentences": 8,
                    "completely_generated_prob": 0.9187750751329665
                },
                {
                    "start_sentence_index": 12,
                    "num_sentences": 3,
                    "completely_generated_prob": 0.850090677245877
                },
                {
                    "start_sentence_index": 15,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 16,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 17,
                    "num_sentences": 3,
                    "completely_generated_prob": 0.850090677245877
                },
                {
                    "start_sentence_index": 20,
                    "num_sentences": 2,
                    "completely_generated_prob": 0.8254776901813464
                },
                {
                    "start_sentence_index": 22,
                    "num_sentences": 3,
                    "completely_generated_prob": 0.850090677245877
                },
                {
                    "start_sentence_index": 25,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 26,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 27,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 28,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 29,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 30,
                    "num_sentences": 2,
                    "completely_generated_prob": 0.8254776901813464
                }
            ],
            "completely_generated_prob": 0.9997847017652333,
            "class_probabilities": {
                "human": 0,
                "ai": 0.9997847017652333,
                "mixed": 0.00021529823476680056
            },
            "average_generated_prob": 1,
            "predicted_class": "ai",
            "confidence_score": 0.9997847017652333,
            "confidence_category": "high",
            "confidence_scores_raw": {
                "identity": {
                    "ai": 0.9997847017652333,
                    "human": 0,
                    "mixed": 0.00021529823476680056
                }
            },
            "confidence_thresholds_raw": {
                "identity": {
                    "ai": {
                        "reject": 0.65,
                        "low": 0.75,
                        "medium": 0.92
                    },
                    "human": {
                        "reject": 0.7,
                        "low": 0.82,
                        "medium": 0.92
                    },
                    "mixed": {
                        "reject": 0.7,
                        "low": 0.8,
                        "medium": 0.88
                    }
                }
            },
            "overall_burstiness": 0,
            "writing_stats": {},
            "subclass": {
                "ai": {
                    "predicted_class": "pure_ai",
                    "result_message": "",
                    "confidence_score": 0.9999999998,
                    "confidence_category": "high",
                    "class_probabilities": {
                        "pure_ai": 0.9999999999,
                        "ai_paraphrased": 9.999999997e-11
                    },
                    "confidence_scores_raw": {
                        "identity": {
                            "pure_ai": 0.9999999998,
                            "ai_paraphrased": 9.999999997e-11
                        }
                    },
                    "confidence_thresholds_raw": {
                        "identity": {
                            "pure_ai": {
                                "reject": 0.65,
                                "low": 0.75,
                                "medium": 0.92
                            },
                            "ai_paraphrased": {
                                "reject": 0.85,
                                "low": 0.9,
                                "medium": 0.95
                            }
                        }
                    }
                },
                "human": {},
                "mixed": {}
            },
            "result_message": "Our detector is highly confident that the text is written by AI.",
            "document_classification": "AI_ONLY",
            "version": "2025-01-09-base",
            "language": "en",
            "inputText": "The paper introduces a method for synthesizing string manipulation programs using a set of input-output examples. It focuses on a restricted class of programs defined by a simple context-free grammar, which is sufficient to address string manipulation tasks from the FlashFill benchmark. The authors propose a probabilistic generative model, the Recursive-Reverse-Recursive Neural Network (R3NN), which assigns probabilities to program parse trees through a combination of bottom-up and top-down passes. Experimental results are provided on a synthetic dataset and the Microsoft Excel FlashFill benchmark.\nProgram synthesis is a significant problem that has garnered substantial interest from the deep learning community in recent years. The paper's approach, which leverages parse trees and recursive neural networks, is intriguing and holds promise. However, the model's complexity and lack of clarity in several sections (detailed below) raise concerns. On the downside, the experimental results are particularly weak, and the paper does not appear ready for publication in its current form. Initially, I was optimistic about the paper, but my concerns grew upon realizing that the method achieves only 38% accuracy on the FlashFill benchmark with 5 input-output examples, and this performance drops further to 29% when 10 examples are used. This unexpected behavior surprised the authors as well, and they proposed hypotheses to explain it. However, I see this as a critical issue, suggesting either a bug in the implementation or a fundamental limitation of the model. For a program synthesis model to be practical, it must handle multiple input-output examples effectively, as complex programs often require several examples to resolve ambiguities.\nGiven the experimental shortcomings, I do not believe the paper is ready for publication at this time. Therefore, I recommend a weak reject. That said, I encourage the authors to address the concerns outlined below and resubmit, as the core idea of the paper is promising.\nAdditional comments:\nI found the model unclear in several areas:\n- How is the probability distribution normalized? Given the bottom-up and top-down evaluation of potentials, does this require enumerating all possible completions of a program and comparing their exponentiated potentials? If so, does this limit the model's applicability to longer programs due to the computational cost of enumerating completions?\n- What happens if only 1 input-output pair is used per program instead of 5? Does this improve the results?\n- Section 5.1.2 is difficult to follow. Could you clarify this section, perhaps with examples? Does your input-output representation assume a fixed number of examples across all tasks (e.g., always 5 or 10 examples per task)?\nRegarding the experimental results:\n- Could you provide baseline results on the FlashFill benchmark from prior work for comparison?\n- Is your method restricted to short programs, given the choice of 13 as the maximum number of instructions?\n- Is a program considered correct only if it matches the test program exactly, or is it deemed correct if it produces the correct outputs on a held-out set of input-output examples?\n- When using 100 or more program samples, do you report the accuracy of the best program out of 100 (i.e., recall), or do you first filter programs based on training input-output pairs and then evaluate the selected program?\nFinally, the paper exceeds the recommended 8-page limit. Please consider condensing it to improve readability and adhere to the guidelines."
        }
    ]
}