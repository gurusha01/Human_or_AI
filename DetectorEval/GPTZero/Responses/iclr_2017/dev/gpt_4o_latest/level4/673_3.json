{
    "version": "2025-01-09-base",
    "scanId": "43fe4c5f-8918-4a7a-97ba-fdaa1191cd83",
    "documents": [
        {
            "sentences": [
                {
                    "generated_prob": 0.9984754920005798,
                    "sentence": "I do not find this paper particularly convincing.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9985790848731995,
                    "sentence": "The core idea appears to involve integrating a fast neighbor search mechanism into a memory-augmented network to enable scalable memory lookups.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9985445141792297,
                    "sentence": "However, this concept was already central to the work of Rae et al.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9992614388465881,
                    "sentence": "There exist several well-established neighbor search methods, yet the authors opt to use their own approach without benchmarking it against these standardized methods.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9996471405029297,
                    "sentence": "Furthermore, the chosen test problem does not seem to necessitate the use of vector-based fast nearest neighbor search, as hashing could be applied to the text instead.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9996929168701172,
                    "sentence": "Additionally, the repeated distinction made between \"MIPS\" and \"NNS\" feels unnecessary and distracting; most libraries capable of performing one can handle the other, or the inputs can be adjusted to transition between the two tasks.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9997029900550842,
                    "sentence": "In fact, the authors themselves demonstrate this when converting to the \"MCSS\" problem.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                }
            ],
            "paragraphs": [
                {
                    "start_sentence_index": 0,
                    "num_sentences": 7,
                    "completely_generated_prob": 0.9103421900070616
                }
            ],
            "completely_generated_prob": 1,
            "class_probabilities": {
                "human": 0,
                "ai": 1,
                "mixed": 0
            },
            "average_generated_prob": 1,
            "predicted_class": "ai",
            "confidence_score": 1,
            "confidence_category": "high",
            "confidence_scores_raw": {
                "identity": {
                    "ai": 1,
                    "human": 0,
                    "mixed": 0
                }
            },
            "confidence_thresholds_raw": {
                "identity": {
                    "ai": {
                        "reject": 0.65,
                        "low": 0.75,
                        "medium": 0.92
                    },
                    "human": {
                        "reject": 0.7,
                        "low": 0.82,
                        "medium": 0.92
                    },
                    "mixed": {
                        "reject": 0.7,
                        "low": 0.8,
                        "medium": 0.88
                    }
                }
            },
            "overall_burstiness": 0,
            "writing_stats": {},
            "subclass": {
                "ai": {
                    "predicted_class": "pure_ai",
                    "result_message": "",
                    "confidence_score": 0.9999999998,
                    "confidence_category": "high",
                    "class_probabilities": {
                        "pure_ai": 0.9999999999,
                        "ai_paraphrased": 9.999999997e-11
                    },
                    "confidence_scores_raw": {
                        "identity": {
                            "pure_ai": 0.9999999998,
                            "ai_paraphrased": 9.999999997e-11
                        }
                    },
                    "confidence_thresholds_raw": {
                        "identity": {
                            "pure_ai": {
                                "reject": 0.65,
                                "low": 0.75,
                                "medium": 0.92
                            },
                            "ai_paraphrased": {
                                "reject": 0.85,
                                "low": 0.9,
                                "medium": 0.95
                            }
                        }
                    }
                },
                "human": {},
                "mixed": {}
            },
            "result_message": "Our detector is highly confident that the text is written by AI.",
            "document_classification": "AI_ONLY",
            "version": "2025-01-09-base",
            "language": "en",
            "inputText": "I do not find this paper particularly convincing. The core idea appears to involve integrating a fast neighbor search mechanism into a memory-augmented network to enable scalable memory lookups. However, this concept was already central to the work of Rae et al. There exist several well-established neighbor search methods, yet the authors opt to use their own approach without benchmarking it against these standardized methods. Furthermore, the chosen test problem does not seem to necessitate the use of vector-based fast nearest neighbor search, as hashing could be applied to the text instead. Additionally, the repeated distinction made between \"MIPS\" and \"NNS\" feels unnecessary and distracting; most libraries capable of performing one can handle the other, or the inputs can be adjusted to transition between the two tasks. In fact, the authors themselves demonstrate this when converting to the \"MCSS\" problem."
        }
    ]
}