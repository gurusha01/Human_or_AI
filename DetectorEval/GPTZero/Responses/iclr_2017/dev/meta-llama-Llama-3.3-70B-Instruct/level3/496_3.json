{
    "version": "2025-01-09-base",
    "scanId": "8ec4f733-bb59-4601-b3f3-00be4ba45918",
    "documents": [
        {
            "sentences": [
                {
                    "generated_prob": 0.9912315607070923,
                    "sentence": "This paper proposes a novel technique called Neuro-Symbolic Program Synthesis (NSPS) that learns to generate a program incrementally without the need for an explicit search.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9715971946716309,
                    "sentence": "The approach is based on two novel neural modules: the cross correlation I/O network and the Recursive-Reverse-Recursive Neural Network (R3NN).",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9812850952148438,
                    "sentence": "The R3NN model encodes partial trees in a Domain-Specific Language (DSL) and assigns probabilities to different non-terminals in a partial derivation and corresponding expansions to guide the search for complete derivations.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9807541370391846,
                    "sentence": "The paper tackles the specific question of program induction, which is a fundamental problem in Machine Learning and Artificial Intelligence.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.984353244304657,
                    "sentence": "The approach is well-motivated, building on recent progress in deep learning and program synthesis.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9927078485488892,
                    "sentence": "The paper presents a strong and novel model with promising experimental results, demonstrating the effectiveness of NSPS in constructing programs from new input-output examples and even constructing new programs for tasks that it had never observed before during training.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9842584133148193,
                    "sentence": "I decide to accept this paper with two key reasons: (1) the paper proposes a novel and well-motivated approach to program induction, and (2) the experimental results demonstrate the effectiveness of the approach in constructing programs from new input-output examples.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.997657060623169,
                    "sentence": "The paper provides supporting arguments for the reasons for the decision, including the thorough experiment section, which shows that the R3NN model obtains competitive performance on several challenging tasks and captures natural boundaries.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9968653917312622,
                    "sentence": "The paper also presents a strong and novel model, which is a significant contribution to the field of program induction.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9917845129966736,
                    "sentence": "To improve the paper, I provide additional feedback, including the need to address minor issues with writing and related work.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9955579042434692,
                    "sentence": "Specifically, the paper is missing some references, including Mikolov et al.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9934271574020386,
                    "sentence": "(2010), Lin et al.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9966368675231934,
                    "sentence": "(1996), and Socher's work, which should be included to provide a more comprehensive overview of the related work.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9937465786933899,
                    "sentence": "Additionally, there are some errors in the related work section, including incorrect attribution of the clockwork RNN and gradient clipping.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9960119724273682,
                    "sentence": "To clarify my understanding of the paper and provide additional evidence, I would like to ask the authors the following questions:",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.997431218624115,
                    "sentence": "* Can you provide more details on the training process, including the hyperparameter settings and the computational resources used?",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9959099292755127,
                    "sentence": "* How do you plan to address the scalability issues in training with programs of larger size?",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9987027645111084,
                    "sentence": "* Can you provide more examples of the programs constructed by the NSPS approach, including programs that require 4 or more Concat operations?",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9992386698722839,
                    "sentence": "* How do you plan to extend the NSPS approach to other domains, such as program synthesis for numerical computations or data structures?",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                }
            ],
            "paragraphs": [
                {
                    "start_sentence_index": 0,
                    "num_sentences": 3,
                    "completely_generated_prob": 0.850090677245877
                },
                {
                    "start_sentence_index": 3,
                    "num_sentences": 3,
                    "completely_generated_prob": 0.850090677245877
                },
                {
                    "start_sentence_index": 6,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 7,
                    "num_sentences": 2,
                    "completely_generated_prob": 0.8254776901813464
                },
                {
                    "start_sentence_index": 9,
                    "num_sentences": 5,
                    "completely_generated_prob": 0.8871651474786718
                },
                {
                    "start_sentence_index": 14,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 15,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 16,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 17,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 18,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                }
            ],
            "completely_generated_prob": 0.9984800378301695,
            "class_probabilities": {
                "human": 0,
                "ai": 0.9984800378301695,
                "mixed": 0.0015199621698304396
            },
            "average_generated_prob": 1,
            "predicted_class": "ai",
            "confidence_score": 0.9984800378301695,
            "confidence_category": "high",
            "confidence_scores_raw": {
                "identity": {
                    "ai": 0.9984800378301695,
                    "human": 0,
                    "mixed": 0.0015199621698304396
                }
            },
            "confidence_thresholds_raw": {
                "identity": {
                    "ai": {
                        "reject": 0.65,
                        "low": 0.75,
                        "medium": 0.92
                    },
                    "human": {
                        "reject": 0.7,
                        "low": 0.82,
                        "medium": 0.92
                    },
                    "mixed": {
                        "reject": 0.7,
                        "low": 0.8,
                        "medium": 0.88
                    }
                }
            },
            "overall_burstiness": 0,
            "writing_stats": {},
            "subclass": {
                "ai": {
                    "predicted_class": "pure_ai",
                    "result_message": "",
                    "confidence_score": 0.9999999998,
                    "confidence_category": "high",
                    "class_probabilities": {
                        "pure_ai": 0.9999999999,
                        "ai_paraphrased": 9.999999997e-11
                    },
                    "confidence_scores_raw": {
                        "identity": {
                            "pure_ai": 0.9999999998,
                            "ai_paraphrased": 9.999999997e-11
                        }
                    },
                    "confidence_thresholds_raw": {
                        "identity": {
                            "pure_ai": {
                                "reject": 0.65,
                                "low": 0.75,
                                "medium": 0.92
                            },
                            "ai_paraphrased": {
                                "reject": 0.85,
                                "low": 0.9,
                                "medium": 0.95
                            }
                        }
                    }
                },
                "human": {},
                "mixed": {}
            },
            "result_message": "Our detector is highly confident that the text is written by AI.",
            "document_classification": "AI_ONLY",
            "version": "2025-01-09-base",
            "language": "en",
            "inputText": "This paper proposes a novel technique called Neuro-Symbolic Program Synthesis (NSPS) that learns to generate a program incrementally without the need for an explicit search. The approach is based on two novel neural modules: the cross correlation I/O network and the Recursive-Reverse-Recursive Neural Network (R3NN). The R3NN model encodes partial trees in a Domain-Specific Language (DSL) and assigns probabilities to different non-terminals in a partial derivation and corresponding expansions to guide the search for complete derivations.\nThe paper tackles the specific question of program induction, which is a fundamental problem in Machine Learning and Artificial Intelligence. The approach is well-motivated, building on recent progress in deep learning and program synthesis. The paper presents a strong and novel model with promising experimental results, demonstrating the effectiveness of NSPS in constructing programs from new input-output examples and even constructing new programs for tasks that it had never observed before during training.\nI decide to accept this paper with two key reasons: (1) the paper proposes a novel and well-motivated approach to program induction, and (2) the experimental results demonstrate the effectiveness of the approach in constructing programs from new input-output examples.\nThe paper provides supporting arguments for the reasons for the decision, including the thorough experiment section, which shows that the R3NN model obtains competitive performance on several challenging tasks and captures natural boundaries. The paper also presents a strong and novel model, which is a significant contribution to the field of program induction.\nTo improve the paper, I provide additional feedback, including the need to address minor issues with writing and related work. Specifically, the paper is missing some references, including Mikolov et al. (2010), Lin et al. (1996), and Socher's work, which should be included to provide a more comprehensive overview of the related work. Additionally, there are some errors in the related work section, including incorrect attribution of the clockwork RNN and gradient clipping.\nTo clarify my understanding of the paper and provide additional evidence, I would like to ask the authors the following questions:\n* Can you provide more details on the training process, including the hyperparameter settings and the computational resources used?\n* How do you plan to address the scalability issues in training with programs of larger size?\n* Can you provide more examples of the programs constructed by the NSPS approach, including programs that require 4 or more Concat operations?\n* How do you plan to extend the NSPS approach to other domains, such as program synthesis for numerical computations or data structures?"
        }
    ]
}