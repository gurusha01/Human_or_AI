{
    "version": "2025-01-09-base",
    "scanId": "a466f5b0-a65e-476e-9723-3cc95a1720d6",
    "documents": [
        {
            "sentences": [
                {
                    "generated_prob": 0.999994158744812,
                    "sentence": "This paper proposes a novel technique called Neuro-Symbolic Program Synthesis (NSPS) that learns to generate a program incrementally without the need for an explicit search.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.999991238117218,
                    "sentence": "The approach is based on two novel neural modules: the cross correlation I/O network and the Recursive-Reverse-Recursive Neural Network (R3NN).",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999741315841675,
                    "sentence": "The R3NN model encodes partial trees in a Domain-Specific Language (DSL) and assigns probabilities to different non-terminals in a partial derivation and corresponding expansions to guide the search for complete derivations.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999794363975525,
                    "sentence": "The paper tackles the specific question of program induction, which is a fundamental problem in Machine Learning and Artificial Intelligence.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.999966561794281,
                    "sentence": "The approach is well-motivated, as it addresses the limitations of existing neural architectures for program induction, such as being computationally expensive, hard to train, and lacking interpretability.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.999930739402771,
                    "sentence": "Based on the results presented in the paper, I decide to accept this paper.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.99993896484375,
                    "sentence": "The two key reasons for this choice are: (1) the paper proposes a novel and well-motivated approach to program induction, and (2) the experimental results demonstrate the effectiveness of the approach in learning hierarchical representations and synthesizing programs from input-output examples.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999576210975647,
                    "sentence": "The paper provides supporting arguments for the reasons for the decision, including the ability of the R3NN model to learn continuous representations of input-output examples and the effectiveness of the cross-correlation encoder in extracting substring indices.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999485611915588,
                    "sentence": "The paper also provides additional feedback to improve the paper, such as evaluating the approach on more complex domains and tasks, and providing more detailed analysis of the results.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999579191207886,
                    "sentence": "To clarify my understanding of the paper and provide additional evidence, I would like to ask the authors the following questions: (1) How does the R3NN model handle programs with multiple levels of nesting, and what are the limitations of the approach in terms of program complexity?",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999611973762512,
                    "sentence": "(2) Can the authors provide more details on the training process, including the hyperparameter settings and the computational resources required?",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999756813049316,
                    "sentence": "(3) How does the approach compare to other program induction techniques, such as reinforcement learning and genetic programming, in terms of performance and efficiency?",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                }
            ],
            "paragraphs": [
                {
                    "start_sentence_index": 0,
                    "num_sentences": 3,
                    "completely_generated_prob": 0.850090677245877
                },
                {
                    "start_sentence_index": 3,
                    "num_sentences": 2,
                    "completely_generated_prob": 0.8254776901813464
                },
                {
                    "start_sentence_index": 5,
                    "num_sentences": 2,
                    "completely_generated_prob": 0.8254776901813464
                },
                {
                    "start_sentence_index": 7,
                    "num_sentences": 2,
                    "completely_generated_prob": 0.8254776901813464
                },
                {
                    "start_sentence_index": 9,
                    "num_sentences": 3,
                    "completely_generated_prob": 0.850090677245877
                }
            ],
            "completely_generated_prob": 1,
            "class_probabilities": {
                "human": 0,
                "ai": 1,
                "mixed": 0
            },
            "average_generated_prob": 1,
            "predicted_class": "ai",
            "confidence_score": 1,
            "confidence_category": "high",
            "confidence_scores_raw": {
                "identity": {
                    "ai": 1,
                    "human": 0,
                    "mixed": 0
                }
            },
            "confidence_thresholds_raw": {
                "identity": {
                    "ai": {
                        "reject": 0.65,
                        "low": 0.75,
                        "medium": 0.92
                    },
                    "human": {
                        "reject": 0.7,
                        "low": 0.82,
                        "medium": 0.92
                    },
                    "mixed": {
                        "reject": 0.7,
                        "low": 0.8,
                        "medium": 0.88
                    }
                }
            },
            "overall_burstiness": 0,
            "writing_stats": {},
            "subclass": {
                "ai": {
                    "predicted_class": "pure_ai",
                    "result_message": "",
                    "confidence_score": 0.9999999998,
                    "confidence_category": "high",
                    "class_probabilities": {
                        "pure_ai": 0.9999999999,
                        "ai_paraphrased": 9.999999997e-11
                    },
                    "confidence_scores_raw": {
                        "identity": {
                            "pure_ai": 0.9999999998,
                            "ai_paraphrased": 9.999999997e-11
                        }
                    },
                    "confidence_thresholds_raw": {
                        "identity": {
                            "pure_ai": {
                                "reject": 0.65,
                                "low": 0.75,
                                "medium": 0.92
                            },
                            "ai_paraphrased": {
                                "reject": 0.85,
                                "low": 0.9,
                                "medium": 0.95
                            }
                        }
                    }
                },
                "human": {},
                "mixed": {}
            },
            "result_message": "Our detector is highly confident that the text is written by AI.",
            "document_classification": "AI_ONLY",
            "version": "2025-01-09-base",
            "language": "en",
            "inputText": "This paper proposes a novel technique called Neuro-Symbolic Program Synthesis (NSPS) that learns to generate a program incrementally without the need for an explicit search. The approach is based on two novel neural modules: the cross correlation I/O network and the Recursive-Reverse-Recursive Neural Network (R3NN). The R3NN model encodes partial trees in a Domain-Specific Language (DSL) and assigns probabilities to different non-terminals in a partial derivation and corresponding expansions to guide the search for complete derivations.\nThe paper tackles the specific question of program induction, which is a fundamental problem in Machine Learning and Artificial Intelligence. The approach is well-motivated, as it addresses the limitations of existing neural architectures for program induction, such as being computationally expensive, hard to train, and lacking interpretability.\nBased on the results presented in the paper, I decide to accept this paper. The two key reasons for this choice are: (1) the paper proposes a novel and well-motivated approach to program induction, and (2) the experimental results demonstrate the effectiveness of the approach in learning hierarchical representations and synthesizing programs from input-output examples.\nThe paper provides supporting arguments for the reasons for the decision, including the ability of the R3NN model to learn continuous representations of input-output examples and the effectiveness of the cross-correlation encoder in extracting substring indices. The paper also provides additional feedback to improve the paper, such as evaluating the approach on more complex domains and tasks, and providing more detailed analysis of the results.\nTo clarify my understanding of the paper and provide additional evidence, I would like to ask the authors the following questions: (1) How does the R3NN model handle programs with multiple levels of nesting, and what are the limitations of the approach in terms of program complexity? (2) Can the authors provide more details on the training process, including the hyperparameter settings and the computational resources required? (3) How does the approach compare to other program induction techniques, such as reinforcement learning and genetic programming, in terms of performance and efficiency?"
        }
    ]
}