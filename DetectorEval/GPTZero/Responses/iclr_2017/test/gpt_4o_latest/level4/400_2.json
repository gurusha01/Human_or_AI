{
    "version": "2025-01-09-base",
    "scanId": "0dbd21de-e191-4884-b935-0b5f9d367d74",
    "documents": [
        {
            "sentences": [
                {
                    "generated_prob": 0.9584406614303589,
                    "sentence": "The paper introduces DRNN as a neural decoder specifically designed for tree structures.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9340094327926636,
                    "sentence": "I find the model architecture appealing due to its two notable improvements over traditional methods: (1) it facilitates bidirectional information flow, incorporating data from both parent nodes and sibling nodes, which is particularly advantageous for tree structures, and (2) it employs a probability distribution to model tree boundaries (e.g., the last sibling or leaf node).",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.8897671103477478,
                    "sentence": "This approach eliminates the need for special ending symbols, which tend to increase the parameter space and impose additional learning burdens on the model (as these symbols are shared with other tokens).",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.8810759782791138,
                    "sentence": "The authors evaluate DRNN on two tasks: recovering synthetic trees and recovering functional programs.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.8593021035194397,
                    "sentence": "The model outperforms traditional approaches, such as seq2seq models, in both cases.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9192911386489868,
                    "sentence": "However, I find the synthetic tree recovery task less compelling for two reasons: (1) the surface form inherently contains some topological information, which simplifies the task and reduces its difficulty, and (2) as illustrated in Figure 3, the model's performance declines significantly as the number of nodes increases, even when the node count is not particularly large.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.968901515007019,
                    "sentence": "This raises questions about whether a simple baseline that only captures topological information from the surface string would perform much worse than DRNN.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.922927737236023,
                    "sentence": "Additionally, in this scenario, DRNN seems unable to fully demonstrate its potential, as the length of the information flow within the model remains relatively short.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9630976915359497,
                    "sentence": "The experiments are intriguing, but I believe there are other, more challenging tasks where tree structure information plays a more critical role.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9657383561134338,
                    "sentence": "For instance, consider the seq2seq parsing model (Vinyals et al., 2014).",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9628011584281921,
                    "sentence": "Could the DRNN proposed in this paper be applied to the decoder side of such a model?",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9645025730133057,
                    "sentence": "Tasks like this could better highlight the potential of DRNN and provide more compelling evidence that architectures like this are superior to traditional alternatives.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                }
            ],
            "paragraphs": [
                {
                    "start_sentence_index": 0,
                    "num_sentences": 3,
                    "completely_generated_prob": 0.850090677245877
                },
                {
                    "start_sentence_index": 3,
                    "num_sentences": 2,
                    "completely_generated_prob": 0.8254776901813464
                },
                {
                    "start_sentence_index": 5,
                    "num_sentences": 3,
                    "completely_generated_prob": 0.850090677245877
                },
                {
                    "start_sentence_index": 8,
                    "num_sentences": 4,
                    "completely_generated_prob": 0.8708627247549962
                }
            ],
            "completely_generated_prob": 0.8129788192879676,
            "class_probabilities": {
                "human": 0.18702118071203244,
                "ai": 0.8129788192879676,
                "mixed": 0
            },
            "average_generated_prob": 1,
            "predicted_class": "ai",
            "confidence_score": 0.8129788192879676,
            "confidence_category": "medium",
            "confidence_scores_raw": {
                "identity": {
                    "ai": 0.8129788192879676,
                    "human": 0.18702118071203244,
                    "mixed": 0
                }
            },
            "confidence_thresholds_raw": {
                "identity": {
                    "ai": {
                        "reject": 0.65,
                        "low": 0.75,
                        "medium": 0.92
                    },
                    "human": {
                        "reject": 0.7,
                        "low": 0.82,
                        "medium": 0.92
                    },
                    "mixed": {
                        "reject": 0.7,
                        "low": 0.8,
                        "medium": 0.88
                    }
                }
            },
            "overall_burstiness": 0,
            "writing_stats": {},
            "subclass": {
                "ai": {
                    "predicted_class": "pure_ai",
                    "result_message": "",
                    "confidence_score": 0.9999999998,
                    "confidence_category": "high",
                    "class_probabilities": {
                        "pure_ai": 0.9999999999,
                        "ai_paraphrased": 9.999999997e-11
                    },
                    "confidence_scores_raw": {
                        "identity": {
                            "pure_ai": 0.9999999998,
                            "ai_paraphrased": 9.999999997e-11
                        }
                    },
                    "confidence_thresholds_raw": {
                        "identity": {
                            "pure_ai": {
                                "reject": 0.65,
                                "low": 0.75,
                                "medium": 0.92
                            },
                            "ai_paraphrased": {
                                "reject": 0.85,
                                "low": 0.9,
                                "medium": 0.95
                            }
                        }
                    }
                },
                "human": {},
                "mixed": {}
            },
            "result_message": "Our detector is moderately confident that the text is written by AI.",
            "document_classification": "AI_ONLY",
            "version": "2025-01-09-base",
            "language": "en",
            "inputText": "The paper introduces DRNN as a neural decoder specifically designed for tree structures. I find the model architecture appealing due to its two notable improvements over traditional methods: (1) it facilitates bidirectional information flow, incorporating data from both parent nodes and sibling nodes, which is particularly advantageous for tree structures, and (2) it employs a probability distribution to model tree boundaries (e.g., the last sibling or leaf node). This approach eliminates the need for special ending symbols, which tend to increase the parameter space and impose additional learning burdens on the model (as these symbols are shared with other tokens).\nThe authors evaluate DRNN on two tasks: recovering synthetic trees and recovering functional programs. The model outperforms traditional approaches, such as seq2seq models, in both cases.\nHowever, I find the synthetic tree recovery task less compelling for two reasons: (1) the surface form inherently contains some topological information, which simplifies the task and reduces its difficulty, and (2) as illustrated in Figure 3, the model's performance declines significantly as the number of nodes increases, even when the node count is not particularly large. This raises questions about whether a simple baseline that only captures topological information from the surface string would perform much worse than DRNN. Additionally, in this scenario, DRNN seems unable to fully demonstrate its potential, as the length of the information flow within the model remains relatively short.\nThe experiments are intriguing, but I believe there are other, more challenging tasks where tree structure information plays a more critical role. For instance, consider the seq2seq parsing model (Vinyals et al., 2014). Could the DRNN proposed in this paper be applied to the decoder side of such a model? Tasks like this could better highlight the potential of DRNN and provide more compelling evidence that architectures like this are superior to traditional alternatives."
        }
    ]
}