{
    "version": "2025-01-09-base",
    "scanId": "89a69211-7459-42c2-a556-e6a596d6564c",
    "documents": [
        {
            "sentences": [
                {
                    "generated_prob": 0.9999107718467712,
                    "sentence": "Review of the Paper",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999274015426636,
                    "sentence": "Summary of Contributions",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999388456344604,
                    "sentence": "This paper presents a novel approach to code superoptimization by learning the proposal distribution in a stochastic search framework.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9998943209648132,
                    "sentence": "Building on the STOKE superoptimization engine, the authors leverage reinforcement learning (using REINFORCE) to train a neural network that conditions the proposal distribution on program features.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9997768998146057,
                    "sentence": "The proposed method aims to improve upon the uniform and non-conditioned proposal distributions used in prior work.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9997528195381165,
                    "sentence": "The authors demonstrate the efficacy of their approach on two datasets: the Hacker's Delight corpus and a set of automatically generated programs.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9996782541275024,
                    "sentence": "Experimental results indicate slight performance improvements over baselines, with the learned proposal distribution achieving faster and higher-quality optimization.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9995397329330444,
                    "sentence": "Decision: Reject",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9994436502456665,
                    "sentence": "The paper is not suitable for acceptance at ICLR for two primary reasons: (1) its limited relevance to the core themes of representation learning and deep learning, and (2) the lack of significant technical novelty or impact in the context of the conference's audience.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9994141459465027,
                    "sentence": "Supporting Arguments",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9996154308319092,
                    "sentence": "1. Relevance to ICLR: While the paper employs neural networks and reinforcement learning, the application is narrowly focused on code superoptimization\"\"a niche domain with limited appeal to the broader ICLR community.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9996156096458435,
                    "sentence": "The task does not align well with the conference's focus on advances in representation learning or generalizable machine learning techniques.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9996346831321716,
                    "sentence": "The work might be better suited for venues like AAAI or UAI, where stochastic optimization and program synthesis are more central topics.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9995326995849609,
                    "sentence": "2. Technical Contributions: The proposed method, while novel in its application to superoptimization, is a straightforward adaptation of existing techniques (e.g., REINFORCE and neural networks).",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9997064471244812,
                    "sentence": "The use of Bag-of-Words (BoW) features to represent programs is simplistic and fails to capture deeper program semantics, limiting the model's potential.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9997016787528992,
                    "sentence": "Employing more sophisticated architectures, such as Tree-LSTMs or graph neural networks, would have been a more impactful contribution.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9994802474975586,
                    "sentence": "3. Experimental Results: The reported improvements over baselines are modest and do not convincingly demonstrate the superiority of the proposed method.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9990535974502563,
                    "sentence": "The lack of experiments on broader synthesis tasks or other MCMC applications further limits the generalizability and significance of the work.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9994238018989563,
                    "sentence": "Additional Feedback for Improvement",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9998781085014343,
                    "sentence": "1. Representation of Program Semantics: The use of BoW features is a significant limitation.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.999859094619751,
                    "sentence": "Future work should explore models that can better capture the structural and semantic properties of programs, such as Tree-LSTMs, graph neural networks, or other hierarchical representations.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9995571374893188,
                    "sentence": "2. Broader Applications: To increase the impact and generalizability of the method, the authors should evaluate their approach on other synthesis tasks or stochastic search problems beyond code superoptimization.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9995062947273254,
                    "sentence": "3. Clarity and Depth: The paper could benefit from a more detailed discussion of the limitations of the current approach, particularly regarding the choice of features and the scalability of the method.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9980090260505676,
                    "sentence": "Additionally, a more thorough comparison with related work in program synthesis and stochastic optimization would strengthen the paper.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9988545775413513,
                    "sentence": "4. Relevance to ICLR: To better align with the ICLR audience, the authors could emphasize the representation learning aspects of their work, such as exploring how learned embeddings of programs could generalize across tasks or domains.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.5517932176589966,
                    "sentence": "Questions for the Authors",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.7898131608963013,
                    "sentence": "1. Why were BoW features chosen over more expressive representations like Tree-LSTMs or graph-based models?",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.8736523389816284,
                    "sentence": "Were such models considered, and if so, what challenges were encountered?",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.7171627283096313,
                    "sentence": "2. How does the proposed method scale with program length and complexity?",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.7361681461334229,
                    "sentence": "Are there any performance bottlenecks when applying the approach to larger or more complex programs?",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.35298219323158264,
                    "sentence": "3. Could the method be applied to other stochastic search problems?",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.7263724207878113,
                    "sentence": "If so, what modifications would be necessary to adapt it to these tasks?",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.49451494216918945,
                    "sentence": "In summary, while the paper presents an interesting application of reinforcement learning to code superoptimization, its limited relevance to ICLR's themes, modest technical contributions, and narrow scope make it a weak candidate for acceptance.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.3646012246608734,
                    "sentence": "The authors are encouraged to address these limitations and consider submitting to a more appropriate venue.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                }
            ],
            "paragraphs": [
                {
                    "start_sentence_index": 0,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 1,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 2,
                    "num_sentences": 5,
                    "completely_generated_prob": 0.8871651474786718
                },
                {
                    "start_sentence_index": 7,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 8,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 9,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 10,
                    "num_sentences": 3,
                    "completely_generated_prob": 0.850090677245877
                },
                {
                    "start_sentence_index": 13,
                    "num_sentences": 3,
                    "completely_generated_prob": 0.850090677245877
                },
                {
                    "start_sentence_index": 16,
                    "num_sentences": 2,
                    "completely_generated_prob": 0.8254776901813464
                },
                {
                    "start_sentence_index": 18,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 19,
                    "num_sentences": 2,
                    "completely_generated_prob": 0.8254776901813464
                },
                {
                    "start_sentence_index": 21,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 22,
                    "num_sentences": 2,
                    "completely_generated_prob": 0.8254776901813464
                },
                {
                    "start_sentence_index": 24,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 25,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.11111110864197542
                },
                {
                    "start_sentence_index": 26,
                    "num_sentences": 2,
                    "completely_generated_prob": 0.3063829682933457
                },
                {
                    "start_sentence_index": 28,
                    "num_sentences": 2,
                    "completely_generated_prob": 0.02318840472169716
                },
                {
                    "start_sentence_index": 30,
                    "num_sentences": 2,
                    "completely_generated_prob": 0.02318840472169716
                },
                {
                    "start_sentence_index": 32,
                    "num_sentences": 2,
                    "completely_generated_prob": 0.02318840472169716
                }
            ],
            "completely_generated_prob": 0.9658502932045533,
            "class_probabilities": {
                "human": 0,
                "ai": 0.9658502932045533,
                "mixed": 0.034149706795446697
            },
            "average_generated_prob": 1,
            "predicted_class": "ai",
            "confidence_score": 0.9658502932045533,
            "confidence_category": "high",
            "confidence_scores_raw": {
                "identity": {
                    "ai": 0.9658502932045533,
                    "human": 0,
                    "mixed": 0.034149706795446697
                }
            },
            "confidence_thresholds_raw": {
                "identity": {
                    "ai": {
                        "reject": 0.65,
                        "low": 0.75,
                        "medium": 0.92
                    },
                    "human": {
                        "reject": 0.7,
                        "low": 0.82,
                        "medium": 0.92
                    },
                    "mixed": {
                        "reject": 0.7,
                        "low": 0.8,
                        "medium": 0.88
                    }
                }
            },
            "overall_burstiness": 0,
            "writing_stats": {},
            "subclass": {
                "ai": {
                    "predicted_class": "pure_ai",
                    "result_message": "",
                    "confidence_score": 0.9999999998,
                    "confidence_category": "high",
                    "class_probabilities": {
                        "pure_ai": 0.9999999999,
                        "ai_paraphrased": 9.999999997e-11
                    },
                    "confidence_scores_raw": {
                        "identity": {
                            "pure_ai": 0.9999999998,
                            "ai_paraphrased": 9.999999997e-11
                        }
                    },
                    "confidence_thresholds_raw": {
                        "identity": {
                            "pure_ai": {
                                "reject": 0.65,
                                "low": 0.75,
                                "medium": 0.92
                            },
                            "ai_paraphrased": {
                                "reject": 0.85,
                                "low": 0.9,
                                "medium": 0.95
                            }
                        }
                    }
                },
                "human": {},
                "mixed": {}
            },
            "result_message": "Our detector is highly confident that the text is written by AI.",
            "document_classification": "AI_ONLY",
            "version": "2025-01-09-base",
            "language": "en",
            "inputText": "Review of the Paper\nSummary of Contributions\nThis paper presents a novel approach to code superoptimization by learning the proposal distribution in a stochastic search framework. Building on the STOKE superoptimization engine, the authors leverage reinforcement learning (using REINFORCE) to train a neural network that conditions the proposal distribution on program features. The proposed method aims to improve upon the uniform and non-conditioned proposal distributions used in prior work. The authors demonstrate the efficacy of their approach on two datasets: the Hacker's Delight corpus and a set of automatically generated programs. Experimental results indicate slight performance improvements over baselines, with the learned proposal distribution achieving faster and higher-quality optimization.\nDecision: Reject\nThe paper is not suitable for acceptance at ICLR for two primary reasons: (1) its limited relevance to the core themes of representation learning and deep learning, and (2) the lack of significant technical novelty or impact in the context of the conference's audience.\nSupporting Arguments\n1. Relevance to ICLR: While the paper employs neural networks and reinforcement learning, the application is narrowly focused on code superoptimization\"\"a niche domain with limited appeal to the broader ICLR community. The task does not align well with the conference's focus on advances in representation learning or generalizable machine learning techniques. The work might be better suited for venues like AAAI or UAI, where stochastic optimization and program synthesis are more central topics.\n2. Technical Contributions: The proposed method, while novel in its application to superoptimization, is a straightforward adaptation of existing techniques (e.g., REINFORCE and neural networks). The use of Bag-of-Words (BoW) features to represent programs is simplistic and fails to capture deeper program semantics, limiting the model's potential. Employing more sophisticated architectures, such as Tree-LSTMs or graph neural networks, would have been a more impactful contribution.\n3. Experimental Results: The reported improvements over baselines are modest and do not convincingly demonstrate the superiority of the proposed method. The lack of experiments on broader synthesis tasks or other MCMC applications further limits the generalizability and significance of the work.\nAdditional Feedback for Improvement\n1. Representation of Program Semantics: The use of BoW features is a significant limitation. Future work should explore models that can better capture the structural and semantic properties of programs, such as Tree-LSTMs, graph neural networks, or other hierarchical representations.\n2. Broader Applications: To increase the impact and generalizability of the method, the authors should evaluate their approach on other synthesis tasks or stochastic search problems beyond code superoptimization.\n3. Clarity and Depth: The paper could benefit from a more detailed discussion of the limitations of the current approach, particularly regarding the choice of features and the scalability of the method. Additionally, a more thorough comparison with related work in program synthesis and stochastic optimization would strengthen the paper.\n4. Relevance to ICLR: To better align with the ICLR audience, the authors could emphasize the representation learning aspects of their work, such as exploring how learned embeddings of programs could generalize across tasks or domains.\nQuestions for the Authors\n1. Why were BoW features chosen over more expressive representations like Tree-LSTMs or graph-based models? Were such models considered, and if so, what challenges were encountered?\n2. How does the proposed method scale with program length and complexity? Are there any performance bottlenecks when applying the approach to larger or more complex programs?\n3. Could the method be applied to other stochastic search problems? If so, what modifications would be necessary to adapt it to these tasks?\nIn summary, while the paper presents an interesting application of reinforcement learning to code superoptimization, its limited relevance to ICLR's themes, modest technical contributions, and narrow scope make it a weak candidate for acceptance. The authors are encouraged to address these limitations and consider submitting to a more appropriate venue."
        }
    ]
}