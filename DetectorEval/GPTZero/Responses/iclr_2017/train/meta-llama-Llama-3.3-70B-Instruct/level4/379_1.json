{
    "version": "2025-01-09-base",
    "scanId": "4334fc1d-c73c-4878-99a4-5298ffabd020",
    "documents": [
        {
            "sentences": [
                {
                    "generated_prob": 0.9730799794197083,
                    "sentence": "The authors present an implementation of TensorFlow Fold, enabling the execution of diverse computations without altering the computation graph.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9663450717926025,
                    "sentence": "This is accomplished by designing a generic scheduler as a TensorFlow computation graph that can accept graph descriptions as input and execute them.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9773215651512146,
                    "sentence": "The approach yields notable advantages in tasks where computations vary for each data point, as exemplified by TreeRNN.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9533630013465881,
                    "sentence": "Experimental comparisons are made against static batches with repeated graph structures and batch size 1.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.974882960319519,
                    "sentence": "However, the score is limited to 7 due to the omission of a comparison with a key alternative approach, wherein a new TensorFlow graph could be generated for each dynamic batch, allowing for the execution of non-uniform batches using standard TensorFlow functionality, rather than relying on the proposed scheduling algorithm.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                }
            ],
            "paragraphs": [
                {
                    "start_sentence_index": 0,
                    "num_sentences": 5,
                    "completely_generated_prob": 0.8871651474786718
                }
            ],
            "completely_generated_prob": 0.9997847017652333,
            "class_probabilities": {
                "human": 0,
                "ai": 0.9997847017652333,
                "mixed": 0.00021529823476680056
            },
            "average_generated_prob": 1,
            "predicted_class": "ai",
            "confidence_score": 0.9997847017652333,
            "confidence_category": "high",
            "confidence_scores_raw": {
                "identity": {
                    "ai": 0.9997847017652333,
                    "human": 0,
                    "mixed": 0.00021529823476680056
                }
            },
            "confidence_thresholds_raw": {
                "identity": {
                    "ai": {
                        "reject": 0.65,
                        "low": 0.75,
                        "medium": 0.92
                    },
                    "human": {
                        "reject": 0.7,
                        "low": 0.82,
                        "medium": 0.92
                    },
                    "mixed": {
                        "reject": 0.7,
                        "low": 0.8,
                        "medium": 0.88
                    }
                }
            },
            "overall_burstiness": 0,
            "writing_stats": {},
            "subclass": {
                "ai": {
                    "predicted_class": "pure_ai",
                    "result_message": "",
                    "confidence_score": 0.9999999998,
                    "confidence_category": "high",
                    "class_probabilities": {
                        "pure_ai": 0.9999999999,
                        "ai_paraphrased": 9.999999997e-11
                    },
                    "confidence_scores_raw": {
                        "identity": {
                            "pure_ai": 0.9999999998,
                            "ai_paraphrased": 9.999999997e-11
                        }
                    },
                    "confidence_thresholds_raw": {
                        "identity": {
                            "pure_ai": {
                                "reject": 0.65,
                                "low": 0.75,
                                "medium": 0.92
                            },
                            "ai_paraphrased": {
                                "reject": 0.85,
                                "low": 0.9,
                                "medium": 0.95
                            }
                        }
                    }
                },
                "human": {},
                "mixed": {}
            },
            "result_message": "Our detector is highly confident that the text is written by AI.",
            "document_classification": "AI_ONLY",
            "version": "2025-01-09-base",
            "language": "en",
            "inputText": "The authors present an implementation of TensorFlow Fold, enabling the execution of diverse computations without altering the computation graph. This is accomplished by designing a generic scheduler as a TensorFlow computation graph that can accept graph descriptions as input and execute them. The approach yields notable advantages in tasks where computations vary for each data point, as exemplified by TreeRNN. Experimental comparisons are made against static batches with repeated graph structures and batch size 1. However, the score is limited to 7 due to the omission of a comparison with a key alternative approach, wherein a new TensorFlow graph could be generated for each dynamic batch, allowing for the execution of non-uniform batches using standard TensorFlow functionality, rather than relying on the proposed scheduling algorithm."
        }
    ]
}