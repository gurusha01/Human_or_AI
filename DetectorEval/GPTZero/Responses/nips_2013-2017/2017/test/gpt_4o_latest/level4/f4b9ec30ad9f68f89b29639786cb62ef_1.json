{
    "version": "2025-01-09-base",
    "scanId": "de97e59d-ddbb-42e8-8336-a408301991f0",
    "documents": [
        {
            "sentences": [
                {
                    "generated_prob": 0.9999421238899231,
                    "sentence": "This paper introduces a novel aggregation rule for gradient vectors obtained from various workers in distributed stochastic gradient descent, aimed at mitigating Byzantine failures.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999373555183411,
                    "sentence": "The authors demonstrate that standard aggregation methods, such as averaging, are incapable of tolerating even a single Byzantine failure.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999285340309143,
                    "sentence": "To address this, the paper introduces the concept of Byzantine resilience to quantify the tolerance of such failures and proves that the proposed aggregation function satisfies this property.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9998994469642639,
                    "sentence": "Experimental results indicate that the proposed method significantly outperforms the baseline as the number of Byzantine workers increases.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9998354315757751,
                    "sentence": "However, the approach introduces computational overhead even in the absence of Byzantine workers, highlighting the need to balance robustness and efficiency.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.030480438843369484,
                    "sentence": "While I am not deeply familiar with distributed stochastic gradient descent, my main question pertains to the machine learning tasks themselves.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": false
                },
                {
                    "generated_prob": 0.020849011838436127,
                    "sentence": "Specifically, in Figure 4, it appears that Krum achieves a worse learning error compared to simple averaging.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": false
                },
                {
                    "generated_prob": 0.008322599343955517,
                    "sentence": "I am curious about the extent of this difference in error\"\"can it be bounded?",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": false
                },
                {
                    "generated_prob": 0.006623577326536179,
                    "sentence": "Additionally, what is the performance cost incurred to ensure robustness against Byzantine failures when using Krum?",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": false
                }
            ],
            "paragraphs": [
                {
                    "start_sentence_index": 0,
                    "num_sentences": 5,
                    "completely_generated_prob": 0.8871651474786718
                },
                {
                    "start_sentence_index": 5,
                    "num_sentences": 4,
                    "completely_generated_prob": 0.0006564766595293492
                }
            ],
            "completely_generated_prob": 0.38430117969664945,
            "class_probabilities": {
                "human": 0,
                "ai": 0.38430117969664945,
                "mixed": 0.6156988203033504
            },
            "average_generated_prob": 0.5555555555555556,
            "predicted_class": "mixed",
            "confidence_score": 0.6156988203033504,
            "confidence_category": "low",
            "confidence_scores_raw": {
                "identity": {
                    "ai": 0.38430117969664945,
                    "human": 0,
                    "mixed": 0.6156988203033504
                }
            },
            "confidence_thresholds_raw": {
                "identity": {
                    "ai": {
                        "reject": 0.65,
                        "low": 0.75,
                        "medium": 0.92
                    },
                    "human": {
                        "reject": 0.7,
                        "low": 0.82,
                        "medium": 0.92
                    },
                    "mixed": {
                        "reject": 0.7,
                        "low": 0.8,
                        "medium": 0.88
                    }
                }
            },
            "overall_burstiness": 0,
            "writing_stats": {},
            "subclass": {
                "ai": {},
                "human": {},
                "mixed": {}
            },
            "result_message": "Our detector is highly uncertain about this document. The writing style and content are not particularly AI-like.",
            "document_classification": "MIXED",
            "version": "2025-01-09-base",
            "language": "en",
            "inputText": "This paper introduces a novel aggregation rule for gradient vectors obtained from various workers in distributed stochastic gradient descent, aimed at mitigating Byzantine failures. The authors demonstrate that standard aggregation methods, such as averaging, are incapable of tolerating even a single Byzantine failure. To address this, the paper introduces the concept of Byzantine resilience to quantify the tolerance of such failures and proves that the proposed aggregation function satisfies this property. Experimental results indicate that the proposed method significantly outperforms the baseline as the number of Byzantine workers increases. However, the approach introduces computational overhead even in the absence of Byzantine workers, highlighting the need to balance robustness and efficiency.\nWhile I am not deeply familiar with distributed stochastic gradient descent, my main question pertains to the machine learning tasks themselves. Specifically, in Figure 4, it appears that Krum achieves a worse learning error compared to simple averaging. I am curious about the extent of this difference in error\"\"can it be bounded? Additionally, what is the performance cost incurred to ensure robustness against Byzantine failures when using Krum?"
        }
    ]
}