{
    "version": "2025-01-09-base",
    "scanId": "7a89969e-7591-467e-998d-077d32f70d53",
    "documents": [
        {
            "sentences": [
                {
                    "generated_prob": 0.9999784827232361,
                    "sentence": "This paper presents a new algorithm, Multiplicative Update Graph Matching (MPGM), for solving the graph matching problem, which is a fundamental problem in computer vision.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999380111694336,
                    "sentence": "The graph matching problem is formulated as a Quadratic Programming (QP) problem with doubly stochastic and discrete constraints.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9998656511306763,
                    "sentence": "The authors propose a multiplicative update technique to solve the QP problem, which has three main benefits: it solves the general QP problem with doubly stochastic constraint naturally, it can generate a sparse solution and thus incorporate the discrete constraint approximately, and it is efficient and simple to implement.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999107122421265,
                    "sentence": "The paper relates to previous work in the field, including the use of constraint relaxation and projection methods, such as GA and RRWM, and objective function approximation methods, such as Frank-Wolfe algorithm.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.999923586845398,
                    "sentence": "The authors also compare their method with other state-of-the-art methods, including SM, IPFP, SMAC, RRWM, and FGM.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9998981356620789,
                    "sentence": "The strengths of the paper include:",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.999961793422699,
                    "sentence": "* The proposed algorithm, MPGM, is simple and efficient to implement, with a computational complexity of less than O(MN2).",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9998994469642639,
                    "sentence": "* The algorithm is guaranteed to converge to a Karush-Kuhn-Tucker (KKT) optimal solution.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999212026596069,
                    "sentence": "* The experimental results show that MPGM outperforms other state-of-the-art methods in terms of objective score and matching accuracy.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999496340751648,
                    "sentence": "* The algorithm can generate sparse solutions, which is desirable in graph matching problems.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9997435212135315,
                    "sentence": "The weaknesses of the paper include:",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9978373646736145,
                    "sentence": "* The theoretical analysis of the sparsity of MPGM solution is not provided, which is an important aspect of the algorithm.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9955753684043884,
                    "sentence": "* The algorithm may not be robust to outlier noise, as shown in the experimental results.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9916049242019653,
                    "sentence": "* The comparison with other methods is not exhaustive, and more comparisons with other state-of-the-art methods would be beneficial.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9946778416633606,
                    "sentence": "Arguments pro acceptance:",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.999720573425293,
                    "sentence": "* The paper presents a new and efficient algorithm for solving the graph matching problem.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9995056390762329,
                    "sentence": "* The algorithm has a strong theoretical foundation, with guaranteed convergence to a KKT optimal solution.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9998258948326111,
                    "sentence": "* The experimental results show that the algorithm outperforms other state-of-the-art methods.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9990513324737549,
                    "sentence": "Arguments con acceptance:",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9997393488883972,
                    "sentence": "* The theoretical analysis of the sparsity of MPGM solution is not provided.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9993194341659546,
                    "sentence": "* The algorithm may not be robust to outlier noise.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9996994137763977,
                    "sentence": "* The comparison with other methods is not exhaustive.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9996231198310852,
                    "sentence": "Overall, the paper presents a significant contribution to the field of computer vision, and the proposed algorithm, MPGM, has the potential to be a useful tool for solving graph matching problems.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9994230270385742,
                    "sentence": "However, further work is needed to address the weaknesses of the paper, including the theoretical analysis of the sparsity of MPGM solution and the robustness of the algorithm to outlier noise.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                }
            ],
            "paragraphs": [
                {
                    "start_sentence_index": 0,
                    "num_sentences": 3,
                    "completely_generated_prob": 0.850090677245877
                },
                {
                    "start_sentence_index": 3,
                    "num_sentences": 2,
                    "completely_generated_prob": 0.8254776901813464
                },
                {
                    "start_sentence_index": 5,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 6,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 7,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 8,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 9,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 10,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 11,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 12,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 13,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 14,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 15,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 16,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 17,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 18,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 19,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 20,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 21,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 22,
                    "num_sentences": 2,
                    "completely_generated_prob": 0.8254776901813464
                }
            ],
            "completely_generated_prob": 0.9984800378301695,
            "class_probabilities": {
                "human": 0,
                "ai": 0.9984800378301695,
                "mixed": 0.0015199621698304396
            },
            "average_generated_prob": 1,
            "predicted_class": "ai",
            "confidence_score": 0.9984800378301695,
            "confidence_category": "high",
            "confidence_scores_raw": {
                "identity": {
                    "ai": 0.9984800378301695,
                    "human": 0,
                    "mixed": 0.0015199621698304396
                }
            },
            "confidence_thresholds_raw": {
                "identity": {
                    "ai": {
                        "reject": 0.65,
                        "low": 0.75,
                        "medium": 0.92
                    },
                    "human": {
                        "reject": 0.7,
                        "low": 0.82,
                        "medium": 0.92
                    },
                    "mixed": {
                        "reject": 0.7,
                        "low": 0.8,
                        "medium": 0.88
                    }
                }
            },
            "overall_burstiness": 0,
            "writing_stats": {},
            "subclass": {
                "ai": {
                    "predicted_class": "pure_ai",
                    "result_message": "",
                    "confidence_score": 0.9999999998,
                    "confidence_category": "high",
                    "class_probabilities": {
                        "pure_ai": 0.9999999999,
                        "ai_paraphrased": 9.999999997e-11
                    },
                    "confidence_scores_raw": {
                        "identity": {
                            "pure_ai": 0.9999999998,
                            "ai_paraphrased": 9.999999997e-11
                        }
                    },
                    "confidence_thresholds_raw": {
                        "identity": {
                            "pure_ai": {
                                "reject": 0.65,
                                "low": 0.75,
                                "medium": 0.92
                            },
                            "ai_paraphrased": {
                                "reject": 0.85,
                                "low": 0.9,
                                "medium": 0.95
                            }
                        }
                    }
                },
                "human": {},
                "mixed": {}
            },
            "result_message": "Our detector is highly confident that the text is written by AI.",
            "document_classification": "AI_ONLY",
            "version": "2025-01-09-base",
            "language": "en",
            "inputText": "This paper presents a new algorithm, Multiplicative Update Graph Matching (MPGM), for solving the graph matching problem, which is a fundamental problem in computer vision. The graph matching problem is formulated as a Quadratic Programming (QP) problem with doubly stochastic and discrete constraints. The authors propose a multiplicative update technique to solve the QP problem, which has three main benefits: it solves the general QP problem with doubly stochastic constraint naturally, it can generate a sparse solution and thus incorporate the discrete constraint approximately, and it is efficient and simple to implement.\nThe paper relates to previous work in the field, including the use of constraint relaxation and projection methods, such as GA and RRWM, and objective function approximation methods, such as Frank-Wolfe algorithm. The authors also compare their method with other state-of-the-art methods, including SM, IPFP, SMAC, RRWM, and FGM.\nThe strengths of the paper include:\n* The proposed algorithm, MPGM, is simple and efficient to implement, with a computational complexity of less than O(MN2).\n* The algorithm is guaranteed to converge to a Karush-Kuhn-Tucker (KKT) optimal solution.\n* The experimental results show that MPGM outperforms other state-of-the-art methods in terms of objective score and matching accuracy.\n* The algorithm can generate sparse solutions, which is desirable in graph matching problems.\nThe weaknesses of the paper include:\n* The theoretical analysis of the sparsity of MPGM solution is not provided, which is an important aspect of the algorithm.\n* The algorithm may not be robust to outlier noise, as shown in the experimental results.\n* The comparison with other methods is not exhaustive, and more comparisons with other state-of-the-art methods would be beneficial.\nArguments pro acceptance:\n* The paper presents a new and efficient algorithm for solving the graph matching problem.\n* The algorithm has a strong theoretical foundation, with guaranteed convergence to a KKT optimal solution.\n* The experimental results show that the algorithm outperforms other state-of-the-art methods.\nArguments con acceptance:\n* The theoretical analysis of the sparsity of MPGM solution is not provided.\n* The algorithm may not be robust to outlier noise.\n* The comparison with other methods is not exhaustive.\nOverall, the paper presents a significant contribution to the field of computer vision, and the proposed algorithm, MPGM, has the potential to be a useful tool for solving graph matching problems. However, further work is needed to address the weaknesses of the paper, including the theoretical analysis of the sparsity of MPGM solution and the robustness of the algorithm to outlier noise."
        }
    ]
}