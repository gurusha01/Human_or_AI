{
    "version": "2025-01-09-base",
    "scanId": "529623e4-0357-455e-9c58-71041a4e8e3b",
    "documents": [
        {
            "sentences": [
                {
                    "generated_prob": 0.01506313867866993,
                    "sentence": "The paper draws interesting and novel connections between arithmetic circuits and PSDDs and provides a groundbreaking new way to directly compile ACs for graphical models simply by multiplying PSDDs for the graphical model factors.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": false
                },
                {
                    "generated_prob": 0.016941623762249947,
                    "sentence": "Compilation sizes and times of this PSDD approach vs. existing compilers further indicate the benefits of this novel, much simplified method for AC construction.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": false
                },
                {
                    "generated_prob": 0.021228568628430367,
                    "sentence": "The paper is exceptionally clear and should be accepted in my opinion; I have only very minor comments.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": false
                },
                {
                    "generated_prob": 0.019554927945137024,
                    "sentence": "Title: is this really the best description of the paper?",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": false
                },
                {
                    "generated_prob": 0.019229460507631302,
                    "sentence": "It seems to me that something more like \"Efficient AC Compilation of Graphical Models via PSDD Multiplication\" would more clearly indicate some of the critical connections and contributions made in the paper.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": false
                },
                {
                    "generated_prob": 0.02061949111521244,
                    "sentence": "Question on naming: In the spirit of the relation between BDDs and ADDs, are PSDDs just Algebraic generalizations of SDDs (ASDDs) whose numerical evaluations sum to one?",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": false
                },
                {
                    "generated_prob": 0.01743653416633606,
                    "sentence": "The later discussion of factors vs. probabilities indicates this.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": false
                },
                {
                    "generated_prob": 0.017390070483088493,
                    "sentence": "Then I might suggest ASDD would be a more general terminology.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": false
                },
                {
                    "generated_prob": 0.023522382602095604,
                    "sentence": "Theorem 1: are both decomposability and determinism required for efficient inference (presumably linear time) in the size of an AC?",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": false
                },
                {
                    "generated_prob": 0.01862848736345768,
                    "sentence": "If so, can the authors briefly explain why inference is less tractable without these properties?",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": false
                },
                {
                    "generated_prob": 0.015793345868587494,
                    "sentence": "My (perhaps incorrect) belief was that any AC representation of a graphical model was sufficient for linear time inference in the size of the AC.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": false
                },
                {
                    "generated_prob": 0.01970680244266987,
                    "sentence": "If my belief is correct, then is there a trivial PSDD multiply algorithm that does not retain these properties yet still leads to efficient inference in the result?",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": false
                },
                {
                    "generated_prob": 0.020452873781323433,
                    "sentence": "Algorithm 1, line 19: how is this cache implemented?",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": false
                },
                {
                    "generated_prob": 0.017128368839621544,
                    "sentence": "Like ADDs, is it based on the assumption that all subcircuits are recursively cached such that a unique ID can be maintained for all PSDDs?",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": false
                },
                {
                    "generated_prob": 0.020329615101218224,
                    "sentence": "Whether this is the case or not, it seems worth explaining as this is critical to efficiently implementing the Multiply algorithm.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": false
                },
                {
                    "generated_prob": 0.01918775774538517,
                    "sentence": "Section 6: Based on the discussion of AOMDDs, its hard for me to see the difference between PSDDs and AOMDDs... can the authors elaborate more on the differences?",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": false
                }
            ],
            "paragraphs": [
                {
                    "start_sentence_index": 0,
                    "num_sentences": 16,
                    "completely_generated_prob": 3.4496480286678e-14
                }
            ],
            "completely_generated_prob": 0.025041194076269924,
            "class_probabilities": {
                "human": 0.974671313226954,
                "ai": 0.025041194076269924,
                "mixed": 0.00028749269677611
            },
            "average_generated_prob": 0,
            "predicted_class": "human",
            "confidence_score": 0.974671313226954,
            "confidence_category": "high",
            "confidence_scores_raw": {
                "identity": {
                    "ai": 0.025041194076269924,
                    "human": 0.974671313226954,
                    "mixed": 0.00028749269677611
                }
            },
            "confidence_thresholds_raw": {
                "identity": {
                    "ai": {
                        "reject": 0.65,
                        "low": 0.75,
                        "medium": 0.92
                    },
                    "human": {
                        "reject": 0.7,
                        "low": 0.82,
                        "medium": 0.92
                    },
                    "mixed": {
                        "reject": 0.7,
                        "low": 0.8,
                        "medium": 0.88
                    }
                }
            },
            "overall_burstiness": 0,
            "writing_stats": {},
            "subclass": {
                "ai": {},
                "human": {},
                "mixed": {}
            },
            "result_message": "Our detector is highly confident that the text is written entirely by a human.",
            "document_classification": "HUMAN_ONLY",
            "version": "2025-01-09-base",
            "language": "en",
            "inputText": "The paper draws interesting and novel connections between arithmetic circuits and PSDDs and provides a groundbreaking new way to directly compile ACs for graphical models simply by multiplying PSDDs for the graphical model factors. Compilation sizes and times of this PSDD approach vs. existing compilers further indicate the benefits of this novel, much simplified method for AC construction. The paper is exceptionally clear and should be accepted in my opinion; I have only very minor comments. Title: is this really the best description of the paper? It seems to me that something more like \"Efficient AC Compilation of Graphical Models via PSDD Multiplication\" would more clearly indicate some of the critical connections and contributions made in the paper. Question on naming: In the spirit of the relation between BDDs and ADDs, are PSDDs just Algebraic generalizations of SDDs (ASDDs) whose numerical evaluations sum to one? The later discussion of factors vs. probabilities indicates this. Then I might suggest ASDD would be a more general terminology. Theorem 1: are both decomposability and determinism required for efficient inference (presumably linear time) in the size of an AC? If so, can the authors briefly explain why inference is less tractable without these properties? My (perhaps incorrect) belief was that any AC representation of a graphical model was sufficient for linear time inference in the size of the AC. If my belief is correct, then is there a trivial PSDD multiply algorithm that does not retain these properties yet still leads to efficient inference in the result? Algorithm 1, line 19: how is this cache implemented? Like ADDs, is it based on the assumption that all subcircuits are recursively cached such that a unique ID can be maintained for all PSDDs? Whether this is the case or not, it seems worth explaining as this is critical to efficiently implementing the Multiply algorithm. Section 6: Based on the discussion of AOMDDs, its hard for me to see the difference between PSDDs and AOMDDs... can the authors elaborate more on the differences?"
        }
    ]
}