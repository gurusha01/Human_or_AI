{
    "version": "2025-01-09-base",
    "scanId": "150890fd-6539-477a-8f2a-12e2277b773f",
    "documents": [
        {
            "sentences": [
                {
                    "generated_prob": 0.9999660849571228,
                    "sentence": "This manuscript presents a pioneering approach to compiling arithmetic circuits (ACs) for graphical models by leveraging the multiplication of Probabilistic Sentential Decision Diagrams (PSDDs), which represent a novel connection between arithmetic circuits and PSDDs.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999646544456482,
                    "sentence": "The compilation sizes and times achieved through this PSDD-based method demonstrate significant improvements over existing compilers, underscoring the efficiency and simplicity of this new methodology for AC construction.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9998888373374939,
                    "sentence": "The clarity of the paper is outstanding, and in my view, it warrants acceptance with only minor revisions.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999432563781738,
                    "sentence": "One potential refinement could be reconsidering the title to better reflect the core contributions, such as \"Efficient Arithmetic Circuit Compilation for Graphical Models via PSDD Multiplication,\" which more succinctly captures the essence of the paper's innovations.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9998339414596558,
                    "sentence": "Regarding terminology, it's worth exploring whether PSDDs could be more broadly categorized as Algebraic Sentential Decision Diagrams (ASDDs), given their relationship to Sentential Decision Diagrams (SDDs) and the fact that their numerical evaluations sum to one, akin to the relationship between Binary Decision Diagrams (BDDs) and Algebraic Decision Diagrams (ADDs).",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9997979402542114,
                    "sentence": "This consideration arises from the discussion on factors versus probabilities, suggesting that ASDD might offer a more encompassing terminology.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9994489550590515,
                    "sentence": "Theorem 1 posits that both decomposability and determinism are crucial for efficient inference, presumably achieving linear time complexity in the size of the AC.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9617087244987488,
                    "sentence": "It would be beneficial for the authors to elucidate why the absence of these properties hinders tractable inference.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9098286628723145,
                    "sentence": "There seems to be a misconception that any AC representation of a graphical model inherently allows for linear time inference in the size of the AC.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9247698187828064,
                    "sentence": "If this misconception is correct, it raises the question of whether a straightforward PSDD multiplication algorithm, which does not preserve decomposability and determinism, could still yield efficient inference in the resulting AC.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9670528769493103,
                    "sentence": "In Algorithm 1, the implementation details of the cache (line 19) are not explicitly stated.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9729925990104675,
                    "sentence": "Clarification on whether this cache operates under the assumption that all subcircuits are recursively cached, thereby maintaining a unique ID for all PSDDs (similar to ADDs), would be helpful.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.993250846862793,
                    "sentence": "This explanation is critical for understanding the efficient implementation of the Multiply algorithm.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.998420238494873,
                    "sentence": "The discussion in Section 6 touching upon AOMDDs leaves unclear the distinctions between PSDDs and AOMDDs.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.999316930770874,
                    "sentence": "Further elaboration by the authors on the differences between these two would provide valuable insight and enhance the comprehension of the manuscript's contributions.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                }
            ],
            "paragraphs": [
                {
                    "start_sentence_index": 0,
                    "num_sentences": 3,
                    "completely_generated_prob": 0.850090677245877
                },
                {
                    "start_sentence_index": 3,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 4,
                    "num_sentences": 2,
                    "completely_generated_prob": 0.8254776901813464
                },
                {
                    "start_sentence_index": 6,
                    "num_sentences": 4,
                    "completely_generated_prob": 0.8708627247549962
                },
                {
                    "start_sentence_index": 10,
                    "num_sentences": 3,
                    "completely_generated_prob": 0.850090677245877
                },
                {
                    "start_sentence_index": 13,
                    "num_sentences": 2,
                    "completely_generated_prob": 0.8254776901813464
                }
            ],
            "completely_generated_prob": 0.9984800378301695,
            "class_probabilities": {
                "human": 0,
                "ai": 0.9984800378301695,
                "mixed": 0.0015199621698304396
            },
            "average_generated_prob": 1,
            "predicted_class": "ai",
            "confidence_score": 0.9984800378301695,
            "confidence_category": "high",
            "confidence_scores_raw": {
                "identity": {
                    "ai": 0.9984800378301695,
                    "human": 0,
                    "mixed": 0.0015199621698304396
                }
            },
            "confidence_thresholds_raw": {
                "identity": {
                    "ai": {
                        "reject": 0.65,
                        "low": 0.75,
                        "medium": 0.92
                    },
                    "human": {
                        "reject": 0.7,
                        "low": 0.82,
                        "medium": 0.92
                    },
                    "mixed": {
                        "reject": 0.7,
                        "low": 0.8,
                        "medium": 0.88
                    }
                }
            },
            "overall_burstiness": 0,
            "writing_stats": {},
            "subclass": {
                "ai": {
                    "predicted_class": "pure_ai",
                    "result_message": "",
                    "confidence_score": 0.9999999998,
                    "confidence_category": "high",
                    "class_probabilities": {
                        "pure_ai": 0.9999999999,
                        "ai_paraphrased": 9.999999997e-11
                    },
                    "confidence_scores_raw": {
                        "identity": {
                            "pure_ai": 0.9999999998,
                            "ai_paraphrased": 9.999999997e-11
                        }
                    },
                    "confidence_thresholds_raw": {
                        "identity": {
                            "pure_ai": {
                                "reject": 0.65,
                                "low": 0.75,
                                "medium": 0.92
                            },
                            "ai_paraphrased": {
                                "reject": 0.85,
                                "low": 0.9,
                                "medium": 0.95
                            }
                        }
                    }
                },
                "human": {},
                "mixed": {}
            },
            "result_message": "Our detector is highly confident that the text is written by AI.",
            "document_classification": "AI_ONLY",
            "version": "2025-01-09-base",
            "language": "en",
            "inputText": "This manuscript presents a pioneering approach to compiling arithmetic circuits (ACs) for graphical models by leveraging the multiplication of Probabilistic Sentential Decision Diagrams (PSDDs), which represent a novel connection between arithmetic circuits and PSDDs. The compilation sizes and times achieved through this PSDD-based method demonstrate significant improvements over existing compilers, underscoring the efficiency and simplicity of this new methodology for AC construction. The clarity of the paper is outstanding, and in my view, it warrants acceptance with only minor revisions. \nOne potential refinement could be reconsidering the title to better reflect the core contributions, such as \"Efficient Arithmetic Circuit Compilation for Graphical Models via PSDD Multiplication,\" which more succinctly captures the essence of the paper's innovations. \nRegarding terminology, it's worth exploring whether PSDDs could be more broadly categorized as Algebraic Sentential Decision Diagrams (ASDDs), given their relationship to Sentential Decision Diagrams (SDDs) and the fact that their numerical evaluations sum to one, akin to the relationship between Binary Decision Diagrams (BDDs) and Algebraic Decision Diagrams (ADDs). This consideration arises from the discussion on factors versus probabilities, suggesting that ASDD might offer a more encompassing terminology.\nTheorem 1 posits that both decomposability and determinism are crucial for efficient inference, presumably achieving linear time complexity in the size of the AC. It would be beneficial for the authors to elucidate why the absence of these properties hinders tractable inference. There seems to be a misconception that any AC representation of a graphical model inherently allows for linear time inference in the size of the AC. If this misconception is correct, it raises the question of whether a straightforward PSDD multiplication algorithm, which does not preserve decomposability and determinism, could still yield efficient inference in the resulting AC.\nIn Algorithm 1, the implementation details of the cache (line 19) are not explicitly stated. Clarification on whether this cache operates under the assumption that all subcircuits are recursively cached, thereby maintaining a unique ID for all PSDDs (similar to ADDs), would be helpful. This explanation is critical for understanding the efficient implementation of the Multiply algorithm.\nThe discussion in Section 6 touching upon AOMDDs leaves unclear the distinctions between PSDDs and AOMDDs. Further elaboration by the authors on the differences between these two would provide valuable insight and enhance the comprehension of the manuscript's contributions."
        }
    ]
}