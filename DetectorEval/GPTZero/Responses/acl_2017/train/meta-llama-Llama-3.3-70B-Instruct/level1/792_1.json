{
    "version": "2025-01-09-base",
    "scanId": "cf097c65-141e-4925-8232-87291d9c21e8",
    "documents": [
        {
            "sentences": [
                {
                    "generated_prob": 0.9999992251396179,
                    "sentence": "This paper presents a novel approach to learning word and sense embeddings using a bidirectional Long Short-Term Memory (LSTM) architecture, called LSTMEmbed.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999993443489075,
                    "sentence": "The main contributions of this work are:",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.999999463558197,
                    "sentence": "1. Introduction of LSTMEmbed: A new model that leverages a bidirectional LSTM to learn word and sense embeddings, outperforming classical approaches such as word2vec and GloVe.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.999999463558197,
                    "sentence": "2. Incorporation of semantic knowledge: The model uses pretrained embeddings to inject semantic information, improving the quality of the learned representations.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999992251396179,
                    "sentence": "3. Joint learning of word and sense embeddings: The LSTMEmbedSW extension learns both word and sense embeddings in a shared vector space, allowing for a more comprehensive representation of language.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999987483024597,
                    "sentence": "The strengths of this paper are:",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9999992251396179,
                    "sentence": "1. State-of-the-art results: LSTMEmbed achieves competitive results on various word similarity and synonym identification tasks, outperforming other approaches such as word2vec and GloVe.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.999998927116394,
                    "sentence": "2. Effective use of semantic knowledge: The incorporation of pretrained embeddings improves the quality of the learned representations, demonstrating the importance of semantic knowledge in language modeling.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9971131086349487,
                    "sentence": "3. Novel architecture: The bidirectional LSTM architecture is well-suited for learning sequence representations, and the introduction of an output layer that predicts pretrained embeddings is a innovative idea.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9994672536849976,
                    "sentence": "The weaknesses of this paper are:",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9997560381889343,
                    "sentence": "1. Complexity of the model: The LSTMEmbed architecture is more complex than other approaches, which may make it more difficult to train and optimize.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9998321533203125,
                    "sentence": "2. Limited evaluation: The paper only evaluates the model on a limited set of tasks and datasets, which may not be representative of the model's performance on other tasks and datasets.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9998818039894104,
                    "sentence": "3. Comparison to other systems: The paper only compares the model to a limited set of other approaches, which may not be comprehensive or representative of the state-of-the-art in language modeling.",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9969463348388672,
                    "sentence": "Questions to authors:",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9996421337127686,
                    "sentence": "1. How does the model perform on other tasks, such as language translation or question answering, and how does it compare to other approaches on these tasks?",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9995688199996948,
                    "sentence": "2. Can the model be extended to learn representations for other types of linguistic units, such as phrases or sentences?",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                },
                {
                    "generated_prob": 0.9995102882385254,
                    "sentence": "3. How does the model handle out-of-vocabulary words, and can it be adapted to learn representations for words that are not seen during training?",
                    "perplexity": 0,
                    "highlight_sentence_for_ai": true
                }
            ],
            "paragraphs": [
                {
                    "start_sentence_index": 0,
                    "num_sentences": 2,
                    "completely_generated_prob": 0.8254776901813464
                },
                {
                    "start_sentence_index": 2,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 3,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 4,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 5,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 6,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 7,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 8,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 9,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 10,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 11,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 12,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 13,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 14,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 15,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                },
                {
                    "start_sentence_index": 16,
                    "num_sentences": 1,
                    "completely_generated_prob": 0.8181818033057853
                }
            ],
            "completely_generated_prob": 0.9984984300152882,
            "class_probabilities": {
                "human": 0,
                "ai": 0.9984984300152882,
                "mixed": 0.0015015699847118259
            },
            "average_generated_prob": 1,
            "predicted_class": "ai",
            "confidence_score": 0.9984984300152882,
            "confidence_category": "high",
            "confidence_scores_raw": {
                "identity": {
                    "ai": 0.9984984300152882,
                    "human": 0,
                    "mixed": 0.0015015699847118259
                }
            },
            "confidence_thresholds_raw": {
                "identity": {
                    "ai": {
                        "reject": 0.65,
                        "low": 0.75,
                        "medium": 0.92
                    },
                    "human": {
                        "reject": 0.7,
                        "low": 0.82,
                        "medium": 0.92
                    },
                    "mixed": {
                        "reject": 0.7,
                        "low": 0.8,
                        "medium": 0.88
                    }
                }
            },
            "overall_burstiness": 0,
            "writing_stats": {},
            "subclass": {
                "ai": {
                    "predicted_class": "pure_ai",
                    "result_message": "",
                    "confidence_score": 0.9999999998,
                    "confidence_category": "high",
                    "class_probabilities": {
                        "pure_ai": 0.9999999999,
                        "ai_paraphrased": 9.999999997e-11
                    },
                    "confidence_scores_raw": {
                        "identity": {
                            "pure_ai": 0.9999999998,
                            "ai_paraphrased": 9.999999997e-11
                        }
                    },
                    "confidence_thresholds_raw": {
                        "identity": {
                            "pure_ai": {
                                "reject": 0.65,
                                "low": 0.75,
                                "medium": 0.92
                            },
                            "ai_paraphrased": {
                                "reject": 0.85,
                                "low": 0.9,
                                "medium": 0.95
                            }
                        }
                    }
                },
                "human": {},
                "mixed": {}
            },
            "result_message": "Our detector is highly confident that the text is written by AI.",
            "document_classification": "AI_ONLY",
            "version": "2025-01-09-base",
            "language": "en",
            "inputText": "This paper presents a novel approach to learning word and sense embeddings using a bidirectional Long Short-Term Memory (LSTM) architecture, called LSTMEmbed. The main contributions of this work are:\n1. Introduction of LSTMEmbed: A new model that leverages a bidirectional LSTM to learn word and sense embeddings, outperforming classical approaches such as word2vec and GloVe.\n2. Incorporation of semantic knowledge: The model uses pretrained embeddings to inject semantic information, improving the quality of the learned representations.\n3. Joint learning of word and sense embeddings: The LSTMEmbedSW extension learns both word and sense embeddings in a shared vector space, allowing for a more comprehensive representation of language.\nThe strengths of this paper are:\n1. State-of-the-art results: LSTMEmbed achieves competitive results on various word similarity and synonym identification tasks, outperforming other approaches such as word2vec and GloVe.\n2. Effective use of semantic knowledge: The incorporation of pretrained embeddings improves the quality of the learned representations, demonstrating the importance of semantic knowledge in language modeling.\n3. Novel architecture: The bidirectional LSTM architecture is well-suited for learning sequence representations, and the introduction of an output layer that predicts pretrained embeddings is a innovative idea.\nThe weaknesses of this paper are:\n1. Complexity of the model: The LSTMEmbed architecture is more complex than other approaches, which may make it more difficult to train and optimize.\n2. Limited evaluation: The paper only evaluates the model on a limited set of tasks and datasets, which may not be representative of the model's performance on other tasks and datasets.\n3. Comparison to other systems: The paper only compares the model to a limited set of other approaches, which may not be comprehensive or representative of the state-of-the-art in language modeling.\nQuestions to authors:\n1. How does the model perform on other tasks, such as language translation or question answering, and how does it compare to other approaches on these tasks?\n2. Can the model be extended to learn representations for other types of linguistic units, such as phrases or sentences?\n3. How does the model handle out-of-vocabulary words, and can it be adapted to learn representations for words that are not seen during training?"
        }
    ]
}